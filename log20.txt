[0m[[0minfo[0m] [0mLoading project definition from /Users/glyph/Documents/sbt/scalagamerepo/project[0m
[0m[[0minfo[0m] [0mSet current project to android (in build file:/Users/glyph/Documents/sbt/scalagamerepo/)[0m
[0m[[0minfo[0m] [0mCompiling 1 Scala source to /Users/glyph/Documents/sbt/scalagamerepo/common/target/scala-2.10/classes...[0m
before
def initialize[T >: _root_.scala.Nothing <: Panel](size: Int)(implicit evidence$1: ClassTag[T]): Puzzle[T] = ArrayBuffer((0.until(size).toList.as(ArrayBuffer()): _*))
after
def initialize[T >: _root_.scala.Nothing <: Panel](size: Int)(implicit evidence$1: ClassTag[T]): Puzzle[T] = {
  val _$started = System.nanoTime;
  val _$result: Puzzle[T] = ArrayBuffer((0.until(size).toList.as(ArrayBuffer()): _*));
  val _$finished = System.nanoTime;
  scala.Predef.println("(GMatch3,initialize)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def included[T >: _root_.scala.Nothing <: Panel](sets: MatchedSet[T], target: MatchedSet[T]): Boolean = target.forall(sets.contains)
after
def included[T >: _root_.scala.Nothing <: Panel](sets: MatchedSet[T], target: MatchedSet[T]): Boolean = {
  val _$started = System.nanoTime;
  val _$result: Boolean = target.forall(sets.contains);
  val _$finished = System.nanoTime;
  scala.Predef.println("(GMatch3,included)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def toIndexMap[T >: _root_.scala.Nothing <: _root_.scala.Any](puzzle: IndexedSeq[IndexedSeq[T]]): Map[T, scala.Tuple2[Int, Int]] = puzzle.zipWithIndex.flatMap(<empty> match {
  case scala.Tuple2((row @ _), (x @ _)) => row.zipWithIndex.map(<empty> match {
    case scala.Tuple2((p @ _), (y @ _)) => p.$minus$greater(x, y)
  })
}).toMap
after
def toIndexMap[T >: _root_.scala.Nothing <: _root_.scala.Any](puzzle: IndexedSeq[IndexedSeq[T]]): Map[T, scala.Tuple2[Int, Int]] = {
  val _$started = System.nanoTime;
  val _$result: Map[T, scala.Tuple2[Int, Int]] = puzzle.zipWithIndex.flatMap(<empty> match {
  case scala.Tuple2((row @ _), (x @ _)) => row.zipWithIndex.map(<empty> match {
    case scala.Tuple2((p @ _), (y @ _)) => p.$minus$greater(x, y)
  })
}).toMap;
  val _$finished = System.nanoTime;
  scala.Predef.println("(GMatch3,toIndexMap)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def scanIndexedWithException[T >: _root_.scala.Nothing <: Panel](puzzle: Puzzle[T])(x: Int)(y: Int)(exception: _root_.scala.Function1[T, Boolean])(right: Boolean): MatchedSet[T] = {
  val W = puzzle.size;
  var matches = {
    <synthetic> val x$1 = scala.Tuple3(puzzle(x)(y), x, y);
    Nil.$colon$colon(x$1)
  };
  if (x.$less(W))
    {
      val H = puzzle(x).size;
      var current = puzzle(x)(y);
      if (right)
        {
          var nx = x.$plus(1);
          while$1(){
            if (nx.$less(W).$amp$amp(y.$less(puzzle(nx).size)).$amp$amp(current.matchTo(puzzle(nx)(y))).$amp$amp(exception(current).unary_$bang))
              {
                {
                  matches.$colon$colon$eq(puzzle(nx)(y), nx, y);
                  current = puzzle(nx)(y);
                  nx.$plus$eq(1)
                };
                while$1()
              }
            else
              ()
          }
        }
      else
        {
          var ny = y.$plus(1);
          while$2(){
            if (ny.$less(H).$amp$amp(current.matchTo(puzzle(x)(ny))).$amp$amp(exception(current).unary_$bang))
              {
                {
                  matches.$colon$colon$eq(puzzle(x)(ny), x, ny);
                  current = puzzle(x)(ny);
                  ny.$plus$eq(1)
                };
                while$2()
              }
            else
              ()
          }
        }
    }
  else
    ();
  matches
}
after
def scanIndexedWithException[T >: _root_.scala.Nothing <: Panel](puzzle: Puzzle[T])(x: Int)(y: Int)(exception: _root_.scala.Function1[T, Boolean])(right: Boolean): MatchedSet[T] = {
  val _$started = System.nanoTime;
  val _$result: MatchedSet[T] = {
    val W = puzzle.size;
    var matches = {
      <synthetic> val x$1 = scala.Tuple3(puzzle(x)(y), x, y);
      Nil.$colon$colon(x$1)
    };
    if (x.$less(W))
      {
        val H = puzzle(x).size;
        var current = puzzle(x)(y);
        if (right)
          {
            var nx = x.$plus(1);
            while$1(){
              if (nx.$less(W).$amp$amp(y.$less(puzzle(nx).size)).$amp$amp(current.matchTo(puzzle(nx)(y))).$amp$amp(exception(current).unary_$bang))
                {
                  {
                    matches.$colon$colon$eq(puzzle(nx)(y), nx, y);
                    current = puzzle(nx)(y);
                    nx.$plus$eq(1)
                  };
                  while$1()
                }
              else
                ()
            }
          }
        else
          {
            var ny = y.$plus(1);
            while$2(){
              if (ny.$less(H).$amp$amp(current.matchTo(puzzle(x)(ny))).$amp$amp(exception(current).unary_$bang))
                {
                  {
                    matches.$colon$colon$eq(puzzle(x)(ny), x, ny);
                    current = puzzle(x)(ny);
                    ny.$plus$eq(1)
                  };
                  while$2()
                }
              else
                ()
            }
          }
      }
    else
      ();
    matches
  };
  val _$finished = System.nanoTime;
  scala.Predef.println("(GMatch3,scanIndexedWithException)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def segment[T >: _root_.scala.Nothing <: _root_.scala.Any](line: List[T])(divider: _root_.scala.Function1[T, Boolean]): List[List[T]] = {
  def rec(seq: List[T], processing: List[T]): List[List[T]] = seq match {
    case Nil => {
      <synthetic> val x$2 = processing;
      Nil.$colon$colon(x$2)
    }
    case $colon$colon((head @ _), (tail @ _)) => if (divider(head))
      rec(tail, {
        <synthetic> val x$3 = head;
        processing.$colon$colon(x$3)
      })
    else
      {
        <synthetic> val x$5 = processing;
        rec(tail, {
  <synthetic> val x$4 = head;
  Nil.$colon$colon(x$4)
}).$colon$colon(x$5)
      }
  };
  rec(line, Nil)
}
after
def segment[T >: _root_.scala.Nothing <: _root_.scala.Any](line: List[T])(divider: _root_.scala.Function1[T, Boolean]): List[List[T]] = {
  val _$started = System.nanoTime;
  val _$result: List[List[T]] = {
    def rec(seq: List[T], processing: List[T]): List[List[T]] = seq match {
      case Nil => {
        <synthetic> val x$2 = processing;
        Nil.$colon$colon(x$2)
      }
      case $colon$colon((head @ _), (tail @ _)) => if (divider(head))
        rec(tail, {
          <synthetic> val x$3 = head;
          processing.$colon$colon(x$3)
        })
      else
        {
          <synthetic> val x$5 = processing;
          rec(tail, {
  <synthetic> val x$4 = head;
  Nil.$colon$colon(x$4)
}).$colon$colon(x$5)
        }
    };
    rec(line, Nil)
  };
  val _$finished = System.nanoTime;
  scala.Predef.println("(GMatch3,segment)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def segment2[T >: _root_.scala.Nothing <: _root_.scala.Any](line: List[T])(filter: _root_.scala.Function2[T, T, Boolean]): List[List[T]] = {
  @new tailrec() def rec(seq: List[T], buffer: List[T], result: List[List[T]]): List[List[T]] = seq match {
    case Nil => {
      <synthetic> val x$6 = buffer;
      result.$colon$colon(x$6)
    }
    case $colon$colon((head @ _), Nil) => {
      <synthetic> val x$8 = {
        <synthetic> val x$7 = head;
        buffer.$colon$colon(x$7)
      };
      result.$colon$colon(x$8)
    }
    case $colon$colon((first @ _), $colon$colon((second @ _), (tail @ _))) => if (filter(first, second))
      rec({
        <synthetic> val x$9 = second;
        tail.$colon$colon(x$9)
      }, {
        <synthetic> val x$10 = first;
        buffer.$colon$colon(x$10)
      }, result)
    else
      rec({
        <synthetic> val x$11 = second;
        tail.$colon$colon(x$11)
      }, Nil, {
        <synthetic> val x$13 = {
          <synthetic> val x$12 = first;
          buffer.$colon$colon(x$12)
        };
        result.$colon$colon(x$13)
      })
  };
  rec(line, Nil, Nil)
}
after
def segment2[T >: _root_.scala.Nothing <: _root_.scala.Any](line: List[T])(filter: _root_.scala.Function2[T, T, Boolean]): List[List[T]] = {
  val _$started = System.nanoTime;
  val _$result: List[List[T]] = {
    @new tailrec() def rec(seq: List[T], buffer: List[T], result: List[List[T]]): List[List[T]] = seq match {
      case Nil => {
        <synthetic> val x$6 = buffer;
        result.$colon$colon(x$6)
      }
      case $colon$colon((head @ _), Nil) => {
        <synthetic> val x$8 = {
          <synthetic> val x$7 = head;
          buffer.$colon$colon(x$7)
        };
        result.$colon$colon(x$8)
      }
      case $colon$colon((first @ _), $colon$colon((second @ _), (tail @ _))) => if (filter(first, second))
        rec({
          <synthetic> val x$9 = second;
          tail.$colon$colon(x$9)
        }, {
          <synthetic> val x$10 = first;
          buffer.$colon$colon(x$10)
        }, result)
      else
        rec({
          <synthetic> val x$11 = second;
          tail.$colon$colon(x$11)
        }, Nil, {
          <synthetic> val x$13 = {
            <synthetic> val x$12 = first;
            buffer.$colon$colon(x$12)
          };
          result.$colon$colon(x$13)
        })
    };
    rec(line, Nil, Nil)
  };
  val _$finished = System.nanoTime;
  scala.Predef.println("(GMatch3,segment2)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def verticalLine[T >: _root_.scala.Nothing <: _root_.scala.Any](puzzle: IndexedSeq[IndexedSeq[T]])(x: Int)(y: Int)(height: Int): List[T] = {
  val W = puzzle.size;
  var result = List.empty[T];
  if (x.$less(W))
    {
      val row = puzzle(x);
      val H = row.size;
      var ny = y;
      while$3(){
        if (ny.$less(height))
          {
            {
              if (ny.$less(H))
                result.$colon$colon$eq(row(ny))
              else
                result.$colon$colon$eq(null.asInstanceOf[T]);
              ny.$plus$eq(1)
            };
            while$3()
          }
        else
          ()
      }
    }
  else
    {
      var ny = y;
      while$4(){
        if (ny.$less(height))
          {
            {
              result.$colon$colon$eq(null.asInstanceOf[T]);
              ny.$plus$eq(1)
            };
            while$4()
          }
        else
          ()
      }
    };
  result
}
after
def verticalLine[T >: _root_.scala.Nothing <: _root_.scala.Any](puzzle: IndexedSeq[IndexedSeq[T]])(x: Int)(y: Int)(height: Int): List[T] = {
  val _$started = System.nanoTime;
  val _$result: List[T] = {
    val W = puzzle.size;
    var result = List.empty[T];
    if (x.$less(W))
      {
        val row = puzzle(x);
        val H = row.size;
        var ny = y;
        while$3(){
          if (ny.$less(height))
            {
              {
                if (ny.$less(H))
                  result.$colon$colon$eq(row(ny))
                else
                  result.$colon$colon$eq(null.asInstanceOf[T]);
                ny.$plus$eq(1)
              };
              while$3()
            }
          else
            ()
        }
      }
    else
      {
        var ny = y;
        while$4(){
          if (ny.$less(height))
            {
              {
                result.$colon$colon$eq(null.asInstanceOf[T]);
                ny.$plus$eq(1)
              };
              while$4()
            }
          else
            ()
        }
      };
    result
  };
  val _$finished = System.nanoTime;
  scala.Predef.println("(GMatch3,verticalLine)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def horizontalLine[T >: _root_.scala.Nothing <: _root_.scala.Any](puzzle: IndexedSeq[IndexedSeq[T]])(x: Int)(y: Int)(width: Int): List[T] = {
  val W = puzzle.size;
  var result = List.empty[T];
  var nx = x;
  while$5(){
    if (nx.$less(width))
      {
        {
          if (nx.$less(W))
            {
              val row = puzzle(nx);
              val H = row.size;
              if (y.$less(H))
                result.$colon$colon$eq(row(y))
              else
                result.$colon$colon$eq(null.asInstanceOf[T])
            }
          else
            result.$colon$colon$eq(null.asInstanceOf[T]);
          nx.$plus$eq(1)
        };
        while$5()
      }
    else
      ()
  };
  result
}
after
def horizontalLine[T >: _root_.scala.Nothing <: _root_.scala.Any](puzzle: IndexedSeq[IndexedSeq[T]])(x: Int)(y: Int)(width: Int): List[T] = {
  val _$started = System.nanoTime;
  val _$result: List[T] = {
    val W = puzzle.size;
    var result = List.empty[T];
    var nx = x;
    while$5(){
      if (nx.$less(width))
        {
          {
            if (nx.$less(W))
              {
                val row = puzzle(nx);
                val H = row.size;
                if (y.$less(H))
                  result.$colon$colon$eq(row(y))
                else
                  result.$colon$colon$eq(null.asInstanceOf[T])
              }
            else
              result.$colon$colon$eq(null.asInstanceOf[T]);
            nx.$plus$eq(1)
          };
          while$5()
        }
      else
        ()
    };
    result
  };
  val _$finished = System.nanoTime;
  scala.Predef.println("(GMatch3,horizontalLine)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def allLine[T >: _root_.scala.Nothing <: _root_.scala.Any](puzzle: IndexedSeq[IndexedSeq[T]])(width: Int)(height: Int): List[List[T]] = {
  var result: List[List[T]] = Nil;
  var x = 0;
  while$6(){
    if (x.$less(width))
      {
        {
          result.$colon$colon$eq(verticalLine(puzzle)(x)(0)(height));
          x.$plus$eq(1)
        };
        while$6()
      }
    else
      ()
  };
  var y = 0;
  while$7(){
    if (y.$less(height))
      {
        {
          result.$colon$colon$eq(horizontalLine(puzzle)(0)(y)(width));
          y.$plus$eq(1)
        };
        while$7()
      }
    else
      ()
  };
  result
}
after
def allLine[T >: _root_.scala.Nothing <: _root_.scala.Any](puzzle: IndexedSeq[IndexedSeq[T]])(width: Int)(height: Int): List[List[T]] = {
  val _$started = System.nanoTime;
  val _$result: List[List[T]] = {
    var result: List[List[T]] = Nil;
    var x = 0;
    while$6(){
      if (x.$less(width))
        {
          {
            result.$colon$colon$eq(verticalLine(puzzle)(x)(0)(height));
            x.$plus$eq(1)
          };
          while$6()
        }
      else
        ()
    };
    var y = 0;
    while$7(){
      if (y.$less(height))
        {
          {
            result.$colon$colon$eq(horizontalLine(puzzle)(0)(y)(width));
            y.$plus$eq(1)
          };
          while$7()
        }
      else
        ()
    };
    result
  };
  val _$finished = System.nanoTime;
  scala.Predef.println("(GMatch3,allLine)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def scanAll[T >: _root_.scala.Nothing <: _root_.scala.Any](puzzle: IndexedSeq[IndexedSeq[T]])(width: Int)(height: Int)(filter: _root_.scala.Function2[T, T, Boolean]): Seq[Seq[T]] = allLine(puzzle)(width)(height).flatMap(((x$14) => segment2(x$14)(filter)))
after
def scanAll[T >: _root_.scala.Nothing <: _root_.scala.Any](puzzle: IndexedSeq[IndexedSeq[T]])(width: Int)(height: Int)(filter: _root_.scala.Function2[T, T, Boolean]): Seq[Seq[T]] = {
  val _$started = System.nanoTime;
  val _$result: Seq[Seq[T]] = allLine(puzzle)(width)(height).flatMap(((x$14) => segment2(x$14)(filter)));
  val _$finished = System.nanoTime;
  scala.Predef.println("(GMatch3,scanAll)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def scanBy[T >: _root_.scala.Nothing <: Panel](puzzle: Puzzle[T])(scanner: _root_.scala.Function1[Int, _root_.scala.Function1[Int, _root_.scala.Function1[Boolean, MatchedSet[T]]]]): Seq[MatchedSet[T]] = {
  val result = mutable.ArrayBuffer[MatchedSet[T]]();
  var x = 0;
  val width = puzzle.size;
  while$11(){
    if (x.$less(width))
      {
        {
          var y = 0;
          val height = puzzle(x).size;
          while$10(){
            if (y.$less(height))
              {
                {
                  var vertical = false;
                  var flipCount = 0;
                  while$9(){
                    if (flipCount.$less(2))
                      {
                        {
                          val set = scanner(x)(y)(vertical);
                          var i = 0;
                          val l = result.length;
                          var noNeedToAdd = false;
                          while$8(){
                            if (i.$less(l))
                              {
                                {
                                  val current = result(i);
                                  val inc = included(result(i), set);
                                  noNeedToAdd.$bar$eq(inc);
                                  val needReplace = current.size.$less(set.size).$amp$amp(inc);
                                  if (needReplace)
                                    result.update(i, set)
                                  else
                                    ();
                                  i.$plus$eq(1)
                                };
                                while$8()
                              }
                            else
                              ()
                          };
                          if (noNeedToAdd.unary_$bang.$amp$amp(set.$bang$eq(Nil)))
                            result.$plus$eq(set)
                          else
                            ();
                          vertical = vertical.unary_$bang;
                          flipCount.$plus$eq(1)
                        };
                        while$9()
                      }
                    else
                      ()
                  };
                  y.$plus$eq(1)
                };
                while$10()
              }
            else
              ()
          };
          x.$plus$eq(1)
        };
        while$11()
      }
    else
      ()
  };
  result
}
after
def scanBy[T >: _root_.scala.Nothing <: Panel](puzzle: Puzzle[T])(scanner: _root_.scala.Function1[Int, _root_.scala.Function1[Int, _root_.scala.Function1[Boolean, MatchedSet[T]]]]): Seq[MatchedSet[T]] = {
  val _$started = System.nanoTime;
  val _$result: Seq[MatchedSet[T]] = {
    val result = mutable.ArrayBuffer[MatchedSet[T]]();
    var x = 0;
    val width = puzzle.size;
    while$11(){
      if (x.$less(width))
        {
          {
            var y = 0;
            val height = puzzle(x).size;
            while$10(){
              if (y.$less(height))
                {
                  {
                    var vertical = false;
                    var flipCount = 0;
                    while$9(){
                      if (flipCount.$less(2))
                        {
                          {
                            val set = scanner(x)(y)(vertical);
                            var i = 0;
                            val l = result.length;
                            var noNeedToAdd = false;
                            while$8(){
                              if (i.$less(l))
                                {
                                  {
                                    val current = result(i);
                                    val inc = included(result(i), set);
                                    noNeedToAdd.$bar$eq(inc);
                                    val needReplace = current.size.$less(set.size).$amp$amp(inc);
                                    if (needReplace)
                                      result.update(i, set)
                                    else
                                      ();
                                    i.$plus$eq(1)
                                  };
                                  while$8()
                                }
                              else
                                ()
                            };
                            if (noNeedToAdd.unary_$bang.$amp$amp(set.$bang$eq(Nil)))
                              result.$plus$eq(set)
                            else
                              ();
                            vertical = vertical.unary_$bang;
                            flipCount.$plus$eq(1)
                          };
                          while$9()
                        }
                      else
                        ()
                    };
                    y.$plus$eq(1)
                  };
                  while$10()
                }
              else
                ()
            };
            x.$plus$eq(1)
          };
          while$11()
        }
      else
        ()
    };
    result
  };
  val _$finished = System.nanoTime;
  scala.Predef.println("(GMatch3,scanBy)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def createFilling[T >: _root_.scala.Nothing <: Panel](puzzle: Puzzle[T])(seed: _root_.scala.Function0[T], col: Int): Events[T] = 0.until(puzzle.size).flatMap(((x) => puzzle(x).size.until(col).map(((y) => scala.Tuple3(seed(), x, y)))))
after
def createFilling[T >: _root_.scala.Nothing <: Panel](puzzle: Puzzle[T])(seed: _root_.scala.Function0[T], col: Int): Events[T] = {
  val _$started = System.nanoTime;
  val _$result: Events[T] = 0.until(puzzle.size).flatMap(((x) => puzzle(x).size.until(col).map(((y) => scala.Tuple3(seed(), x, y)))));
  val _$finished = System.nanoTime;
  scala.Predef.println("(GMatch3,createFilling)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def createFillingPuzzle[T >: _root_.scala.Nothing <: Panel](puzzle: Puzzle[T])(seed: _root_.scala.Function0[T], col: Int): Puzzle[T] = 0.until(puzzle.size).map(((x) => puzzle(x).size.until(col).map(((y) => seed()))))
after
def createFillingPuzzle[T >: _root_.scala.Nothing <: Panel](puzzle: Puzzle[T])(seed: _root_.scala.Function0[T], col: Int): Puzzle[T] = {
  val _$started = System.nanoTime;
  val _$result: Puzzle[T] = 0.until(puzzle.size).map(((x) => puzzle(x).size.until(col).map(((y) => seed()))));
  val _$finished = System.nanoTime;
  scala.Predef.println("(GMatch3,createFillingPuzzle)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def scanAllWithException[T >: _root_.scala.Nothing <: Panel](puzzle: Puzzle[T])(matchLength: Int)(exception: _root_.scala.Function1[T, Boolean]) = scanBy(puzzle)(((x) => ((y) => ((right) => scanIndexedWithException(puzzle)(x)(y)(exception)(right))))).filter(((x$15) => x$15.length.$greater$eq(matchLength)))
after
def scanAllWithException[T >: _root_.scala.Nothing <: Panel](puzzle: Puzzle[T])(matchLength: Int)(exception: _root_.scala.Function1[T, Boolean]) = {
  val _$started = System.nanoTime;
  val _$result = scanBy(puzzle)(((x) => ((y) => ((right) => scanIndexedWithException(puzzle)(x)(y)(exception)(right))))).filter(((x$15) => x$15.length.$greater$eq(matchLength)));
  val _$finished = System.nanoTime;
  scala.Predef.println("(GMatch3,scanAllWithException)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def calcNextIndices[T >: _root_.scala.Nothing <: Panel](left: Puzzle[T])(floatings: Puzzle[T]): Seq[scala.Tuple2[T, scala.Tuple2[Int, Int]]] = {
  val appended = left.append(floatings);
  floatings.flatten.map(((p) => scala.Tuple2(p, appended.indexOfPanelUnhandled(p))))
}
after
def calcNextIndices[T >: _root_.scala.Nothing <: Panel](left: Puzzle[T])(floatings: Puzzle[T]): Seq[scala.Tuple2[T, scala.Tuple2[Int, Int]]] = {
  val _$started = System.nanoTime;
  val _$result: Seq[scala.Tuple2[T, scala.Tuple2[Int, Int]]] = {
    val appended = left.append(floatings);
    floatings.flatten.map(((p) => scala.Tuple2(p, appended.indexOfPanelUnhandled(p))))
  };
  val _$finished = System.nanoTime;
  scala.Predef.println("(GMatch3,calcNextIndices)".$plus(_$finished.$minus(_$started)));
  _$result
}
result:
object GMatch3 extends scala.AnyRef {
  def <init>() = {
    super.<init>();
    ()
  };
  import scala.util.control.Exception._;
  abstract trait Panel extends scala.AnyRef {
    def matchTo(panel: Panel): Boolean
  };
  type Event[T >: _root_.scala.Nothing <: Panel] = scala.Tuple3[T, Int, Int];
  type MatchedSet[T >: _root_.scala.Nothing <: Panel] = Seq[Event[T]];
  type Events[T >: _root_.scala.Nothing <: Panel] = Seq[Event[T]];
  type Puzzle[T >: _root_.scala.Nothing <: Panel] = IndexedSeq[IndexedSeq[T]];
  def initialize[T >: _root_.scala.Nothing <: Panel](size: Int)(implicit evidence$1: ClassTag[T]): Puzzle[T] = {
    val _$started = System.nanoTime;
    val _$result: Puzzle[T] = ArrayBuffer((0.until(size).toList.as(ArrayBuffer()): _*));
    val _$finished = System.nanoTime;
    scala.Predef.println("(GMatch3,initialize)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def included[T >: _root_.scala.Nothing <: Panel](sets: MatchedSet[T], target: MatchedSet[T]): Boolean = {
    val _$started = System.nanoTime;
    val _$result: Boolean = target.forall(sets.contains);
    val _$finished = System.nanoTime;
    scala.Predef.println("(GMatch3,included)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def toIndexMap[T >: _root_.scala.Nothing <: _root_.scala.Any](puzzle: IndexedSeq[IndexedSeq[T]]): Map[T, scala.Tuple2[Int, Int]] = {
    val _$started = System.nanoTime;
    val _$result: Map[T, scala.Tuple2[Int, Int]] = puzzle.zipWithIndex.flatMap(<empty> match {
  case scala.Tuple2((row @ _), (x @ _)) => row.zipWithIndex.map(<empty> match {
    case scala.Tuple2((p @ _), (y @ _)) => p.$minus$greater(x, y)
  })
}).toMap;
    val _$finished = System.nanoTime;
    scala.Predef.println("(GMatch3,toIndexMap)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def scanIndexedWithException[T >: _root_.scala.Nothing <: Panel](puzzle: Puzzle[T])(x: Int)(y: Int)(exception: _root_.scala.Function1[T, Boolean])(right: Boolean): MatchedSet[T] = {
    val _$started = System.nanoTime;
    val _$result: MatchedSet[T] = {
      val W = puzzle.size;
      var matches = {
        <synthetic> val x$1 = scala.Tuple3(puzzle(x)(y), x, y);
        Nil.$colon$colon(x$1)
      };
      if (x.$less(W))
        {
          val H = puzzle(x).size;
          var current = puzzle(x)(y);
          if (right)
            {
              var nx = x.$plus(1);
              while$1(){
                if (nx.$less(W).$amp$amp(y.$less(puzzle(nx).size)).$amp$amp(current.matchTo(puzzle(nx)(y))).$amp$amp(exception(current).unary_$bang))
                  {
                    {
                      matches.$colon$colon$eq(puzzle(nx)(y), nx, y);
                      current = puzzle(nx)(y);
                      nx.$plus$eq(1)
                    };
                    while$1()
                  }
                else
                  ()
              }
            }
          else
            {
              var ny = y.$plus(1);
              while$2(){
                if (ny.$less(H).$amp$amp(current.matchTo(puzzle(x)(ny))).$amp$amp(exception(current).unary_$bang))
                  {
                    {
                      matches.$colon$colon$eq(puzzle(x)(ny), x, ny);
                      current = puzzle(x)(ny);
                      ny.$plus$eq(1)
                    };
                    while$2()
                  }
                else
                  ()
              }
            }
        }
      else
        ();
      matches
    };
    val _$finished = System.nanoTime;
    scala.Predef.println("(GMatch3,scanIndexedWithException)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def segment[T >: _root_.scala.Nothing <: _root_.scala.Any](line: List[T])(divider: _root_.scala.Function1[T, Boolean]): List[List[T]] = {
    val _$started = System.nanoTime;
    val _$result: List[List[T]] = {
      def rec(seq: List[T], processing: List[T]): List[List[T]] = seq match {
        case Nil => {
          <synthetic> val x$2 = processing;
          Nil.$colon$colon(x$2)
        }
        case $colon$colon((head @ _), (tail @ _)) => if (divider(head))
          rec(tail, {
            <synthetic> val x$3 = head;
            processing.$colon$colon(x$3)
          })
        else
          {
            <synthetic> val x$5 = processing;
            rec(tail, {
  <synthetic> val x$4 = head;
  Nil.$colon$colon(x$4)
}).$colon$colon(x$5)
          }
      };
      rec(line, Nil)
    };
    val _$finished = System.nanoTime;
    scala.Predef.println("(GMatch3,segment)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def segment2[T >: _root_.scala.Nothing <: _root_.scala.Any](line: List[T])(filter: _root_.scala.Function2[T, T, Boolean]): List[List[T]] = {
    val _$started = System.nanoTime;
    val _$result: List[List[T]] = {
      @new tailrec() def rec(seq: List[T], buffer: List[T], result: List[List[T]]): List[List[T]] = seq match {
        case Nil => {
          <synthetic> val x$6 = buffer;
          result.$colon$colon(x$6)
        }
        case $colon$colon((head @ _), Nil) => {
          <synthetic> val x$8 = {
            <synthetic> val x$7 = head;
            buffer.$colon$colon(x$7)
          };
          result.$colon$colon(x$8)
        }
        case $colon$colon((first @ _), $colon$colon((second @ _), (tail @ _))) => if (filter(first, second))
          rec({
            <synthetic> val x$9 = second;
            tail.$colon$colon(x$9)
          }, {
            <synthetic> val x$10 = first;
            buffer.$colon$colon(x$10)
          }, result)
        else
          rec({
            <synthetic> val x$11 = second;
            tail.$colon$colon(x$11)
          }, Nil, {
            <synthetic> val x$13 = {
              <synthetic> val x$12 = first;
              buffer.$colon$colon(x$12)
            };
            result.$colon$colon(x$13)
          })
      };
      rec(line, Nil, Nil)
    };
    val _$finished = System.nanoTime;
    scala.Predef.println("(GMatch3,segment2)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def verticalLine[T >: _root_.scala.Nothing <: _root_.scala.Any](puzzle: IndexedSeq[IndexedSeq[T]])(x: Int)(y: Int)(height: Int): List[T] = {
    val _$started = System.nanoTime;
    val _$result: List[T] = {
      val W = puzzle.size;
      var result = List.empty[T];
      if (x.$less(W))
        {
          val row = puzzle(x);
          val H = row.size;
          var ny = y;
          while$3(){
            if (ny.$less(height))
              {
                {
                  if (ny.$less(H))
                    result.$colon$colon$eq(row(ny))
                  else
                    result.$colon$colon$eq(null.asInstanceOf[T]);
                  ny.$plus$eq(1)
                };
                while$3()
              }
            else
              ()
          }
        }
      else
        {
          var ny = y;
          while$4(){
            if (ny.$less(height))
              {
                {
                  result.$colon$colon$eq(null.asInstanceOf[T]);
                  ny.$plus$eq(1)
                };
                while$4()
              }
            else
              ()
          }
        };
      result
    };
    val _$finished = System.nanoTime;
    scala.Predef.println("(GMatch3,verticalLine)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def horizontalLine[T >: _root_.scala.Nothing <: _root_.scala.Any](puzzle: IndexedSeq[IndexedSeq[T]])(x: Int)(y: Int)(width: Int): List[T] = {
    val _$started = System.nanoTime;
    val _$result: List[T] = {
      val W = puzzle.size;
      var result = List.empty[T];
      var nx = x;
      while$5(){
        if (nx.$less(width))
          {
            {
              if (nx.$less(W))
                {
                  val row = puzzle(nx);
                  val H = row.size;
                  if (y.$less(H))
                    result.$colon$colon$eq(row(y))
                  else
                    result.$colon$colon$eq(null.asInstanceOf[T])
                }
              else
                result.$colon$colon$eq(null.asInstanceOf[T]);
              nx.$plus$eq(1)
            };
            while$5()
          }
        else
          ()
      };
      result
    };
    val _$finished = System.nanoTime;
    scala.Predef.println("(GMatch3,horizontalLine)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def allLine[T >: _root_.scala.Nothing <: _root_.scala.Any](puzzle: IndexedSeq[IndexedSeq[T]])(width: Int)(height: Int): List[List[T]] = {
    val _$started = System.nanoTime;
    val _$result: List[List[T]] = {
      var result: List[List[T]] = Nil;
      var x = 0;
      while$6(){
        if (x.$less(width))
          {
            {
              result.$colon$colon$eq(verticalLine(puzzle)(x)(0)(height));
              x.$plus$eq(1)
            };
            while$6()
          }
        else
          ()
      };
      var y = 0;
      while$7(){
        if (y.$less(height))
          {
            {
              result.$colon$colon$eq(horizontalLine(puzzle)(0)(y)(width));
              y.$plus$eq(1)
            };
            while$7()
          }
        else
          ()
      };
      result
    };
    val _$finished = System.nanoTime;
    scala.Predef.println("(GMatch3,allLine)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def scanAll[T >: _root_.scala.Nothing <: _root_.scala.Any](puzzle: IndexedSeq[IndexedSeq[T]])(width: Int)(height: Int)(filter: _root_.scala.Function2[T, T, Boolean]): Seq[Seq[T]] = {
    val _$started = System.nanoTime;
    val _$result: Seq[Seq[T]] = allLine(puzzle)(width)(height).flatMap(((x$14) => segment2(x$14)(filter)));
    val _$finished = System.nanoTime;
    scala.Predef.println("(GMatch3,scanAll)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def scanBy[T >: _root_.scala.Nothing <: Panel](puzzle: Puzzle[T])(scanner: _root_.scala.Function1[Int, _root_.scala.Function1[Int, _root_.scala.Function1[Boolean, MatchedSet[T]]]]): Seq[MatchedSet[T]] = {
    val _$started = System.nanoTime;
    val _$result: Seq[MatchedSet[T]] = {
      val result = mutable.ArrayBuffer[MatchedSet[T]]();
      var x = 0;
      val width = puzzle.size;
      while$11(){
        if (x.$less(width))
          {
            {
              var y = 0;
              val height = puzzle(x).size;
              while$10(){
                if (y.$less(height))
                  {
                    {
                      var vertical = false;
                      var flipCount = 0;
                      while$9(){
                        if (flipCount.$less(2))
                          {
                            {
                              val set = scanner(x)(y)(vertical);
                              var i = 0;
                              val l = result.length;
                              var noNeedToAdd = false;
                              while$8(){
                                if (i.$less(l))
                                  {
                                    {
                                      val current = result(i);
                                      val inc = included(result(i), set);
                                      noNeedToAdd.$bar$eq(inc);
                                      val needReplace = current.size.$less(set.size).$amp$amp(inc);
                                      if (needReplace)
                                        result.update(i, set)
                                      else
                                        ();
                                      i.$plus$eq(1)
                                    };
                                    while$8()
                                  }
                                else
                                  ()
                              };
                              if (noNeedToAdd.unary_$bang.$amp$amp(set.$bang$eq(Nil)))
                                result.$plus$eq(set)
                              else
                                ();
                              vertical = vertical.unary_$bang;
                              flipCount.$plus$eq(1)
                            };
                            while$9()
                          }
                        else
                          ()
                      };
                      y.$plus$eq(1)
                    };
                    while$10()
                  }
                else
                  ()
              };
              x.$plus$eq(1)
            };
            while$11()
          }
        else
          ()
      };
      result
    };
    val _$finished = System.nanoTime;
    scala.Predef.println("(GMatch3,scanBy)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def createFilling[T >: _root_.scala.Nothing <: Panel](puzzle: Puzzle[T])(seed: _root_.scala.Function0[T], col: Int): Events[T] = {
    val _$started = System.nanoTime;
    val _$result: Events[T] = 0.until(puzzle.size).flatMap(((x) => puzzle(x).size.until(col).map(((y) => scala.Tuple3(seed(), x, y)))));
    val _$finished = System.nanoTime;
    scala.Predef.println("(GMatch3,createFilling)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def createFillingPuzzle[T >: _root_.scala.Nothing <: Panel](puzzle: Puzzle[T])(seed: _root_.scala.Function0[T], col: Int): Puzzle[T] = {
    val _$started = System.nanoTime;
    val _$result: Puzzle[T] = 0.until(puzzle.size).map(((x) => puzzle(x).size.until(col).map(((y) => seed()))));
    val _$finished = System.nanoTime;
    scala.Predef.println("(GMatch3,createFillingPuzzle)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def scanAllWithException[T >: _root_.scala.Nothing <: Panel](puzzle: Puzzle[T])(matchLength: Int)(exception: _root_.scala.Function1[T, Boolean]) = {
    val _$started = System.nanoTime;
    val _$result = scanBy(puzzle)(((x) => ((y) => ((right) => scanIndexedWithException(puzzle)(x)(y)(exception)(right))))).filter(((x$15) => x$15.length.$greater$eq(matchLength)));
    val _$finished = System.nanoTime;
    scala.Predef.println("(GMatch3,scanAllWithException)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  @new hello() implicit class PuzzleImpl[T >: _root_.scala.Nothing <: Panel] extends AnyVal {
    <paramaccessor> val puzzle: Puzzle[T] = _;
    def <init>(puzzle: Puzzle[T]) = {
      super.<init>();
      ()
    };
    def text: String = puzzle.map(((col) => col.map(((x$16) => x$16.toString)).fold("")(((x$17, x$18) => x$17.$plus(",").$plus(x$18))))).fold("")(((x$19, x$20) => x$19.$plus("\n").$plus(x$20)));
    def toIndexMap = GMatch3.toIndexMap(puzzle);
    def scanWithException = (GMatch3.scanIndexedWithException(puzzle): (() => <empty>));
    def scan(x: Int)(y: Int)(right: Boolean): MatchedSet[T] = {
      val W = puzzle.size;
      val H = puzzle.head.size;
      val panel = puzzle(x)(y);
      var matching = {
        <synthetic> val x$21 = scala.Tuple3(puzzle(x)(y), x, y);
        Nil.$colon$colon(x$21)
      };
      if (right)
        {
          var nx = x.$plus(1);
          while$12(){
            if (nx.$less(W).$amp$amp(y.$less(puzzle(nx).size)).$amp$amp(panel.matchTo(puzzle(nx)(y))))
              {
                {
                  matching.$colon$colon$eq(puzzle(nx)(y), nx, y);
                  nx.$plus$eq(1)
                };
                while$12()
              }
            else
              ()
          }
        }
      else
        {
          var ny = y.$plus(1);
          val size = puzzle(x).size;
          while$13(){
            if (ny.$less(H).$amp$amp(ny.$less(size)).$amp$amp(panel.matchTo(puzzle(x)(ny))))
              {
                {
                  matching.$colon$colon$eq(puzzle(x)(ny), x, ny);
                  ny.$plus$eq(1)
                };
                while$13()
              }
            else
              ()
          }
        };
      if (matching.size.$greater$eq(3))
        matching
      else
        Nil
    };
    def createFilling = (GMatch3.createFilling(puzzle): (() => <empty>));
    def createFillingPuzzle = (GMatch3.createFillingPuzzle(puzzle): (() => <empty>));
    def fill(filling: Events[T]): Puzzle[T] = filling.foldLeft(puzzle)(<empty> match {
      case scala.Tuple2((p @ _), scala.Tuple3((panel @ _), (x @ _), _)) => p.updated(x, p(x).$colon$plus(panel))
    });
    def removePanels(panels: Seq[T]): Puzzle[T] = puzzle.map(((x$22) => x$22.filterNot(panels.contains)));
    def remove(panels: Seq[T]): scala.Tuple2[Puzzle[T], Puzzle[T]] = {
      val f = ((p: Panel) => panels.contains(p));
      puzzle.unzip(((col) => col.span(((x$23) => f(x$23).unary_$bang)) match {
        case scala.Tuple2((left @ _), (float @ _)) => scala.Tuple2(left, float.filterNot(f))
      }))
    };
    def createNoMatchFilling(seed: _root_.scala.Function0[T], col: Int): Events[T] = {
      val contains = (puzzle.flatten.contains: (() => <empty>));
      @new tailrec() def fillWithStatics(added: Puzzle[T]): Puzzle[T] = added.createFilling(seed, col) match {
        case (filling @ _) => added.fill(filling) match {
          case (filled @ _) => filled.scanAll match {
            case (matches @ _) if matches.flatten.map(((x$24) => x$24._1)).forall(contains) => filled
            case (matches @ _) => fillWithStatics(added.removePanels(filling.filterNot(puzzle.flatten.contains).map(((x$25) => x$25._1))))
          }
        }
      };
      fillWithStatics(puzzle).zipWithIndex.withFilter(((check$ifrefutable$1) => check$ifrefutable$1: @scala.unchecked match {
  case scala.Tuple2((col @ _), (x @ _)) => true
  case _ => false
})).flatMap(((x$28) => x$28: @scala.unchecked match {
        case scala.Tuple2((col @ _), (x @ _)) => col.zipWithIndex.withFilter(((check$ifrefutable$2) => check$ifrefutable$2: @scala.unchecked match {
  case scala.Tuple2((panel @ _), (y @ _)) => true
  case _ => false
})).withFilter(((x$26) => x$26: @scala.unchecked match {
  case scala.Tuple2((panel @ _), (y @ _)) => puzzle(x).contains(panel).unary_$bang
})).map(((x$27) => x$27: @scala.unchecked match {
          case scala.Tuple2((panel @ _), (y @ _)) => scala.Tuple3(panel, x, y)
        }))
      }))
    };
    private def fillWithoutMatches(seed: _root_.scala.Function0[T], size: Int): Puzzle[T] = {
      @new tailrec() def recFWM(p: Puzzle[T]): Puzzle[T] = p.scanAll match {
        case Seq() => p
        case (matches @ _) => recFWM(removePanels(matches.flatten.distinct.map(<empty> match {
          case scala.Tuple3((pp @ _), (x @ _), (y @ _)) => pp
        })))
      };
      recFWM(puzzle)
    };
    def scanBy = (GMatch3.scanBy(puzzle): (() => <empty>));
    def scanAllWithException(matchLength: Int)(exception: _root_.scala.Function1[T, Boolean]) = scanBy(((x) => ((y) => ((right) => scanWithException(x)(y)(exception)(right))))).filter(((x$29) => x$29.size.$greater$eq(matchLength)));
    def scanAll = scanBy(scan);
    def indexOfPanel(panel: T): Either[Throwable, scala.Tuple2[Int, Int]] = allCatch.either({
      val row = puzzle.filter(((x$30) => x$30.contains(panel))).head;
      scala.Tuple2(puzzle.indexOf(row), row.indexOf(panel))
    });
    def indexOfPanelOpt(panel: T): Option[scala.Tuple2[Int, Int]] = allCatch.opt({
      val row = puzzle.filter(((x$31) => x$31.contains(panel))).head;
      scala.Tuple2(puzzle.indexOf(row), row.indexOf(panel))
    });
    def indexOfPanelUnhandled(panel: Panel): scala.Tuple2[Int, Int] = {
      val row = puzzle.filter(((x$32) => x$32.contains(panel))).head;
      scala.Tuple2(puzzle.indexOf(row), row.indexOf(panel))
    };
    def swap(ax: Int, ay: Int, bx: Int, by: Int): Puzzle[T] = {
      val a = puzzle(ax)(ay);
      val b = puzzle(bx)(by);
      val puzzle1 = puzzle.updated(ax, puzzle(ax).updated(ay, b));
      val puzzle2 = puzzle1.updated(bx, puzzle1(bx).updated(by, a));
      puzzle2
    };
    def append(p: Puzzle[T]): Puzzle[T] = puzzle.zipWithIndex.map(<empty> match {
      case scala.Tuple2((col @ _), (x @ _)) => col.$plus$plus(p(x))
    })
  };
  def calcNextIndices[T >: _root_.scala.Nothing <: Panel](left: Puzzle[T])(floatings: Puzzle[T]): Seq[scala.Tuple2[T, scala.Tuple2[Int, Int]]] = {
    val _$started = System.nanoTime;
    val _$result: Seq[scala.Tuple2[T, scala.Tuple2[Int, Int]]] = {
      val appended = left.append(floatings);
      floatings.flatten.map(((p) => scala.Tuple2(p, appended.indexOfPanelUnhandled(p))))
    };
    val _$finished = System.nanoTime;
    scala.Predef.println("(GMatch3,calcNextIndices)".$plus(_$finished.$minus(_$started)));
    _$result
  }
}
before
def <init>(puzzle: Puzzle[T]) = {
  super.<init>();
  ()
}
after
def <init>(puzzle: Puzzle[T]) = {
  val _$started = System.nanoTime;
  val _$result = {
    super.<init>();
    ()
  };
  val _$finished = System.nanoTime;
  scala.Predef.println("(PuzzleImpl,<init>)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def text: String = puzzle.map(((col) => col.map(((x$16) => x$16.toString)).fold("")(((x$17, x$18) => x$17.$plus(",").$plus(x$18))))).fold("")(((x$19, x$20) => x$19.$plus("\n").$plus(x$20)))
after
def text: String = {
  val _$started = System.nanoTime;
  val _$result: String = puzzle.map(((col) => col.map(((x$16) => x$16.toString)).fold("")(((x$17, x$18) => x$17.$plus(",").$plus(x$18))))).fold("")(((x$19, x$20) => x$19.$plus("\n").$plus(x$20)));
  val _$finished = System.nanoTime;
  scala.Predef.println("(PuzzleImpl,text)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def toIndexMap = GMatch3.toIndexMap(puzzle)
after
def toIndexMap = {
  val _$started = System.nanoTime;
  val _$result = GMatch3.toIndexMap(puzzle);
  val _$finished = System.nanoTime;
  scala.Predef.println("(PuzzleImpl,toIndexMap)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def scanWithException = (GMatch3.scanIndexedWithException(puzzle): (() => <empty>))
after
def scanWithException = {
  val _$started = System.nanoTime;
  val _$result = (GMatch3.scanIndexedWithException(puzzle): (() => <empty>));
  val _$finished = System.nanoTime;
  scala.Predef.println("(PuzzleImpl,scanWithException)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def scan(x: Int)(y: Int)(right: Boolean): MatchedSet[T] = {
  val W = puzzle.size;
  val H = puzzle.head.size;
  val panel = puzzle(x)(y);
  var matching = {
    <synthetic> val x$21 = scala.Tuple3(puzzle(x)(y), x, y);
    Nil.$colon$colon(x$21)
  };
  if (right)
    {
      var nx = x.$plus(1);
      while$12(){
        if (nx.$less(W).$amp$amp(y.$less(puzzle(nx).size)).$amp$amp(panel.matchTo(puzzle(nx)(y))))
          {
            {
              matching.$colon$colon$eq(puzzle(nx)(y), nx, y);
              nx.$plus$eq(1)
            };
            while$12()
          }
        else
          ()
      }
    }
  else
    {
      var ny = y.$plus(1);
      val size = puzzle(x).size;
      while$13(){
        if (ny.$less(H).$amp$amp(ny.$less(size)).$amp$amp(panel.matchTo(puzzle(x)(ny))))
          {
            {
              matching.$colon$colon$eq(puzzle(x)(ny), x, ny);
              ny.$plus$eq(1)
            };
            while$13()
          }
        else
          ()
      }
    };
  if (matching.size.$greater$eq(3))
    matching
  else
    Nil
}
after
def scan(x: Int)(y: Int)(right: Boolean): MatchedSet[T] = {
  val _$started = System.nanoTime;
  val _$result: MatchedSet[T] = {
    val W = puzzle.size;
    val H = puzzle.head.size;
    val panel = puzzle(x)(y);
    var matching = {
      <synthetic> val x$21 = scala.Tuple3(puzzle(x)(y), x, y);
      Nil.$colon$colon(x$21)
    };
    if (right)
      {
        var nx = x.$plus(1);
        while$12(){
          if (nx.$less(W).$amp$amp(y.$less(puzzle(nx).size)).$amp$amp(panel.matchTo(puzzle(nx)(y))))
            {
              {
                matching.$colon$colon$eq(puzzle(nx)(y), nx, y);
                nx.$plus$eq(1)
              };
              while$12()
            }
          else
            ()
        }
      }
    else
      {
        var ny = y.$plus(1);
        val size = puzzle(x).size;
        while$13(){
          if (ny.$less(H).$amp$amp(ny.$less(size)).$amp$amp(panel.matchTo(puzzle(x)(ny))))
            {
              {
                matching.$colon$colon$eq(puzzle(x)(ny), x, ny);
                ny.$plus$eq(1)
              };
              while$13()
            }
          else
            ()
        }
      };
    if (matching.size.$greater$eq(3))
      matching
    else
      Nil
  };
  val _$finished = System.nanoTime;
  scala.Predef.println("(PuzzleImpl,scan)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def createFilling = (GMatch3.createFilling(puzzle): (() => <empty>))
after
def createFilling = {
  val _$started = System.nanoTime;
  val _$result = (GMatch3.createFilling(puzzle): (() => <empty>));
  val _$finished = System.nanoTime;
  scala.Predef.println("(PuzzleImpl,createFilling)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def createFillingPuzzle = (GMatch3.createFillingPuzzle(puzzle): (() => <empty>))
after
def createFillingPuzzle = {
  val _$started = System.nanoTime;
  val _$result = (GMatch3.createFillingPuzzle(puzzle): (() => <empty>));
  val _$finished = System.nanoTime;
  scala.Predef.println("(PuzzleImpl,createFillingPuzzle)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def fill(filling: Events[T]): Puzzle[T] = filling.foldLeft(puzzle)(<empty> match {
  case scala.Tuple2((p @ _), scala.Tuple3((panel @ _), (x @ _), _)) => p.updated(x, p(x).$colon$plus(panel))
})
after
def fill(filling: Events[T]): Puzzle[T] = {
  val _$started = System.nanoTime;
  val _$result: Puzzle[T] = filling.foldLeft(puzzle)(<empty> match {
    case scala.Tuple2((p @ _), scala.Tuple3((panel @ _), (x @ _), _)) => p.updated(x, p(x).$colon$plus(panel))
  });
  val _$finished = System.nanoTime;
  scala.Predef.println("(PuzzleImpl,fill)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def removePanels(panels: Seq[T]): Puzzle[T] = puzzle.map(((x$22) => x$22.filterNot(panels.contains)))
after
def removePanels(panels: Seq[T]): Puzzle[T] = {
  val _$started = System.nanoTime;
  val _$result: Puzzle[T] = puzzle.map(((x$22) => x$22.filterNot(panels.contains)));
  val _$finished = System.nanoTime;
  scala.Predef.println("(PuzzleImpl,removePanels)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def remove(panels: Seq[T]): scala.Tuple2[Puzzle[T], Puzzle[T]] = {
  val f = ((p: Panel) => panels.contains(p));
  puzzle.unzip(((col) => col.span(((x$23) => f(x$23).unary_$bang)) match {
    case scala.Tuple2((left @ _), (float @ _)) => scala.Tuple2(left, float.filterNot(f))
  }))
}
after
def remove(panels: Seq[T]): scala.Tuple2[Puzzle[T], Puzzle[T]] = {
  val _$started = System.nanoTime;
  val _$result: scala.Tuple2[Puzzle[T], Puzzle[T]] = {
    val f = ((p: Panel) => panels.contains(p));
    puzzle.unzip(((col) => col.span(((x$23) => f(x$23).unary_$bang)) match {
      case scala.Tuple2((left @ _), (float @ _)) => scala.Tuple2(left, float.filterNot(f))
    }))
  };
  val _$finished = System.nanoTime;
  scala.Predef.println("(PuzzleImpl,remove)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def createNoMatchFilling(seed: _root_.scala.Function0[T], col: Int): Events[T] = {
  val contains = (puzzle.flatten.contains: (() => <empty>));
  @new tailrec() def fillWithStatics(added: Puzzle[T]): Puzzle[T] = added.createFilling(seed, col) match {
    case (filling @ _) => added.fill(filling) match {
      case (filled @ _) => filled.scanAll match {
        case (matches @ _) if matches.flatten.map(((x$24) => x$24._1)).forall(contains) => filled
        case (matches @ _) => fillWithStatics(added.removePanels(filling.filterNot(puzzle.flatten.contains).map(((x$25) => x$25._1))))
      }
    }
  };
  fillWithStatics(puzzle).zipWithIndex.withFilter(((check$ifrefutable$1) => check$ifrefutable$1: @scala.unchecked match {
  case scala.Tuple2((col @ _), (x @ _)) => true
  case _ => false
})).flatMap(((x$28) => x$28: @scala.unchecked match {
    case scala.Tuple2((col @ _), (x @ _)) => col.zipWithIndex.withFilter(((check$ifrefutable$2) => check$ifrefutable$2: @scala.unchecked match {
  case scala.Tuple2((panel @ _), (y @ _)) => true
  case _ => false
})).withFilter(((x$26) => x$26: @scala.unchecked match {
  case scala.Tuple2((panel @ _), (y @ _)) => puzzle(x).contains(panel).unary_$bang
})).map(((x$27) => x$27: @scala.unchecked match {
      case scala.Tuple2((panel @ _), (y @ _)) => scala.Tuple3(panel, x, y)
    }))
  }))
}
after
def createNoMatchFilling(seed: _root_.scala.Function0[T], col: Int): Events[T] = {
  val _$started = System.nanoTime;
  val _$result: Events[T] = {
    val contains = (puzzle.flatten.contains: (() => <empty>));
    @new tailrec() def fillWithStatics(added: Puzzle[T]): Puzzle[T] = added.createFilling(seed, col) match {
      case (filling @ _) => added.fill(filling) match {
        case (filled @ _) => filled.scanAll match {
          case (matches @ _) if matches.flatten.map(((x$24) => x$24._1)).forall(contains) => filled
          case (matches @ _) => fillWithStatics(added.removePanels(filling.filterNot(puzzle.flatten.contains).map(((x$25) => x$25._1))))
        }
      }
    };
    fillWithStatics(puzzle).zipWithIndex.withFilter(((check$ifrefutable$1) => check$ifrefutable$1: @scala.unchecked match {
  case scala.Tuple2((col @ _), (x @ _)) => true
  case _ => false
})).flatMap(((x$28) => x$28: @scala.unchecked match {
      case scala.Tuple2((col @ _), (x @ _)) => col.zipWithIndex.withFilter(((check$ifrefutable$2) => check$ifrefutable$2: @scala.unchecked match {
  case scala.Tuple2((panel @ _), (y @ _)) => true
  case _ => false
})).withFilter(((x$26) => x$26: @scala.unchecked match {
  case scala.Tuple2((panel @ _), (y @ _)) => puzzle(x).contains(panel).unary_$bang
})).map(((x$27) => x$27: @scala.unchecked match {
        case scala.Tuple2((panel @ _), (y @ _)) => scala.Tuple3(panel, x, y)
      }))
    }))
  };
  val _$finished = System.nanoTime;
  scala.Predef.println("(PuzzleImpl,createNoMatchFilling)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
private def fillWithoutMatches(seed: _root_.scala.Function0[T], size: Int): Puzzle[T] = {
  @new tailrec() def recFWM(p: Puzzle[T]): Puzzle[T] = p.scanAll match {
    case Seq() => p
    case (matches @ _) => recFWM(removePanels(matches.flatten.distinct.map(<empty> match {
      case scala.Tuple3((pp @ _), (x @ _), (y @ _)) => pp
    })))
  };
  recFWM(puzzle)
}
after
private def fillWithoutMatches(seed: _root_.scala.Function0[T], size: Int): Puzzle[T] = {
  val _$started = System.nanoTime;
  val _$result: Puzzle[T] = {
    @new tailrec() def recFWM(p: Puzzle[T]): Puzzle[T] = p.scanAll match {
      case Seq() => p
      case (matches @ _) => recFWM(removePanels(matches.flatten.distinct.map(<empty> match {
        case scala.Tuple3((pp @ _), (x @ _), (y @ _)) => pp
      })))
    };
    recFWM(puzzle)
  };
  val _$finished = System.nanoTime;
  scala.Predef.println("(PuzzleImpl,fillWithoutMatches)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def scanBy = (GMatch3.scanBy(puzzle): (() => <empty>))
after
def scanBy = {
  val _$started = System.nanoTime;
  val _$result = (GMatch3.scanBy(puzzle): (() => <empty>));
  val _$finished = System.nanoTime;
  scala.Predef.println("(PuzzleImpl,scanBy)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def scanAllWithException(matchLength: Int)(exception: _root_.scala.Function1[T, Boolean]) = scanBy(((x) => ((y) => ((right) => scanWithException(x)(y)(exception)(right))))).filter(((x$29) => x$29.size.$greater$eq(matchLength)))
after
def scanAllWithException(matchLength: Int)(exception: _root_.scala.Function1[T, Boolean]) = {
  val _$started = System.nanoTime;
  val _$result = scanBy(((x) => ((y) => ((right) => scanWithException(x)(y)(exception)(right))))).filter(((x$29) => x$29.size.$greater$eq(matchLength)));
  val _$finished = System.nanoTime;
  scala.Predef.println("(PuzzleImpl,scanAllWithException)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def scanAll = scanBy(scan)
after
def scanAll = {
  val _$started = System.nanoTime;
  val _$result = scanBy(scan);
  val _$finished = System.nanoTime;
  scala.Predef.println("(PuzzleImpl,scanAll)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def indexOfPanel(panel: T): Either[Throwable, scala.Tuple2[Int, Int]] = allCatch.either({
  val row = puzzle.filter(((x$30) => x$30.contains(panel))).head;
  scala.Tuple2(puzzle.indexOf(row), row.indexOf(panel))
})
after
def indexOfPanel(panel: T): Either[Throwable, scala.Tuple2[Int, Int]] = {
  val _$started = System.nanoTime;
  val _$result: Either[Throwable, scala.Tuple2[Int, Int]] = allCatch.either({
    val row = puzzle.filter(((x$30) => x$30.contains(panel))).head;
    scala.Tuple2(puzzle.indexOf(row), row.indexOf(panel))
  });
  val _$finished = System.nanoTime;
  scala.Predef.println("(PuzzleImpl,indexOfPanel)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def indexOfPanelOpt(panel: T): Option[scala.Tuple2[Int, Int]] = allCatch.opt({
  val row = puzzle.filter(((x$31) => x$31.contains(panel))).head;
  scala.Tuple2(puzzle.indexOf(row), row.indexOf(panel))
})
after
def indexOfPanelOpt(panel: T): Option[scala.Tuple2[Int, Int]] = {
  val _$started = System.nanoTime;
  val _$result: Option[scala.Tuple2[Int, Int]] = allCatch.opt({
    val row = puzzle.filter(((x$31) => x$31.contains(panel))).head;
    scala.Tuple2(puzzle.indexOf(row), row.indexOf(panel))
  });
  val _$finished = System.nanoTime;
  scala.Predef.println("(PuzzleImpl,indexOfPanelOpt)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def indexOfPanelUnhandled(panel: Panel): scala.Tuple2[Int, Int] = {
  val row = puzzle.filter(((x$32) => x$32.contains(panel))).head;
  scala.Tuple2(puzzle.indexOf(row), row.indexOf(panel))
}
after
def indexOfPanelUnhandled(panel: Panel): scala.Tuple2[Int, Int] = {
  val _$started = System.nanoTime;
  val _$result: scala.Tuple2[Int, Int] = {
    val row = puzzle.filter(((x$32) => x$32.contains(panel))).head;
    scala.Tuple2(puzzle.indexOf(row), row.indexOf(panel))
  };
  val _$finished = System.nanoTime;
  scala.Predef.println("(PuzzleImpl,indexOfPanelUnhandled)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def swap(ax: Int, ay: Int, bx: Int, by: Int): Puzzle[T] = {
  val a = puzzle(ax)(ay);
  val b = puzzle(bx)(by);
  val puzzle1 = puzzle.updated(ax, puzzle(ax).updated(ay, b));
  val puzzle2 = puzzle1.updated(bx, puzzle1(bx).updated(by, a));
  puzzle2
}
after
def swap(ax: Int, ay: Int, bx: Int, by: Int): Puzzle[T] = {
  val _$started = System.nanoTime;
  val _$result: Puzzle[T] = {
    val a = puzzle(ax)(ay);
    val b = puzzle(bx)(by);
    val puzzle1 = puzzle.updated(ax, puzzle(ax).updated(ay, b));
    val puzzle2 = puzzle1.updated(bx, puzzle1(bx).updated(by, a));
    puzzle2
  };
  val _$finished = System.nanoTime;
  scala.Predef.println("(PuzzleImpl,swap)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def append(p: Puzzle[T]): Puzzle[T] = puzzle.zipWithIndex.map(<empty> match {
  case scala.Tuple2((col @ _), (x @ _)) => col.$plus$plus(p(x))
})
after
def append(p: Puzzle[T]): Puzzle[T] = {
  val _$started = System.nanoTime;
  val _$result: Puzzle[T] = puzzle.zipWithIndex.map(<empty> match {
    case scala.Tuple2((col @ _), (x @ _)) => col.$plus$plus(p(x))
  });
  val _$finished = System.nanoTime;
  scala.Predef.println("(PuzzleImpl,append)".$plus(_$finished.$minus(_$started)));
  _$result
}
result:
implicit class PuzzleImpl[T >: _root_.scala.Nothing <: Panel] extends AnyVal {
  <paramaccessor> val puzzle: Puzzle[T] = _;
  def <init>(puzzle: Puzzle[T]) = {
    val _$started = System.nanoTime;
    val _$result = {
      super.<init>();
      ()
    };
    val _$finished = System.nanoTime;
    scala.Predef.println("(PuzzleImpl,<init>)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def text: String = {
    val _$started = System.nanoTime;
    val _$result: String = puzzle.map(((col) => col.map(((x$16) => x$16.toString)).fold("")(((x$17, x$18) => x$17.$plus(",").$plus(x$18))))).fold("")(((x$19, x$20) => x$19.$plus("\n").$plus(x$20)));
    val _$finished = System.nanoTime;
    scala.Predef.println("(PuzzleImpl,text)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def toIndexMap = {
    val _$started = System.nanoTime;
    val _$result = GMatch3.toIndexMap(puzzle);
    val _$finished = System.nanoTime;
    scala.Predef.println("(PuzzleImpl,toIndexMap)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def scanWithException = {
    val _$started = System.nanoTime;
    val _$result = (GMatch3.scanIndexedWithException(puzzle): (() => <empty>));
    val _$finished = System.nanoTime;
    scala.Predef.println("(PuzzleImpl,scanWithException)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def scan(x: Int)(y: Int)(right: Boolean): MatchedSet[T] = {
    val _$started = System.nanoTime;
    val _$result: MatchedSet[T] = {
      val W = puzzle.size;
      val H = puzzle.head.size;
      val panel = puzzle(x)(y);
      var matching = {
        <synthetic> val x$21 = scala.Tuple3(puzzle(x)(y), x, y);
        Nil.$colon$colon(x$21)
      };
      if (right)
        {
          var nx = x.$plus(1);
          while$12(){
            if (nx.$less(W).$amp$amp(y.$less(puzzle(nx).size)).$amp$amp(panel.matchTo(puzzle(nx)(y))))
              {
                {
                  matching.$colon$colon$eq(puzzle(nx)(y), nx, y);
                  nx.$plus$eq(1)
                };
                while$12()
              }
            else
              ()
          }
        }
      else
        {
          var ny = y.$plus(1);
          val size = puzzle(x).size;
          while$13(){
            if (ny.$less(H).$amp$amp(ny.$less(size)).$amp$amp(panel.matchTo(puzzle(x)(ny))))
              {
                {
                  matching.$colon$colon$eq(puzzle(x)(ny), x, ny);
                  ny.$plus$eq(1)
                };
                while$13()
              }
            else
              ()
          }
        };
      if (matching.size.$greater$eq(3))
        matching
      else
        Nil
    };
    val _$finished = System.nanoTime;
    scala.Predef.println("(PuzzleImpl,scan)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def createFilling = {
    val _$started = System.nanoTime;
    val _$result = (GMatch3.createFilling(puzzle): (() => <empty>));
    val _$finished = System.nanoTime;
    scala.Predef.println("(PuzzleImpl,createFilling)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def createFillingPuzzle = {
    val _$started = System.nanoTime;
    val _$result = (GMatch3.createFillingPuzzle(puzzle): (() => <empty>));
    val _$finished = System.nanoTime;
    scala.Predef.println("(PuzzleImpl,createFillingPuzzle)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def fill(filling: Events[T]): Puzzle[T] = {
    val _$started = System.nanoTime;
    val _$result: Puzzle[T] = filling.foldLeft(puzzle)(<empty> match {
      case scala.Tuple2((p @ _), scala.Tuple3((panel @ _), (x @ _), _)) => p.updated(x, p(x).$colon$plus(panel))
    });
    val _$finished = System.nanoTime;
    scala.Predef.println("(PuzzleImpl,fill)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def removePanels(panels: Seq[T]): Puzzle[T] = {
    val _$started = System.nanoTime;
    val _$result: Puzzle[T] = puzzle.map(((x$22) => x$22.filterNot(panels.contains)));
    val _$finished = System.nanoTime;
    scala.Predef.println("(PuzzleImpl,removePanels)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def remove(panels: Seq[T]): scala.Tuple2[Puzzle[T], Puzzle[T]] = {
    val _$started = System.nanoTime;
    val _$result: scala.Tuple2[Puzzle[T], Puzzle[T]] = {
      val f = ((p: Panel) => panels.contains(p));
      puzzle.unzip(((col) => col.span(((x$23) => f(x$23).unary_$bang)) match {
        case scala.Tuple2((left @ _), (float @ _)) => scala.Tuple2(left, float.filterNot(f))
      }))
    };
    val _$finished = System.nanoTime;
    scala.Predef.println("(PuzzleImpl,remove)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def createNoMatchFilling(seed: _root_.scala.Function0[T], col: Int): Events[T] = {
    val _$started = System.nanoTime;
    val _$result: Events[T] = {
      val contains = (puzzle.flatten.contains: (() => <empty>));
      @new tailrec() def fillWithStatics(added: Puzzle[T]): Puzzle[T] = added.createFilling(seed, col) match {
        case (filling @ _) => added.fill(filling) match {
          case (filled @ _) => filled.scanAll match {
            case (matches @ _) if matches.flatten.map(((x$24) => x$24._1)).forall(contains) => filled
            case (matches @ _) => fillWithStatics(added.removePanels(filling.filterNot(puzzle.flatten.contains).map(((x$25) => x$25._1))))
          }
        }
      };
      fillWithStatics(puzzle).zipWithIndex.withFilter(((check$ifrefutable$1) => check$ifrefutable$1: @scala.unchecked match {
  case scala.Tuple2((col @ _), (x @ _)) => true
  case _ => false
})).flatMap(((x$28) => x$28: @scala.unchecked match {
        case scala.Tuple2((col @ _), (x @ _)) => col.zipWithIndex.withFilter(((check$ifrefutable$2) => check$ifrefutable$2: @scala.unchecked match {
  case scala.Tuple2((panel @ _), (y @ _)) => true
  case _ => false
})).withFilter(((x$26) => x$26: @scala.unchecked match {
  case scala.Tuple2((panel @ _), (y @ _)) => puzzle(x).contains(panel).unary_$bang
})).map(((x$27) => x$27: @scala.unchecked match {
          case scala.Tuple2((panel @ _), (y @ _)) => scala.Tuple3(panel, x, y)
        }))
      }))
    };
    val _$finished = System.nanoTime;
    scala.Predef.println("(PuzzleImpl,createNoMatchFilling)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  private def fillWithoutMatches(seed: _root_.scala.Function0[T], size: Int): Puzzle[T] = {
    val _$started = System.nanoTime;
    val _$result: Puzzle[T] = {
      @new tailrec() def recFWM(p: Puzzle[T]): Puzzle[T] = p.scanAll match {
        case Seq() => p
        case (matches @ _) => recFWM(removePanels(matches.flatten.distinct.map(<empty> match {
          case scala.Tuple3((pp @ _), (x @ _), (y @ _)) => pp
        })))
      };
      recFWM(puzzle)
    };
    val _$finished = System.nanoTime;
    scala.Predef.println("(PuzzleImpl,fillWithoutMatches)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def scanBy = {
    val _$started = System.nanoTime;
    val _$result = (GMatch3.scanBy(puzzle): (() => <empty>));
    val _$finished = System.nanoTime;
    scala.Predef.println("(PuzzleImpl,scanBy)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def scanAllWithException(matchLength: Int)(exception: _root_.scala.Function1[T, Boolean]) = {
    val _$started = System.nanoTime;
    val _$result = scanBy(((x) => ((y) => ((right) => scanWithException(x)(y)(exception)(right))))).filter(((x$29) => x$29.size.$greater$eq(matchLength)));
    val _$finished = System.nanoTime;
    scala.Predef.println("(PuzzleImpl,scanAllWithException)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def scanAll = {
    val _$started = System.nanoTime;
    val _$result = scanBy(scan);
    val _$finished = System.nanoTime;
    scala.Predef.println("(PuzzleImpl,scanAll)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def indexOfPanel(panel: T): Either[Throwable, scala.Tuple2[Int, Int]] = {
    val _$started = System.nanoTime;
    val _$result: Either[Throwable, scala.Tuple2[Int, Int]] = allCatch.either({
      val row = puzzle.filter(((x$30) => x$30.contains(panel))).head;
      scala.Tuple2(puzzle.indexOf(row), row.indexOf(panel))
    });
    val _$finished = System.nanoTime;
    scala.Predef.println("(PuzzleImpl,indexOfPanel)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def indexOfPanelOpt(panel: T): Option[scala.Tuple2[Int, Int]] = {
    val _$started = System.nanoTime;
    val _$result: Option[scala.Tuple2[Int, Int]] = allCatch.opt({
      val row = puzzle.filter(((x$31) => x$31.contains(panel))).head;
      scala.Tuple2(puzzle.indexOf(row), row.indexOf(panel))
    });
    val _$finished = System.nanoTime;
    scala.Predef.println("(PuzzleImpl,indexOfPanelOpt)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def indexOfPanelUnhandled(panel: Panel): scala.Tuple2[Int, Int] = {
    val _$started = System.nanoTime;
    val _$result: scala.Tuple2[Int, Int] = {
      val row = puzzle.filter(((x$32) => x$32.contains(panel))).head;
      scala.Tuple2(puzzle.indexOf(row), row.indexOf(panel))
    };
    val _$finished = System.nanoTime;
    scala.Predef.println("(PuzzleImpl,indexOfPanelUnhandled)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def swap(ax: Int, ay: Int, bx: Int, by: Int): Puzzle[T] = {
    val _$started = System.nanoTime;
    val _$result: Puzzle[T] = {
      val a = puzzle(ax)(ay);
      val b = puzzle(bx)(by);
      val puzzle1 = puzzle.updated(ax, puzzle(ax).updated(ay, b));
      val puzzle2 = puzzle1.updated(bx, puzzle1(bx).updated(by, a));
      puzzle2
    };
    val _$finished = System.nanoTime;
    scala.Predef.println("(PuzzleImpl,swap)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def append(p: Puzzle[T]): Puzzle[T] = {
    val _$started = System.nanoTime;
    val _$result: Puzzle[T] = puzzle.zipWithIndex.map(<empty> match {
      case scala.Tuple2((col @ _), (x @ _)) => col.$plus$plus(p(x))
    });
    val _$finished = System.nanoTime;
    scala.Predef.println("(PuzzleImpl,append)".$plus(_$finished.$minus(_$started)));
    _$result
  }
}
[0m[[0minfo[0m] [0mRunning com.glyph.Main [0m
[0m[[0minfo[0m] [0m{"screenClass":{"class":"com.glyph.scala.game.action_puzzle.screen.ActionScreen"},"assets":[{"_1":{"class":"com.badlogic.gdx.graphics.Texture"},"_2":["data/dummy.png","data/particle.png","data/sword.png"]},{"_1":{"class":"com.badlogic.gdx.scenes.scene2d.ui.Skin"},"_2":["skin/default.json"]}]}[0m
[0m[[0minfo[0m] [0mspecified resource directory:../common/src/main/resources=>/Users/glyph/Documents/sbt/scalagamerepo/desktop/../common/src/main/resources[0m
[0m[[0minfo[0m] [0mstart Memory Analyzer[0m
[0m[[0minfo[0m] [0mGdxFilePath:/Users/glyph/Documents/sbt/scalagamerepo/desktop/../common/src/main/resources/json/gameConfig.json[0m
[0m[[0minfo[0m] [0mload RFile:[0m
[0m[[0minfo[0m] [0mgameConfig.json[0m
[0m[[0minfo[0m] [0mGdxFilePath:/Users/glyph/Documents/sbt/scalagamerepo/desktop/../common/src/main/resources/constants/string.js[0m
[0m[[0minfo[0m] [0mload RFile:[0m
[0m[[0minfo[0m] [0mstring.js[0m
[0m[[0minfo[0m] [0mCreated LoadingScreen[0m
[0m[[0minfo[0m] [0msetScreen:com.glyph.scala.lib.libgdx.screen.LoadingScreen@2b60206e[0m
[0m[[0minfo[0m] [0mshow StagedScreen[0m
[0m[[0minfo[0m] [0mloading...[0m
[0m[[0minfo[0m] [0mloading...[0m
[0m[[0minfo[0m] [0mloading...[0m
[0m[[0minfo[0m] [0mloading...[0m
[0m[[0minfo[0m] [0mloading...[0m
[0m[[0minfo[0m] [0mloading...[0m
[0m[[0minfo[0m] [0mloading...[0m
[0m[[0minfo[0m] [0mloading...[0m
[0m[[0minfo[0m] [0mloading...[0m
[0m[[0minfo[0m] [0mloading...[0m
[0m[[0minfo[0m] [0mloading...[0m
[0m[[0minfo[0m] [0mloading...[0m
[0m[[0minfo[0m] [0mloading...[0m
[0m[[0minfo[0m] [0mloading...[0m
[0m[[0minfo[0m] [0mloading...[0m
[0m[[0minfo[0m] [0mloading...[0m
[0m[[0minfo[0m] [0mloading...[0m
[0m[[0minfo[0m] [0mloading...[0m
[0m[[0minfo[0m] [0mloading...[0m
[0m[[0minfo[0m] [0mloading...[0m
[0m[[0minfo[0m] [0mloading...[0m
[0m[[0minfo[0m] [0mloading...[0m
[0m[[0minfo[0m] [0mloading...[0m
[0m[[0minfo[0m] [0mloading...[0m
[0m[[0minfo[0m] [0mloading...[0m
[0m[[0minfo[0m] [0mloading...[0m
[0m[[0minfo[0m] [0mGdxFilePath:/Users/glyph/Documents/sbt/scalagamerepo/desktop/../common/src/main/resources/json/gameConfig.json[0m
[0m[[0minfo[0m] [0mload RFile:[0m
[0m[[0minfo[0m] [0mgameConfig.json[0m
[0m[[0minfo[0m] [0mGdxFilePath:/Users/glyph/Documents/sbt/scalagamerepo/desktop/../common/src/main/resources/constants/string.js[0m
[0m[[0minfo[0m] [0mload RFile:[0m
[0m[[0minfo[0m] [0mstring.js[0m
[0m[[0minfo[0m] [0mGdxFilePath:/Users/glyph/Documents/sbt/scalagamerepo/desktop/../common/src/main/resources/constants/colors.js[0m
[0m[[0minfo[0m] [0mload RFile:[0m
[0m[[0minfo[0m] [0mcolors.js[0m
[0m[[0minfo[0m] [0m(GMatch3,initialize)4439000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,initializer)27536000[0m
[0m[[0minfo[0m] [0m(GMatch3,initialize)385000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,initializer)601000[0m
[0m[[0minfo[0m] [0m(GMatch3,initialize)322000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,initializer)538000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)2609000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,newPuzzleBuffer)1294000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,newPuzzleBuffer)177000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)888000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)1066000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)18444000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)1551000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)397000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)4219000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)2998000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,toIndexMap)3085000[0m
[0m[[0minfo[0m] [0mGdxFilePath:/Users/glyph/Documents/sbt/scalagamerepo/desktop/../common/src/main/resources/constants/colors.js[0m
[0m[[0minfo[0m] [0mload RFile:[0m
[0m[[0minfo[0m] [0mcolors.js[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)6901000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)211875000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,initialize)211952000[0m
[0m[[0minfo[0m] [0msetScreen:com.glyph.scala.game.action_puzzle.screen.ActionScreen@233d276b[0m
[0m[[0minfo[0m] [0mshow StagedScreen[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)14669000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)18834000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10123000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)10287000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10363000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)10495000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)9995000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)10139000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)9762000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)9901000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)8757000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)8903000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)9423000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)9564000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)8908000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)9054000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)8836000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)8975000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)8757000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)8916000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)9024000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)9165000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)9102000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)9247000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)8917000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)9062000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)8635000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)8782000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)7965000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)8109000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)7932000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)8143000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)7497000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)7631000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)8402000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)8551000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)7296000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)7429000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)19683000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)19840000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)7233000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)7378000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)6601000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)6737000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11103000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)11241000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)5377000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)5511000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)5220000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)5362000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)5057000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)5187000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)5239000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)5374000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)5243000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)5376000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)5222000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)5371000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)6001000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)6152000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4967000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)5101000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4844000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)4978000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)3874000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)81000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)16000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)16000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)15000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)16000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)16000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)16000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)15000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)2118000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)11000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)3620000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)95000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)29000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)29000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)114000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)29000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)29000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)29000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)8868000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)16249000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)3492000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)3616000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)198000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)7039000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)10104000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)30231000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)46560000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)46640000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)343000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)1071000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)7338000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)27000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)26000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)27000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)62000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)57000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)33000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)32000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)42000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)32000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)31000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)32000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)31000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)32000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)12572000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)13439000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)1593000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)1692000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)244000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)1798000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)2421000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)17755000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)34714000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)34798000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)399000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)10000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)1143000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)33000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)27000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)29000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)29000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)60000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)56000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)55000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)38000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)37000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)37000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)37000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)56000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)37000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)36000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)38000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)3277000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)4200000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)1299000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)1472000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)198000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)5398000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)5963000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)11840000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)39648000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)39732000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)436000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)2695000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)35000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)29000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)29000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)29000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)64000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)55000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)55000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)56000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)41000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)41000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)42000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)42000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)41000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)55000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)42000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)46000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)10762000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)12515000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)741000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)816000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)185000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)642000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)1145000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)15043000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)142896000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)142976000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)465000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)1023000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)33000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)27000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)60000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)56000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)57000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)57000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)63000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)46000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)45000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)45000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)45000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)44000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)46000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)46000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)45000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)3244000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)4294000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)809000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,remove)6444000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)268000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)288000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)1876000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)561000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)31379000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)1824000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)374000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)276000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)2886000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)685000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,toIndexMap)754000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)662000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)16730000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)52574000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)58736000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)58808000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)489000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)11000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)982000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)32000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)26000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)40000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)35000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)53000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)55000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)54000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)56000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)49000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)49000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)49000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)41000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)41000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)52000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)42000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)49000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)6261000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)15785000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)512000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,remove)598000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)271000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)304000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)1923000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)350000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)18907000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)668000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)336000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)281000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)2269000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)532000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,toIndexMap)594000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)356000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)10778000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)45644000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)52690000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)52766000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)474000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)10000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)10000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)1098000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)33000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)38000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)4294000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)37000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)46000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)52000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)53000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)53000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)49000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)49000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)35000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)38000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)39000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)41000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)44000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)53000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)7760000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)8735000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)392000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)453000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)197000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)774000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)1290000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)10653000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)15883000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)15960000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)493000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)10000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)1013000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)44000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)34000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)35000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)33000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)48000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)56000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)55000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)56000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)56000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)56000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)37000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)51000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)41000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)42000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)41000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)56000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)3186000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)4174000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)324000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)383000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)193000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)353000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)839000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)5571000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)9956000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)10030000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)837000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)957000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1085000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1208000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)861000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)981000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)836000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)959000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)838000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)959000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)839000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)958000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1974000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)2108000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1134000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1280000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)849000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)976000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)827000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)966000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)858000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)985000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)849000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)973000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)872000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)993000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)501000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)10000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)1210000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)44000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)34000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)34000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)49000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)50000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)57000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)56000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)57000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)56000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)57000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)37000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)45000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)45000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)45000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)42000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)57000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)3254000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)4256000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)255000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)314000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)194000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)226000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)720000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)5463000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)9201000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)9275000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)541000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)955000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)347000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)32000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)46000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)45000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)63000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)56000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)52000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)54000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)53000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)52000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)35000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)146000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)45000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)45000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)45000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)51000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)3497000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)4986000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)611000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,remove)701000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)264000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)276000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)2115000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)193000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)7930000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)778000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)343000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)271000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)2260000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)573000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,toIndexMap)633000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)230000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)9350000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)22457000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)27776000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)27852000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)522000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2424000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)10000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)3595000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)46000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)37000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)38000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)47000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)47000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)57000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)56000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)232000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)86000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)55000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)38000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)46000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)46000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)46000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)53000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)57000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)6353000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)7374000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)217000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)278000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)195000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)196000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)682000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)8510000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)12267000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)12342000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)509000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)1116000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)47000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)38000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)38000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)49000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)50000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)56000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)56000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)56000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)55000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)63000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)37000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)46000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)43000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)43000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)53000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)57000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)4519000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)5535000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)211000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)272000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)284000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)176000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)751000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)6745000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10420000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)10493000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)581000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)702000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)552000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)685000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)544000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)666000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)540000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)673000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)648000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)768000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)551000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)672000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)572000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)694000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)564000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)685000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)542000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)668000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)563000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)689000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)627000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)754000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)999000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1139000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)531000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)985000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)541000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)667000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)524000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)646000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)535000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)656000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)573000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)696000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)546000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)666000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)549000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)10000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)10000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)10000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)1048000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)46000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)38000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)38000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)49000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)56000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)56000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)56000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)54000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)57000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)54000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)39000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)43000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)51000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)44000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)54000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)54000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)3072000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)4209000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)183000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)238000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)965000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)171000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)1579000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)6191000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)9611000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)9715000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)518000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)10000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)1034000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)48000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)713000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)47000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)56000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)54000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)55000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)55000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)55000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)54000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)55000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)43000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)45000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)44000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)60000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)59000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)97000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)9846000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)10904000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)570000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,remove)687000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)3135000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)6000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)3000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)262000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)279000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)3354000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)197000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)21449000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)2556000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)359000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)272000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)2122000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)539000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,toIndexMap)598000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)231000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)10484000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)44289000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)48012000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)48090000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,swap)76101000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)1970000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,swipe)120062000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)492000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)16000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)995000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)45000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)35000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)43000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)47000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)152000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)63000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)3087000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)55000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)56000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)40000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)40000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)45000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)47000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)49000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)58000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)57000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)6070000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)7047000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)264000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)325000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)197000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)185000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)663000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)8204000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11549000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)15985000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)520000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)949000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)41000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)40000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)55000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)365000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)58000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)57000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)55000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)55000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)57000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)41000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)39000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)49000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)117000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)53000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)56000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)57000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)3402000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)4563000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)174000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)233000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)196000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)151000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)631000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)5605000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)8744000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)8921000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)523000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)19000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)20000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)20000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)19000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)19000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)10000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)2468000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)53000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)43000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)222000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)45000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2917000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)63000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)57000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)54000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)58000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)41000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)40000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)52000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)52000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)57000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)57000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)56000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)7509000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)8627000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)576000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,remove)735000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)239000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)255000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)1952000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)337000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)7768000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)663000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)782000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)245000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)1899000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)513000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,toIndexMap)573000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)143000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)8387000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)24956000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)27958000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)28124000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)461000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)675000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)707000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)961000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)460000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,swap)394000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)536000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)1206000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)40000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)34000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)35000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)42000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)53000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)53000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)66000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)67000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)53000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)38000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)36000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)49000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)52000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)42000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)54000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)53000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)3153000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)5029000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)1304000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,remove)605000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)7000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)3000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)250000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)302000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)2033000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)307000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)10365000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)1150000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)334000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)265000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)1846000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)545000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,toIndexMap)604000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)489000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)9742000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)25327000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)41704000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1090000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1304000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)422000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)978000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)40000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)31000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)30000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)39000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)39000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)39000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)38000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)54000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)54000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)42000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)77000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)26000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)25000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)25000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)53000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)53000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)2775000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)9630000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)829000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)905000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)196000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)2844000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)3362000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)14120000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)22342000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)22412000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)389000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)96000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)1043000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)41000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)31000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)38000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)39000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)38000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)39000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)37000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)53000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)53000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)46000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)46000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)25000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)25000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)25000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)54000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)54000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)2830000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)3645000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)272000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)352000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)197000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)254000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)734000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)4898000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)8014000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)8089000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)421000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)990000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)40000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)39000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)39000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)38000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)38000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)38000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)39000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)53000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)53000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)49000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)50000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)26000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)26000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)26000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)51000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)52000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)2885000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)3689000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)269000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)333000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)190000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)2407000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)2932000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)7120000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10289000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)10363000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)410000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)1042000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)130000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)99000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)39000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)38000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)38000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)37000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)37000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)51000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)51000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)51000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)51000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)24000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)24000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)25000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)54000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)55000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)3190000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)3985000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)226000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)284000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)198000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)206000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)780000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)5212000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)18566000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)18640000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)769000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)897000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)717000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)836000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)689000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)810000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)690000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)812000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)853000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)982000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)685000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)805000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)929000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1057000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)753000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)874000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)671000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)793000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)809000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)931000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1287000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1421000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)846000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)973000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1998000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)2125000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1034000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1164000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)673000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)797000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)700000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)822000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)353000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)1002000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)48000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)40000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)38000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)39000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)39000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)40000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)54000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)68000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)52000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)53000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)53000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)31000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)31000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)31000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)54000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)59000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)3022000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)3759000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)194000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)252000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)192000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)172000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)660000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)4836000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)7682000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)7753000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)398000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)223000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)1161000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)49000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)38000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)37000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)38000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)38000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)53000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)54000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)55000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)51000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)51000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)53000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)34000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)35000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)34000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)52000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)53000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)2956000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)3766000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)175000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)231000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)190000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)148000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)619000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)4783000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)7594000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)7667000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)359000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)951000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)47000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)40000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)38000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)39000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)177000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)237000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)51000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)51000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)51000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)51000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)52000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)37000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)41000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)38000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)53000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)54000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)3106000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)3874000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)154000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)210000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)220000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)123000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)620000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)4869000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)7571000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)7647000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)415000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)79000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)1117000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)48000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)36000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)38000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)47000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)67000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)54000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)55000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)54000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)53000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)54000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)53000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)42000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)71000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)39000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)55000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)54000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)3031000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)3820000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)125000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)183000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)176000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)187000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)639000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)4806000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)7495000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)7563000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)381000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)884000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)47000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)37000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)44000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)44000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)52000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)54000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)51000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)51000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)51000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)51000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)68000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)45000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)44000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)38000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)51000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)51000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)2684000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)3393000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)100000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)154000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)174000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)82000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)529000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)4231000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)6744000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)6814000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)377000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)881000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)46000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)46000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)45000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)46000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)51000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)52000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)52000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)53000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)55000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)53000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)52000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)50000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)48000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)38000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)51000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)50000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)3158000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)4086000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)89000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)143000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)173000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)146000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)585000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)4996000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)7795000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)7865000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)391000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)1043000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)58000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)47000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)47000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)48000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)55000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)89000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)425000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)47000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)47000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)48000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)47000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)47000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)47000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)32000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)47000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)46000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)3448000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)4184000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)74000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)131000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)244000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)55000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)582000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)5061000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)7538000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)7609000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)195000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)316000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)190000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)306000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)197000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)426000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)182000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)305000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)195000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)624000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)182000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)302000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)194000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)317000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)182000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)303000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)385000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)508000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)197000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)315000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)183000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)307000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)181000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)303000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)184000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)305000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)184000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)309000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)188000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)313000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)374000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)994000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)49000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)40000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)40000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)47000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)47000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)47000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)47000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)66000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)86000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)81000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)46000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)47000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)46000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)36000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)48000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)48000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)3076000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)3789000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)66000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)194000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)188000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)46000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)521000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)4757000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)7057000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)7132000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)383000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)939000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)50000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)40000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)48000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)47000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)47000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)47000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)47000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)48000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)48000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)48000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)45000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)43000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)47000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)39000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)47000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)47000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)2762000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)3488000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)50000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)157000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)225000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)42000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)690000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)4507000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)6694000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)6768000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)395000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)55000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)1071000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)52000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)48000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)48000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)47000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)48000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)47000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)48000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)47000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)48000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)47000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)46000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)47000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)48000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)44000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)47000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)48000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)2965000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)3762000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)46000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)104000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)187000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)26000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)497000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)4538000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)6846000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)6920000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)381000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)995000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)57000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)48000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)48000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)48000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)47000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)47000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)47000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)48000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)47000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)47000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)47000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)48000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)95000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)48000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)47000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)48000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)2899000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)3689000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)1090000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,remove)710000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)208000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)226000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)1524000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)16000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)6785000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)793000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)285000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)212000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)1628000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)547000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,toIndexMap)612000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)54000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)7532000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)18178000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)20369000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)20489000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)174000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)298000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)193000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)334000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)175000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)297000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)175000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)298000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)175000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)379000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)177000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)300000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)175000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)310000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)190000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)320000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)192000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)318000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)177000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)312000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)189000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)315000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)187000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)310000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)176000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)301000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)175000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)299000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)185000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1315000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)184000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)307000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)197000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)351000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)210000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)348000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)188000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)314000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,swap)373000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)1785000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,swipe)5680000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)180000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)393000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)186000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)395000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)184000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)389000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)184000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)402000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)398000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)927000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)61000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)104000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)146000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)50000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)49000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)49000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)49000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)48000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)49000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)50000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)51000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)50000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)50000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)48000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)50000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)50000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)2964000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)3704000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)20000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)73000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)182000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)13000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)487000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)4422000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)6776000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)6949000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)26000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)254000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)26000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)569000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)26000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)253000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)27000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)252000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,swap)362000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)1653000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,swipe)5086000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)27000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)303000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)27000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)316000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)27000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)701000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)29000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)336000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)28000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)380000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)26000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)317000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)27000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)326000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)63000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)450000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)292000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)18000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)313000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,swap)387000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)395000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)918000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)63000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)55000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)55000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)54000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)53000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)55000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)54000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)50000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)53000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)54000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)66000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)53000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)53000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)55000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)54000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)54000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)2883000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)3619000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)404000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,remove)555000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)5000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)3000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)215000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)231000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)1642000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)177000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)6772000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)657000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)281000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)230000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)1743000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)531000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,toIndexMap)589000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)188000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)7587000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)18223000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)24230000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)675000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)879000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)631000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)820000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)622000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)813000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)643000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)836000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)685000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)884000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)620000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)863000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)617000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)815000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)653000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,swap)331000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)346000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)904000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)44000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)36000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)37000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)36000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)35000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)37000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)36000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)48000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)48000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)48000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)47000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)47000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)47000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)19000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)19000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)19000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)2568000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)3200000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)215000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)270000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)185000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)216000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)5092000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)8720000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)14324000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)671000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)786000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)637000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)740000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)716000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)818000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)672000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)772000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)620000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)720000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)701000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)801000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)636000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)742000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)624000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)724000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)618000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)720000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)623000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)731000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)619000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)720000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)623000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)726000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)635000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)740000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)634000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)736000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)626000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)726000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)616000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)716000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)337000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)1111000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)46000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)33000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)33000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)33000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)33000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)33000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)42000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)43000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)43000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)43000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)482000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)43000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)43000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)22000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)22000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)22000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)3095000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)3757000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)184000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)235000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)172000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)157000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)577000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)4713000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)7444000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)7500000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)367000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)873000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)45000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)35000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)35000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)35000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)52000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)46000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)175000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)46000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)47000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)47000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)47000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)46000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)47000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)27000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)2749000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)3500000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)170000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)223000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)185000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)139000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)579000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)4798000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)7282000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)7340000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)363000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)889000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)46000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)35000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)167000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)36000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)48000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)47000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)46000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)46000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)47000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)47000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)46000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)46000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)47000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)31000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)32000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)72000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)2849000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)3492000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)258000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)316000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)177000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)126000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)558000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)4515000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)6889000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)6948000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)366000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)15000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)3451000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)42000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)31000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)31000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)42000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)42000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)42000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)41000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)42000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)43000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)43000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)44000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)42000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)43000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)38000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)30000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)30000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)5120000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)5823000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)390000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,remove)525000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)5000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)2000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)216000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)310000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)1691000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)127000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)7235000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)883000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)341000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)218000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)2283000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)538000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,toIndexMap)594000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)3310000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)10800000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)24018000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)26059000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)26120000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)437000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)841000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)36000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)27000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)27000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)42000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)40000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)193000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)43000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)41000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)41000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)40000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)40000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)27000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)27000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)27000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)34000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)2535000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)3250000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)138000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)191000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)177000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)143000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)1099000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)4687000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)6571000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)6629000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)324000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)837000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)36000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)106000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)27000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)27000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)41000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)40000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)40000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)40000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)40000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)40000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)40000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)40000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)27000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)26000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)27000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)39000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)2486000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)3088000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)130000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)183000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)178000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)117000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)556000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)4098000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)5995000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)6058000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)319000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)895000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)38000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)29000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)43000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)42000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)43000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)43000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)42000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)39000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)42000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)43000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)29000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)29000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)43000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)2541000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)3147000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)128000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)182000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)185000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)110000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)561000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)4043000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)6071000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)6131000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)436000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)537000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)382000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)535000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)432000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)530000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)377000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)475000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)378000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)478000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)391000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)487000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)390000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)800000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)428000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)528000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)375000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)475000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)396000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)518000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)371000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)472000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)388000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)484000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)372000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)467000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)407000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)503000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)391000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)492000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)400000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)511000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)504000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)710000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)390000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)485000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)435000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)540000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)374000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)473000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)1604000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)814000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)38000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)29000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)29000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)43000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)143000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)56000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)43000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)43000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)43000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)43000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)43000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)42000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)32000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)32000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)32000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)43000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)2594000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)4547000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)337000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,remove)492000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)205000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)344000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)2050000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)90000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)5674000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)612000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)279000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)207000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)1721000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)555000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,toIndexMap)606000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)113000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)6600000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)16962000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)18978000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)19033000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)521000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)620000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)372000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)470000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)371000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)471000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)375000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)472000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)374000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)477000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)437000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)538000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)410000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)510000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)358000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)464000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4226000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)4332000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)347000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)447000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)322000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)419000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)391000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)487000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)324000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)419000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)368000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)471000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)409000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)686000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)417000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)518000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)378000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)496000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)498000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)664000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)382000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)478000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)317000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)413000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)375000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)479000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)355000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)512000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)330000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)428000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)677000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)787000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)309000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)409000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)329000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)793000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)38000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)29000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)29000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)44000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)44000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)44000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)43000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)43000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)43000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)43000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)43000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)42000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)32000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)31000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)32000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)43000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)2367000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)2967000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)132000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)181000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)186000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)87000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)519000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)3828000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)6111000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)6167000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)395000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)36000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)37000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)872000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)38000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)31000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)40000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)41000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)43000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)42000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)43000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)43000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)42000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)43000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)42000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)43000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)36000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)35000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)38000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)43000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)2573000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)3261000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)79000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)127000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)179000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)61000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)479000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)4003000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10547000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)10601000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)359000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)22000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)934000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)112000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)42000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)43000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)44000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)43000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)43000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)43000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)43000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)43000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)43000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)43000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)43000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)40000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)39000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)51000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)43000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)2630000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)3262000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)97000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)148000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)188000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)55000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)491000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)4042000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)7124000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)7180000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)430000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)798000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)52000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)43000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)41000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)43000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)43000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)43000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)43000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)43000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)43000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)43000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)43000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)43000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)43000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)42000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)42000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)43000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)2428000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)3129000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)13000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)433000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)184000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)440000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)4145000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)7196000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)7253000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)102000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)101000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)103000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)108000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)103000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,swap)350000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)1471000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,swipe)6268000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)216000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)243000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)246000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)244000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)243000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)244000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)244000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)245000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)259000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)245000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)249000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)247000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)247000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)249000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)245000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)246000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)320000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)256000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,swap)340000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)341000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)808000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)50000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)44000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)45000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)44000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)44000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)45000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)44000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)44000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)45000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)44000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)44000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)44000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)45000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)44000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)44000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)43000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)2584000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)3197000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)345000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,remove)627000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)5000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)3000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)209000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)228000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)1393000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)73000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)8545000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)747000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)334000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)220000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)1484000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)511000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,toIndexMap)561000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)121000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)9790000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)21674000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)29609000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)331000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)438000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)371000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)469000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)339000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)439000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)402000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)497000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)629000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)728000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)412000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)510000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)338000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)436000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)340000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)437000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)342000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)439000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)353000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)449000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)351000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)447000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)340000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)500000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)347000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)452000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)339000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)438000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)343000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)442000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)336000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)436000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)337000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)437000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)338000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)436000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)338000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)437000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)350000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)447000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)337000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)433000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)337000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)435000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)348000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)452000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)343000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)440000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)352000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)450000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)352000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)454000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)337000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)437000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)342000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)442000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)337000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)437000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)341000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)441000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)345000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)442000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)340000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)436000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)394000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)490000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)338000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)436000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)339000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)440000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)339000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)436000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)442000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)560000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)379000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)484000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)577000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)676000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)382000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)479000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)353000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)487000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)346000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)446000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)341000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)441000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)413000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)514000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)338000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)437000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)340000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)440000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)336000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)439000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)492000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)593000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)332000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)434000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)333000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)432000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)331000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)431000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)531000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)632000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)322000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)799000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)46000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)35000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)36000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)36000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)36000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)36000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)36000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)43000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)43000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)44000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)43000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)43000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)43000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)16000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)43000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)42000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)2360000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)2951000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)127000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)176000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)184000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)113000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)622000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)3889000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)6976000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)7049000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)329000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)772000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)44000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)88000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)34000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)38000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)34000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)34000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)40000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)40000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)65000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)63000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)41000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)41000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)42000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)21000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)42000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)41000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)2558000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)4703000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)140000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)190000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)298000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)94000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)668000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)5719000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)8812000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)8870000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)344000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)823000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)94000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)26000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)26000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)27000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)27000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)30000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)30000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)30000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)30000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)29000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)30000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)30000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)30000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)21000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)30000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)29000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)2262000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)2875000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)97000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)147000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)184000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)74000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)502000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)3660000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)7134000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)7189000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)358000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)757000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)33000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)26000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)26000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)34000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)29000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)29000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)29000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)21000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)29000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)2080000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)2700000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)128000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)178000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)176000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)63000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)475000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)3484000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)6522000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)6579000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)379000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)798000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)34000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)26000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)27000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)30000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)30000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)30000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)30000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)29000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)29000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)29000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)29000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)29000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)29000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)56000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)29000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)73000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)3069000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)3760000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)376000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,remove)482000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)5000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)2000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)194000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)211000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)1759000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)125000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)7158000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)1039000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)267000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)315000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)1507000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)508000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,toIndexMap)557000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)161000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)35515000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)46565000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)49575000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)49629000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)486000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)682000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)473000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)576000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)479000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)584000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)491000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)590000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)468000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)569000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)467000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)562000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)558000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)655000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)470000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)567000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)469000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)569000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)467000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)564000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)830000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)928000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)639000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)733000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)712000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)830000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)474000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)577000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)472000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)569000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)467000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)563000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)466000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)564000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)642000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)742000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)466000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)565000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)465000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)559000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)866000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1069000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)696000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1152000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)539000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)650000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)414000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)773000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)29000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)21000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)20000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)26000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)27000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)26000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)31000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)27000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)27000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)27000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)26000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)27000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)22000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)22000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)22000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)27000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)3269000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)4068000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)336000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,remove)441000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)6000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)2000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)205000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)221000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)1409000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)161000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)6408000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)955000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)289000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)206000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)1453000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)510000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,toIndexMap)559000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)186000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)8525000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)19200000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)23533000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)23591000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)312000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)779000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)21000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)23000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)23000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)27000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)27000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)27000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)73000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)21000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)23000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)21000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)2232000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)2812000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)198000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)246000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)188000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)181000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)609000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)3800000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)7048000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)7104000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)523000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)851000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)22000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)23000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)23000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)27000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)26000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)31000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)27000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)27000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)26000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)27000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)27000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)25000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)21000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)21000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)20000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)2619000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)3414000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)185000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)232000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)180000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)204000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)620000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)4399000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)7748000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)7802000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)311000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)869000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)31000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)24000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)23000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)23000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)27000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)27000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)21000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)21000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)21000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)2364000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)2943000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)173000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)221000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)186000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)150000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)579000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)3898000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)7036000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)7090000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)443000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)539000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)442000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)541000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)445000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)545000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)444000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)544000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)442000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)542000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)682000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)778000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)443000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)538000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)458000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)552000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)472000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)570000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)518000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)612000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)442000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)540000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)444000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)541000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)443000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)541000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)443000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)539000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)444000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)540000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)446000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)540000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)446000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)602000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)522000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)618000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)444000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)541000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)448000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)544000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)443000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)541000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)460000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)558000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)338000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)772000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)30000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)22000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)22000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)27000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)23000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)23000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)23000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)2058000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)2663000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)187000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)238000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)186000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)115000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)536000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)3569000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)13288000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)13342000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)341000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)726000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)23000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)27000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)27000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)26000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)26000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)27000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)26000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)27000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)26000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)27000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)26000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)26000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)24000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)24000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)24000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)1980000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)2585000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)90000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)135000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)174000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)72000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)472000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)3318000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)9403000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)9457000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)345000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)961000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)30000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)686000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)25000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)25000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)24000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)24000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)25000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)24000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)25000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)23000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)24000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)24000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)24000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)34000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)24000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)23000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)2905000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)3505000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)64000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)108000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)176000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)42000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)440000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)4177000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)6614000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)6669000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)357000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)2460000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)32000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)25000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)24000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)24000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)25000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)24000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)24000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)24000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)24000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)24000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)24000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)24000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)24000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)24000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)24000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)24000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)3663000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)4322000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)333000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,remove)441000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)194000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)203000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)1650000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)13000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)5089000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)554000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)283000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)201000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)1750000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)473000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,toIndexMap)518000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)36000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)6044000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)15579000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)18504000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)18559000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)128000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)222000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)114000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)212000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)113000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)207000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)122000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)219000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)126000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)219000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)116000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)211000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)113000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)207000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)114000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)208000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)113000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)227000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)119000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)233000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)114000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)209000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)113000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)206000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)114000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)208000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)114000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)208000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)113000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)206000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)148000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)268000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)167000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)286000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)131000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)233000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)114000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)208000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)114000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)207000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)121000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)219000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)133000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)230000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)115000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)209000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)113000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)208000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)118000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)270000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)114000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)209000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)114000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)206000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)114000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)206000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)114000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)208000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)163000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)283000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)125000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)228000[0m
[0m[[0minfo[0m] [0mtotal heap: 3375kb[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)120000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)202000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)110000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)203000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)110000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)202000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)138000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)238000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)127000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)224000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)110000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)200000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)232000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)330000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)112000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)203000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)328000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)712000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)30000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)24000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)25000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)27000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)24000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)25000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)36000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)25000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)26000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)25000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)93000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)24000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)24000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)75000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)21000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)21000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)2703000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)3287000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)47000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)90000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)195000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)29000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)450000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)3951000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4965000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)5017000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)346000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)709000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)27000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)22000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)22000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)22000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)22000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)24000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)22000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)22000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)23000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)21000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)21000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)21000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)22000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)22000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)32000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)21000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)2128000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)2732000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)37000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)80000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)184000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)21000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)431000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)3364000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4377000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)4429000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)333000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)706000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)29000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)22000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)21000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)22000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)21000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)21000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)22000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)21000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)22000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)21000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)20000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)21000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)20000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)21000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)22000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)21000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)1879000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)2462000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)14000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)56000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)182000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)416000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)3057000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)3976000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)4027000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)99000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)99000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)99000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)5000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)99000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)98000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)99000[0m
[0m[[0minfo[0m] [0mpause![0m
java.lang.RuntimeException: Nonzero exit code returned from runner: 255
	at scala.sys.package$.error(package.scala:27)
[0m[[31mtrace[0m] [0mStack trace suppressed: run [34mlast desktop/compile:run[0m for the full output.[0m
[0m[[31merror[0m] [0m(desktop/compile:[31mrun[0m) Nonzero exit code returned from runner: 255[0m
[0m[[31merror[0m] [0mTotal time: 67 s, completed 2013/11/15 22:33:14[0m
