[0m[[0minfo[0m] [0mLoading project definition from /Users/glyph/Documents/sbt/scalagamerepo/project[0m
[0m[[0minfo[0m] [0mSet current project to android (in build file:/Users/glyph/Documents/sbt/scalagamerepo/)[0m
[0m[[0minfo[0m] [0mCompiling 1 Scala source to /Users/glyph/Documents/sbt/scalagamerepo/common/target/scala-2.10/classes...[0m
before
def initializer: Var[Puzzle[AP]] = Var(GMatch3.initialize(COLUMN))
after
def initializer: Var[Puzzle[AP]] = {
  val _$started = System.nanoTime;
  val _$result: Var[Puzzle[AP]] = Var(GMatch3.initialize(COLUMN));
  val _$finished = System.nanoTime;
  scala.Predef.println("(ActionPuzzle3,initializer)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def seed: _root_.scala.Function0[AP] = (() => MathUtils.random(0, 3).$bar$greater(((x$1) => new AP(x$1))))
after
def seed: _root_.scala.Function0[AP] = {
  val _$started = System.nanoTime;
  val _$result: _root_.scala.Function0[AP] = (() => MathUtils.random(0, 3).$bar$greater(((x$1) => new AP(x$1))));
  val _$finished = System.nanoTime;
  scala.Predef.println("(ActionPuzzle3,seed)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def scanAll = scanAllWithException(fixedFuture)(3)(((p) => {
  val opt = swiping().get(p);
  if (opt.isDefined)
    opt.get.isEmpty.unary_$bang
  else
    false
}))
after
def scanAll = {
  val _$started = System.nanoTime;
  val _$result = scanAllWithException(fixedFuture)(3)(((p) => {
    val opt = swiping().get(p);
    if (opt.isDefined)
      opt.get.isEmpty.unary_$bang
    else
      false
  }));
  val _$finished = System.nanoTime;
  scala.Predef.println("(ActionPuzzle3,scanAll)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def scanAllDistinct = scanAll.flatten.map(((x$2) => x$2._1)).distinct
after
def scanAllDistinct = {
  val _$started = System.nanoTime;
  val _$result = scanAll.flatten.map(((x$2) => x$2._1)).distinct;
  val _$finished = System.nanoTime;
  scala.Predef.println("(ActionPuzzle3,scanAllDistinct)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def scanAllDistinct2 = GMatch3.scanAll(fixedFuture)(ROW)(COLUMN)(((a, b) => {
  val map = swiping();
  if (a.$bang$eq(null).$amp$amp(b.$bang$eq(null)).$amp$amp(map(a).isEmpty).$amp$amp(map(b).isEmpty))
    a.n.$eq$eq(b.n)
  else
    false
})).filter(((x$3) => x$3.size.$greater(2))).flatten.distinct
after
def scanAllDistinct2 = {
  val _$started = System.nanoTime;
  val _$result = GMatch3.scanAll(fixedFuture)(ROW)(COLUMN)(((a, b) => {
  val map = swiping();
  if (a.$bang$eq(null).$amp$amp(b.$bang$eq(null)).$amp$amp(map(a).isEmpty).$amp$amp(map(b).isEmpty))
    a.n.$eq$eq(b.n)
  else
    false
})).filter(((x$3) => x$3.size.$greater(2))).flatten.distinct;
  val _$finished = System.nanoTime;
  scala.Predef.println("(ActionPuzzle3,scanAllDistinct2)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def fixedFuture = fixed().zipWithIndex.map(<empty> match {
  case scala.Tuple2((row @ _), (x @ _)) => row.zipWithIndex.map(<empty> match {
    case scala.Tuple2((p @ _), (y @ _)) => future()(x)(y)
  })
})
after
def fixedFuture = {
  val _$started = System.nanoTime;
  val _$result = fixed().zipWithIndex.map(<empty> match {
    case scala.Tuple2((row @ _), (x @ _)) => row.zipWithIndex.map(<empty> match {
      case scala.Tuple2((p @ _), (y @ _)) => future()(x)(y)
    })
  });
  val _$finished = System.nanoTime;
  scala.Predef.println("(ActionPuzzle3,fixedFuture)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def scanRemoveFill(): scala.Unit = {
  remove(scanAllDistinct2);
  fill()
}
after
def scanRemoveFill(): scala.Unit = {
  val _$started = System.nanoTime;
  val _$result: scala.Unit = {
    remove(scanAllDistinct2);
    fill()
  };
  val _$finished = System.nanoTime;
  scala.Predef.println("(ActionPuzzle3,scanRemoveFill)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def swipe(x: Int, y: Int, nx: Int, ny: Int) = try {
  def verified = y.$less(fixed()(x).size).$amp$amp(ny.$less(fixed()(nx).size));
  if (verified)
    {
      val pa = future()(x)(y);
      val pb = future()(nx)(ny);
      import Animator._;
      import Interpolation._;
      var pTask: Task = null;
      val task = {
  <synthetic> val x$17 = {
  <synthetic> val x$7 = scala.Tuple2(pa.x, nx);
  {
  <synthetic> val x$6 = scala.Tuple2(pa.y, ny);
  {
  <synthetic> val x$5 = scala.Tuple2(pb.x, x);
  {
  <synthetic> val x$4 = scala.Tuple2(pb.y, y);
  Nil.$colon$colon(x$4)
}.$colon$colon(x$5)
}.$colon$colon(x$6)
}.$colon$colon(x$7)
}.map(<empty> match {
  case scala.Tuple2((v @ _), (tgt @ _)) => interpolate(v).to(tgt).in(0.3).using(exp10Out)
}).$bar$greater(((x$8) => WaitAll((x$8: _*))));
  {
  <synthetic> val x$16 = Do({
    swiping().$plus$plus$eq({
      <synthetic> val x$14 = pa.$minus$greater(swiping().get(pa).map(((x$9) => x$9.filterNot(((x$10) => x$10.$eq$eq(pTask))))).$bar(Nil));
      {
  <synthetic> val x$13 = pb.$minus$greater(swiping().get(pb).map(((x$11) => x$11.filterNot(((x$12) => x$12.$eq$eq(pTask))))).$bar(Nil));
  Nil.$colon$colon(x$13)
}.$colon$colon(x$14)
    });
    swiping.update(swiping().filterNot(((x$15) => x$15._2.isEmpty)));
    if (verified)
      {
        fixed.update(fixed().swap(x, y, nx, ny));
        scanRemoveFill()
      }
    else
      ()
  });
  Nil.$colon$colon(x$16)
}.$colon$colon(x$17)
}.$bar$greater(((x$18) => Sequence((x$18: _*))));
      pTask = task;
      swiping().$plus$plus$eq({
        <synthetic> val x$20 = pa.$minus$greater(swiping().get(pa).$bar(Nil).$colon$plus(task));
        {
  <synthetic> val x$19 = pb.$minus$greater(swiping().get(pb).$bar(Nil).$colon$plus(task));
  Nil.$colon$colon(x$19)
}.$colon$colon(x$20)
      });
      future.update(future().swap(x, y, nx, ny));
      processor.add(task)
    }
  else
    ()
} catch {
  case (e @ (_: Exception)) => e.printStackTrace()
}
after
def swipe(x: Int, y: Int, nx: Int, ny: Int) = {
  val _$started = System.nanoTime;
  val _$result = try {
    def verified = y.$less(fixed()(x).size).$amp$amp(ny.$less(fixed()(nx).size));
    if (verified)
      {
        val pa = future()(x)(y);
        val pb = future()(nx)(ny);
        import Animator._;
        import Interpolation._;
        var pTask: Task = null;
        val task = {
  <synthetic> val x$17 = {
  <synthetic> val x$7 = scala.Tuple2(pa.x, nx);
  {
  <synthetic> val x$6 = scala.Tuple2(pa.y, ny);
  {
  <synthetic> val x$5 = scala.Tuple2(pb.x, x);
  {
  <synthetic> val x$4 = scala.Tuple2(pb.y, y);
  Nil.$colon$colon(x$4)
}.$colon$colon(x$5)
}.$colon$colon(x$6)
}.$colon$colon(x$7)
}.map(<empty> match {
  case scala.Tuple2((v @ _), (tgt @ _)) => interpolate(v).to(tgt).in(0.3).using(exp10Out)
}).$bar$greater(((x$8) => WaitAll((x$8: _*))));
  {
  <synthetic> val x$16 = Do({
    swiping().$plus$plus$eq({
      <synthetic> val x$14 = pa.$minus$greater(swiping().get(pa).map(((x$9) => x$9.filterNot(((x$10) => x$10.$eq$eq(pTask))))).$bar(Nil));
      {
  <synthetic> val x$13 = pb.$minus$greater(swiping().get(pb).map(((x$11) => x$11.filterNot(((x$12) => x$12.$eq$eq(pTask))))).$bar(Nil));
  Nil.$colon$colon(x$13)
}.$colon$colon(x$14)
    });
    swiping.update(swiping().filterNot(((x$15) => x$15._2.isEmpty)));
    if (verified)
      {
        fixed.update(fixed().swap(x, y, nx, ny));
        scanRemoveFill()
      }
    else
      ()
  });
  Nil.$colon$colon(x$16)
}.$colon$colon(x$17)
}.$bar$greater(((x$18) => Sequence((x$18: _*))));
        pTask = task;
        swiping().$plus$plus$eq({
          <synthetic> val x$20 = pa.$minus$greater(swiping().get(pa).$bar(Nil).$colon$plus(task));
          {
  <synthetic> val x$19 = pb.$minus$greater(swiping().get(pb).$bar(Nil).$colon$plus(task));
  Nil.$colon$colon(x$19)
}.$colon$colon(x$20)
        });
        future.update(future().swap(x, y, nx, ny));
        processor.add(task)
      }
    else
      ()
  } catch {
    case (e @ (_: Exception)) => e.printStackTrace()
  };
  val _$finished = System.nanoTime;
  scala.Predef.println("(ActionPuzzle3,swipe)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def fill(): scala.Unit = {
  val filling = future().createFillingPuzzle(seed, COLUMN);
  if (filling.exists(((x$21) => x$21.isEmpty.unary_$bang)))
    {
      falling.update(falling().append(filling));
      future.update(fixed().append(falling()));
      val indexed = filling.flatten.map(((p) => {
        <synthetic> private[this] val x$22 = filling.indexOfPanelUnhandled(p): @scala.unchecked match {
          case scala.Tuple2((x @ _), (y @ _)) => scala.Tuple2(x, y)
        };
        val x = x$22._1;
        val y = x$22._2;
        scala.Tuple3(p, x, y)
      }));
      val futureIndexed = filling.flatten.map(((p) => {
        <synthetic> private[this] val x$23 = future().indexOfPanelUnhandled(p): @scala.unchecked match {
          case scala.Tuple2((x @ _), (y @ _)) => scala.Tuple2(x, y)
        };
        val x = x$23._1;
        val y = x$23._2;
        scala.Tuple3(p, x, y)
      }));
      indexed.withFilter(((check$ifrefutable$1) => check$ifrefutable$1: @scala.unchecked match {
  case scala.Tuple3((p @ _), (x @ _), (y @ _)) => true
  case _ => false
})).foreach(((x$24) => x$24: @scala.unchecked match {
        case scala.Tuple3((p @ _), (x @ _), (y @ _)) => {
          p.x.update(x);
          p.y.update(COLUMN.$plus(y))
        }
      }));
      futureIndexed.$bar$greater(panelAdd)
    }
  else
    ();
  updateTargetPosition()
}
after
def fill(): scala.Unit = {
  val _$started = System.nanoTime;
  val _$result: scala.Unit = {
    val filling = future().createFillingPuzzle(seed, COLUMN);
    if (filling.exists(((x$21) => x$21.isEmpty.unary_$bang)))
      {
        falling.update(falling().append(filling));
        future.update(fixed().append(falling()));
        val indexed = filling.flatten.map(((p) => {
          <synthetic> private[this] val x$22 = filling.indexOfPanelUnhandled(p): @scala.unchecked match {
            case scala.Tuple2((x @ _), (y @ _)) => scala.Tuple2(x, y)
          };
          val x = x$22._1;
          val y = x$22._2;
          scala.Tuple3(p, x, y)
        }));
        val futureIndexed = filling.flatten.map(((p) => {
          <synthetic> private[this] val x$23 = future().indexOfPanelUnhandled(p): @scala.unchecked match {
            case scala.Tuple2((x @ _), (y @ _)) => scala.Tuple2(x, y)
          };
          val x = x$23._1;
          val y = x$23._2;
          scala.Tuple3(p, x, y)
        }));
        indexed.withFilter(((check$ifrefutable$1) => check$ifrefutable$1: @scala.unchecked match {
  case scala.Tuple3((p @ _), (x @ _), (y @ _)) => true
  case _ => false
})).foreach(((x$24) => x$24: @scala.unchecked match {
          case scala.Tuple3((p @ _), (x @ _), (y @ _)) => {
            p.x.update(x);
            p.y.update(COLUMN.$plus(y))
          }
        }));
        futureIndexed.$bar$greater(panelAdd)
      }
    else
      ();
    updateTargetPosition()
  };
  val _$finished = System.nanoTime;
  scala.Predef.println("(ActionPuzzle3,fill)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def cancelSwipingAnimation(panel: AP): scala.Unit = swiping().get(panel).foreach(((tasks) => tasks.foreach(((task) => {
  log("canceled!".$plus(panel));
  swiping().$plus$eq(panel.$minus$greater(swiping().get(panel).map(((x$25) => x$25.filterNot(((x$26) => x$26.$eq$eq(task))))).$bar(Nil)))
}))))
after
def cancelSwipingAnimation(panel: AP): scala.Unit = {
  val _$started = System.nanoTime;
  val _$result: scala.Unit = swiping().get(panel).foreach(((tasks) => tasks.foreach(((task) => {
    log("canceled!".$plus(panel));
    swiping().$plus$eq(panel.$minus$greater(swiping().get(panel).map(((x$25) => x$25.filterNot(((x$26) => x$26.$eq$eq(task))))).$bar(Nil)))
  }))));
  val _$finished = System.nanoTime;
  scala.Predef.println("(ActionPuzzle3,cancelSwipingAnimation)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def remove(panels: Seq[AP]): scala.Unit = {
  if (panels.isEmpty.unary_$bang)
    {
      <synthetic> private[this] val x$27 = fixedFuture.remove(panels): @scala.unchecked match {
        case scala.Tuple2((left @ _), (fallen @ _)) => scala.Tuple2(left, fallen)
      };
      val left = x$27._1;
      val fallen = x$27._2;
      fallen.foreach(((x$28) => x$28.foreach(cancelSwipingAnimation)));
      panelRemove(panels);
      fixed.update(left);
      falling.update(fallen.append(falling()));
      future.update(fixed().append(falling()))
    }
  else
    ();
  updateTargetPosition()
}
after
def remove(panels: Seq[AP]): scala.Unit = {
  val _$started = System.nanoTime;
  val _$result: scala.Unit = {
    if (panels.isEmpty.unary_$bang)
      {
        <synthetic> private[this] val x$27 = fixedFuture.remove(panels): @scala.unchecked match {
          case scala.Tuple2((left @ _), (fallen @ _)) => scala.Tuple2(left, fallen)
        };
        val left = x$27._1;
        val fallen = x$27._2;
        fallen.foreach(((x$28) => x$28.foreach(cancelSwipingAnimation)));
        panelRemove(panels);
        fixed.update(left);
        falling.update(fallen.append(falling()));
        future.update(fixed().append(falling()))
      }
    else
      ();
    updateTargetPosition()
  };
  val _$finished = System.nanoTime;
  scala.Predef.println("(ActionPuzzle3,remove)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def updateTargetPosition(): scala.Unit = {
  val indices = futureIndices();
  falling().foreach(((row) => row.foreach(((p) => {
    <synthetic> private[this] val x$29 = indices(p): @scala.unchecked match {
      case scala.Tuple2((tx @ _), (ty @ _)) => scala.Tuple2(tx, ty)
    };
    val tx = x$29._1;
    val ty = x$29._2;
    p.tx.update(tx);
    p.ty.update(ty)
  }))))
}
after
def updateTargetPosition(): scala.Unit = {
  val _$started = System.nanoTime;
  val _$result: scala.Unit = {
    val indices = futureIndices();
    falling().foreach(((row) => row.foreach(((p) => {
      <synthetic> private[this] val x$29 = indices(p): @scala.unchecked match {
        case scala.Tuple2((tx @ _), (ty @ _)) => scala.Tuple2(tx, ty)
      };
      val tx = x$29._1;
      val ty = x$29._2;
      p.tx.update(tx);
      p.ty.update(ty)
    }))))
  };
  val _$finished = System.nanoTime;
  scala.Predef.println("(ActionPuzzle3,updateTargetPosition)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def initialize(): scala.Unit = fill()
after
def initialize(): scala.Unit = {
  val _$started = System.nanoTime;
  val _$result: scala.Unit = fill();
  val _$finished = System.nanoTime;
  scala.Predef.println("(ActionPuzzle3,initialize)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def update(delta: Float): scala.Unit = {
  updateFalling(delta);
  processor.update(delta)
}
after
def update(delta: Float): scala.Unit = {
  val _$started = System.nanoTime;
  val _$result: scala.Unit = {
    updateFalling(delta);
    processor.update(delta)
  };
  val _$finished = System.nanoTime;
  scala.Predef.println("(ActionPuzzle3,update)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def newPuzzleBuffer: ArrayBuffer[ArrayBuffer[AP]] = ArrayBuffer((0.until(ROW).map(((x$30) => ArrayBuffer.empty[AP])): _*))
after
def newPuzzleBuffer: ArrayBuffer[ArrayBuffer[AP]] = {
  val _$started = System.nanoTime;
  val _$result: ArrayBuffer[ArrayBuffer[AP]] = ArrayBuffer((0.until(ROW).map(((x$30) => ArrayBuffer.empty[AP])): _*));
  val _$finished = System.nanoTime;
  scala.Predef.println("(ActionPuzzle3,newPuzzleBuffer)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def updateFalling(delta: Float): scala.Unit = {
  {
    val fallingCpy = falling();
    val width = fallingCpy.size;
    var x = 0;
    while$2(){
      if (x.$less(width))
        {
          {
            val applied = fallingCpy(x);
            val height = applied.size;
            var y = 0;
            while$1(){
              if (y.$less(height))
                {
                  {
                    val p = applied(y);
                    p.vy().$plus$eq(gravity.$times(delta));
                    if (p.update(delta))
                      finishedBuf.$plus$eq(p)
                    else
                      continuedBuf(x).$plus$eq(p);
                    y.$plus$eq(1)
                  };
                  while$1()
                }
              else
                ()
            };
            x.$plus$eq(1)
          };
          while$2()
        }
      else
        ()
    }
  };
  if (finishedBuf.isEmpty.unary_$bang)
    {
      {
        var x = 0;
        while$4(){
          if (x.$less(ROW))
            {
              {
                val row = fallingBuffer(x);
                row.clear();
                var y = 0;
                val conRow = continuedBuf(x);
                val height = conRow.size;
                while$3(){
                  if (y.$less(height))
                    {
                      {
                        row.$plus$eq(conRow(y));
                        y.$plus$eq(1)
                      };
                      while$3()
                    }
                  else
                    ()
                };
                x.$plus$eq(1)
              };
              while$4()
            }
          else
            ()
        };
        falling.update(fallingBuffer)
      };
      {
        var x = 0;
        while$7(){
          if (x.$less(ROW))
            {
              {
                val row = fixed()(x);
                val length = row.size;
                val buf = fixedBuf(x);
                fixedTemp.clear();
                var y = 0;
                while$5(){
                  if (y.$less(length))
                    {
                      {
                        fixedTemp.push(row(y));
                        y.$plus$eq(1)
                      };
                      while$5()
                    }
                  else
                    ()
                };
                buf.clear();
                while$6(){
                  if (fixedTemp.isEmpty.unary_$bang)
                    {
                      buf.$plus$eq(fixedTemp.pop());
                      while$6()
                    }
                  else
                    ()
                };
                x.$plus$eq(1)
              };
              while$7()
            }
          else
            ()
        }
      };
      finishedBuf.foreach(((p) => fixedBuf(p.tx()).$plus$eq(p)));
      fixed.update(fixedBuf);
      scanRemoveFill()
    }
  else
    ();
  var i = 0;
  while$8(){
    if (i.$less(ROW))
      {
        {
          continuedBuf(i).clear();
          i.$plus$eq(1)
        };
        while$8()
      }
    else
      ()
  };
  finishedBuf.clear()
}
after
def updateFalling(delta: Float): scala.Unit = {
  val _$started = System.nanoTime;
  val _$result: scala.Unit = {
    {
      val fallingCpy = falling();
      val width = fallingCpy.size;
      var x = 0;
      while$2(){
        if (x.$less(width))
          {
            {
              val applied = fallingCpy(x);
              val height = applied.size;
              var y = 0;
              while$1(){
                if (y.$less(height))
                  {
                    {
                      val p = applied(y);
                      p.vy().$plus$eq(gravity.$times(delta));
                      if (p.update(delta))
                        finishedBuf.$plus$eq(p)
                      else
                        continuedBuf(x).$plus$eq(p);
                      y.$plus$eq(1)
                    };
                    while$1()
                  }
                else
                  ()
              };
              x.$plus$eq(1)
            };
            while$2()
          }
        else
          ()
      }
    };
    if (finishedBuf.isEmpty.unary_$bang)
      {
        {
          var x = 0;
          while$4(){
            if (x.$less(ROW))
              {
                {
                  val row = fallingBuffer(x);
                  row.clear();
                  var y = 0;
                  val conRow = continuedBuf(x);
                  val height = conRow.size;
                  while$3(){
                    if (y.$less(height))
                      {
                        {
                          row.$plus$eq(conRow(y));
                          y.$plus$eq(1)
                        };
                        while$3()
                      }
                    else
                      ()
                  };
                  x.$plus$eq(1)
                };
                while$4()
              }
            else
              ()
          };
          falling.update(fallingBuffer)
        };
        {
          var x = 0;
          while$7(){
            if (x.$less(ROW))
              {
                {
                  val row = fixed()(x);
                  val length = row.size;
                  val buf = fixedBuf(x);
                  fixedTemp.clear();
                  var y = 0;
                  while$5(){
                    if (y.$less(length))
                      {
                        {
                          fixedTemp.push(row(y));
                          y.$plus$eq(1)
                        };
                        while$5()
                      }
                    else
                      ()
                  };
                  buf.clear();
                  while$6(){
                    if (fixedTemp.isEmpty.unary_$bang)
                      {
                        buf.$plus$eq(fixedTemp.pop());
                        while$6()
                      }
                    else
                      ()
                  };
                  x.$plus$eq(1)
                };
                while$7()
              }
            else
              ()
          }
        };
        finishedBuf.foreach(((p) => fixedBuf(p.tx()).$plus$eq(p)));
        fixed.update(fixedBuf);
        scanRemoveFill()
      }
    else
      ();
    var i = 0;
    while$8(){
      if (i.$less(ROW))
        {
          {
            continuedBuf(i).clear();
            i.$plus$eq(1)
          };
          while$8()
        }
      else
        ()
    };
    finishedBuf.clear()
  };
  val _$finished = System.nanoTime;
  scala.Predef.println("(ActionPuzzle3,updateFalling)".$plus(_$finished.$minus(_$started)));
  _$result
}
result:
class ActionPuzzle3 extends Reactor with Logging {
  def <init>() = {
    super.<init>();
    ()
  };
  import GMatch3._;
  val ROW = 8;
  val COLUMN = 8;
  val gravity = -10.0;
  val processor = {
    final class $anon extends ParallelProcessor {
      def <init>() = {
        super.<init>();
        ()
      }
    };
    new $anon()
  };
  def initializer: Var[Puzzle[AP]] = {
    val _$started = System.nanoTime;
    val _$result: Var[Puzzle[AP]] = Var(GMatch3.initialize(COLUMN));
    val _$finished = System.nanoTime;
    scala.Predef.println("(ActionPuzzle3,initializer)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def seed: _root_.scala.Function0[AP] = {
    val _$started = System.nanoTime;
    val _$result: _root_.scala.Function0[AP] = (() => MathUtils.random(0, 3).$bar$greater(((x$1) => new AP(x$1))));
    val _$finished = System.nanoTime;
    scala.Predef.println("(ActionPuzzle3,seed)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  val fixed = initializer;
  val falling = initializer;
  val swiping: Var[Map[AP, Seq[Task]]] = Var(Map.empty.withDefaultValue(Nil));
  val future = initializer;
  val futureIndices = future.map(((f) => f.flatten.map(((p) => p.$minus$greater(f.indexOfPanelUnhandled(p)))).toMap.withDefaultValue(scala.Tuple2(0, 0))));
  var panelAdd = ((panels: Seq[scala.Tuple3[AP, Int, Int]]) => ());
  var panelRemove = ((panels: Seq[AP]) => ());
  def scanAll = {
    val _$started = System.nanoTime;
    val _$result = scanAllWithException(fixedFuture)(3)(((p) => {
      val opt = swiping().get(p);
      if (opt.isDefined)
        opt.get.isEmpty.unary_$bang
      else
        false
    }));
    val _$finished = System.nanoTime;
    scala.Predef.println("(ActionPuzzle3,scanAll)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def scanAllDistinct = {
    val _$started = System.nanoTime;
    val _$result = scanAll.flatten.map(((x$2) => x$2._1)).distinct;
    val _$finished = System.nanoTime;
    scala.Predef.println("(ActionPuzzle3,scanAllDistinct)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def scanAllDistinct2 = {
    val _$started = System.nanoTime;
    val _$result = GMatch3.scanAll(fixedFuture)(ROW)(COLUMN)(((a, b) => {
  val map = swiping();
  if (a.$bang$eq(null).$amp$amp(b.$bang$eq(null)).$amp$amp(map(a).isEmpty).$amp$amp(map(b).isEmpty))
    a.n.$eq$eq(b.n)
  else
    false
})).filter(((x$3) => x$3.size.$greater(2))).flatten.distinct;
    val _$finished = System.nanoTime;
    scala.Predef.println("(ActionPuzzle3,scanAllDistinct2)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def fixedFuture = {
    val _$started = System.nanoTime;
    val _$result = fixed().zipWithIndex.map(<empty> match {
      case scala.Tuple2((row @ _), (x @ _)) => row.zipWithIndex.map(<empty> match {
        case scala.Tuple2((p @ _), (y @ _)) => future()(x)(y)
      })
    });
    val _$finished = System.nanoTime;
    scala.Predef.println("(ActionPuzzle3,fixedFuture)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def scanRemoveFill(): scala.Unit = {
    val _$started = System.nanoTime;
    val _$result: scala.Unit = {
      remove(scanAllDistinct2);
      fill()
    };
    val _$finished = System.nanoTime;
    scala.Predef.println("(ActionPuzzle3,scanRemoveFill)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def swipe(x: Int, y: Int, nx: Int, ny: Int) = {
    val _$started = System.nanoTime;
    val _$result = try {
      def verified = y.$less(fixed()(x).size).$amp$amp(ny.$less(fixed()(nx).size));
      if (verified)
        {
          val pa = future()(x)(y);
          val pb = future()(nx)(ny);
          import Animator._;
          import Interpolation._;
          var pTask: Task = null;
          val task = {
  <synthetic> val x$17 = {
  <synthetic> val x$7 = scala.Tuple2(pa.x, nx);
  {
  <synthetic> val x$6 = scala.Tuple2(pa.y, ny);
  {
  <synthetic> val x$5 = scala.Tuple2(pb.x, x);
  {
  <synthetic> val x$4 = scala.Tuple2(pb.y, y);
  Nil.$colon$colon(x$4)
}.$colon$colon(x$5)
}.$colon$colon(x$6)
}.$colon$colon(x$7)
}.map(<empty> match {
  case scala.Tuple2((v @ _), (tgt @ _)) => interpolate(v).to(tgt).in(0.3).using(exp10Out)
}).$bar$greater(((x$8) => WaitAll((x$8: _*))));
  {
  <synthetic> val x$16 = Do({
    swiping().$plus$plus$eq({
      <synthetic> val x$14 = pa.$minus$greater(swiping().get(pa).map(((x$9) => x$9.filterNot(((x$10) => x$10.$eq$eq(pTask))))).$bar(Nil));
      {
  <synthetic> val x$13 = pb.$minus$greater(swiping().get(pb).map(((x$11) => x$11.filterNot(((x$12) => x$12.$eq$eq(pTask))))).$bar(Nil));
  Nil.$colon$colon(x$13)
}.$colon$colon(x$14)
    });
    swiping.update(swiping().filterNot(((x$15) => x$15._2.isEmpty)));
    if (verified)
      {
        fixed.update(fixed().swap(x, y, nx, ny));
        scanRemoveFill()
      }
    else
      ()
  });
  Nil.$colon$colon(x$16)
}.$colon$colon(x$17)
}.$bar$greater(((x$18) => Sequence((x$18: _*))));
          pTask = task;
          swiping().$plus$plus$eq({
            <synthetic> val x$20 = pa.$minus$greater(swiping().get(pa).$bar(Nil).$colon$plus(task));
            {
  <synthetic> val x$19 = pb.$minus$greater(swiping().get(pb).$bar(Nil).$colon$plus(task));
  Nil.$colon$colon(x$19)
}.$colon$colon(x$20)
          });
          future.update(future().swap(x, y, nx, ny));
          processor.add(task)
        }
      else
        ()
    } catch {
      case (e @ (_: Exception)) => e.printStackTrace()
    };
    val _$finished = System.nanoTime;
    scala.Predef.println("(ActionPuzzle3,swipe)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def fill(): scala.Unit = {
    val _$started = System.nanoTime;
    val _$result: scala.Unit = {
      val filling = future().createFillingPuzzle(seed, COLUMN);
      if (filling.exists(((x$21) => x$21.isEmpty.unary_$bang)))
        {
          falling.update(falling().append(filling));
          future.update(fixed().append(falling()));
          val indexed = filling.flatten.map(((p) => {
            <synthetic> private[this] val x$22 = filling.indexOfPanelUnhandled(p): @scala.unchecked match {
              case scala.Tuple2((x @ _), (y @ _)) => scala.Tuple2(x, y)
            };
            val x = x$22._1;
            val y = x$22._2;
            scala.Tuple3(p, x, y)
          }));
          val futureIndexed = filling.flatten.map(((p) => {
            <synthetic> private[this] val x$23 = future().indexOfPanelUnhandled(p): @scala.unchecked match {
              case scala.Tuple2((x @ _), (y @ _)) => scala.Tuple2(x, y)
            };
            val x = x$23._1;
            val y = x$23._2;
            scala.Tuple3(p, x, y)
          }));
          indexed.withFilter(((check$ifrefutable$1) => check$ifrefutable$1: @scala.unchecked match {
  case scala.Tuple3((p @ _), (x @ _), (y @ _)) => true
  case _ => false
})).foreach(((x$24) => x$24: @scala.unchecked match {
            case scala.Tuple3((p @ _), (x @ _), (y @ _)) => {
              p.x.update(x);
              p.y.update(COLUMN.$plus(y))
            }
          }));
          futureIndexed.$bar$greater(panelAdd)
        }
      else
        ();
      updateTargetPosition()
    };
    val _$finished = System.nanoTime;
    scala.Predef.println("(ActionPuzzle3,fill)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def cancelSwipingAnimation(panel: AP): scala.Unit = {
    val _$started = System.nanoTime;
    val _$result: scala.Unit = swiping().get(panel).foreach(((tasks) => tasks.foreach(((task) => {
      log("canceled!".$plus(panel));
      swiping().$plus$eq(panel.$minus$greater(swiping().get(panel).map(((x$25) => x$25.filterNot(((x$26) => x$26.$eq$eq(task))))).$bar(Nil)))
    }))));
    val _$finished = System.nanoTime;
    scala.Predef.println("(ActionPuzzle3,cancelSwipingAnimation)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def remove(panels: Seq[AP]): scala.Unit = {
    val _$started = System.nanoTime;
    val _$result: scala.Unit = {
      if (panels.isEmpty.unary_$bang)
        {
          <synthetic> private[this] val x$27 = fixedFuture.remove(panels): @scala.unchecked match {
            case scala.Tuple2((left @ _), (fallen @ _)) => scala.Tuple2(left, fallen)
          };
          val left = x$27._1;
          val fallen = x$27._2;
          fallen.foreach(((x$28) => x$28.foreach(cancelSwipingAnimation)));
          panelRemove(panels);
          fixed.update(left);
          falling.update(fallen.append(falling()));
          future.update(fixed().append(falling()))
        }
      else
        ();
      updateTargetPosition()
    };
    val _$finished = System.nanoTime;
    scala.Predef.println("(ActionPuzzle3,remove)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def updateTargetPosition(): scala.Unit = {
    val _$started = System.nanoTime;
    val _$result: scala.Unit = {
      val indices = futureIndices();
      falling().foreach(((row) => row.foreach(((p) => {
        <synthetic> private[this] val x$29 = indices(p): @scala.unchecked match {
          case scala.Tuple2((tx @ _), (ty @ _)) => scala.Tuple2(tx, ty)
        };
        val tx = x$29._1;
        val ty = x$29._2;
        p.tx.update(tx);
        p.ty.update(ty)
      }))))
    };
    val _$finished = System.nanoTime;
    scala.Predef.println("(ActionPuzzle3,updateTargetPosition)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def initialize(): scala.Unit = {
    val _$started = System.nanoTime;
    val _$result: scala.Unit = fill();
    val _$finished = System.nanoTime;
    scala.Predef.println("(ActionPuzzle3,initialize)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def update(delta: Float): scala.Unit = {
    val _$started = System.nanoTime;
    val _$result: scala.Unit = {
      updateFalling(delta);
      processor.update(delta)
    };
    val _$finished = System.nanoTime;
    scala.Predef.println("(ActionPuzzle3,update)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def newPuzzleBuffer: ArrayBuffer[ArrayBuffer[AP]] = {
    val _$started = System.nanoTime;
    val _$result: ArrayBuffer[ArrayBuffer[AP]] = ArrayBuffer((0.until(ROW).map(((x$30) => ArrayBuffer.empty[AP])): _*));
    val _$finished = System.nanoTime;
    scala.Predef.println("(ActionPuzzle3,newPuzzleBuffer)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  val finishedBuf = ListBuffer.empty[AP];
  val continuedBuf = newPuzzleBuffer;
  val fallingBuffer = ArrayBuffer((0.until(ROW).map(((x$31) => ArrayBuffer.empty[AP])): _*));
  val fixedBuf = newPuzzleBuffer;
  val fixedTemp = mutable.Stack.empty[AP];
  def updateFalling(delta: Float): scala.Unit = {
    val _$started = System.nanoTime;
    val _$result: scala.Unit = {
      {
        val fallingCpy = falling();
        val width = fallingCpy.size;
        var x = 0;
        while$2(){
          if (x.$less(width))
            {
              {
                val applied = fallingCpy(x);
                val height = applied.size;
                var y = 0;
                while$1(){
                  if (y.$less(height))
                    {
                      {
                        val p = applied(y);
                        p.vy().$plus$eq(gravity.$times(delta));
                        if (p.update(delta))
                          finishedBuf.$plus$eq(p)
                        else
                          continuedBuf(x).$plus$eq(p);
                        y.$plus$eq(1)
                      };
                      while$1()
                    }
                  else
                    ()
                };
                x.$plus$eq(1)
              };
              while$2()
            }
          else
            ()
        }
      };
      if (finishedBuf.isEmpty.unary_$bang)
        {
          {
            var x = 0;
            while$4(){
              if (x.$less(ROW))
                {
                  {
                    val row = fallingBuffer(x);
                    row.clear();
                    var y = 0;
                    val conRow = continuedBuf(x);
                    val height = conRow.size;
                    while$3(){
                      if (y.$less(height))
                        {
                          {
                            row.$plus$eq(conRow(y));
                            y.$plus$eq(1)
                          };
                          while$3()
                        }
                      else
                        ()
                    };
                    x.$plus$eq(1)
                  };
                  while$4()
                }
              else
                ()
            };
            falling.update(fallingBuffer)
          };
          {
            var x = 0;
            while$7(){
              if (x.$less(ROW))
                {
                  {
                    val row = fixed()(x);
                    val length = row.size;
                    val buf = fixedBuf(x);
                    fixedTemp.clear();
                    var y = 0;
                    while$5(){
                      if (y.$less(length))
                        {
                          {
                            fixedTemp.push(row(y));
                            y.$plus$eq(1)
                          };
                          while$5()
                        }
                      else
                        ()
                    };
                    buf.clear();
                    while$6(){
                      if (fixedTemp.isEmpty.unary_$bang)
                        {
                          buf.$plus$eq(fixedTemp.pop());
                          while$6()
                        }
                      else
                        ()
                    };
                    x.$plus$eq(1)
                  };
                  while$7()
                }
              else
                ()
            }
          };
          finishedBuf.foreach(((p) => fixedBuf(p.tx()).$plus$eq(p)));
          fixed.update(fixedBuf);
          scanRemoveFill()
        }
      else
        ();
      var i = 0;
      while$8(){
        if (i.$less(ROW))
          {
            {
              continuedBuf(i).clear();
              i.$plus$eq(1)
            };
            while$8()
          }
        else
          ()
      };
      finishedBuf.clear()
    };
    val _$finished = System.nanoTime;
    scala.Predef.println("(ActionPuzzle3,updateFalling)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  class AP extends GMatch3.Panel with Reactor {
    <paramaccessor> val n: Int = _;
    def <init>(n: Int) = {
      super.<init>();
      ()
    };
    val x = Var(0.0);
    val y = Var(0.0);
    val vx = Var(0.0);
    val vy = Var(0.0);
    val tx = Var(0);
    val ty = Var(0);
    lazy val isSwiping = swiping.map(((x$32) => x$32.get(AP.this).map(((x$33) => x$33.isEmpty.unary_$bang)).$bar(false)));
    lazy val isFalling = falling.map(((x$34) => x$34.exists(((x$35) => x$35.contains(AP.this)))));
    def matchTo(panel: Panel): Boolean = panel match {
      case (p @ (_: AP)) => n.$eq$eq(p.n)
      case _ => false
    };
    def update(delta: Float): Boolean = {
      val nx = x().$plus(vx().$times(delta));
      var ny = y().$plus(vy().$times(delta));
      val next = PartialFunction.condOpt(ty().$minus(1))(future()(tx()));
      val finished = next match {
        case Some((p @ _)) if fixed().exists(((x$36) => x$36.contains(p))) => ny.$minus(ty()).$less(0.0)
        case Some((p @ _)) if ny.$minus(p.y()).$less(1.0) => {
          ny = p.y().$plus(1);
          vy.update(p.vy());
          false
        }
        case _ => ny.$minus(ty()).$less(0.0)
      };
      if (finished)
        {
          ny = ty();
          clear()
        }
      else
        ();
      x.update(nx);
      y.update(ny);
      finished
    };
    def clear(): scala.Unit = {
      vx.update(0);
      vy.update(0)
    };
    override def toString: String = n.$plus("")
  }
}
[0m[[0minfo[0m] [0mCompiling 2 Scala sources to /Users/glyph/Documents/sbt/scalagamerepo/common/target/scala-2.10/classes...[0m
before
def initializer: Var[Puzzle[AP]] = Var(GMatch3.initialize(COLUMN))
after
def initializer: Var[Puzzle[AP]] = {
  val _$started = System.nanoTime;
  val _$result: Var[Puzzle[AP]] = Var(GMatch3.initialize(COLUMN));
  val _$finished = System.nanoTime;
  scala.Predef.println("(ActionPuzzle3,initializer)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def seed: _root_.scala.Function0[AP] = (() => MathUtils.random(0, 3).$bar$greater(((x$1) => new AP(x$1))))
after
def seed: _root_.scala.Function0[AP] = {
  val _$started = System.nanoTime;
  val _$result: _root_.scala.Function0[AP] = (() => MathUtils.random(0, 3).$bar$greater(((x$1) => new AP(x$1))));
  val _$finished = System.nanoTime;
  scala.Predef.println("(ActionPuzzle3,seed)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def scanAll = scanAllWithException(fixedFuture)(3)(((p) => {
  val opt = swiping().get(p);
  if (opt.isDefined)
    opt.get.isEmpty.unary_$bang
  else
    false
}))
after
def scanAll = {
  val _$started = System.nanoTime;
  val _$result = scanAllWithException(fixedFuture)(3)(((p) => {
    val opt = swiping().get(p);
    if (opt.isDefined)
      opt.get.isEmpty.unary_$bang
    else
      false
  }));
  val _$finished = System.nanoTime;
  scala.Predef.println("(ActionPuzzle3,scanAll)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def scanAllDistinct = scanAll.flatten.map(((x$2) => x$2._1)).distinct
after
def scanAllDistinct = {
  val _$started = System.nanoTime;
  val _$result = scanAll.flatten.map(((x$2) => x$2._1)).distinct;
  val _$finished = System.nanoTime;
  scala.Predef.println("(ActionPuzzle3,scanAllDistinct)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def scanAllDistinct2 = GMatch3.scanAll(fixedFuture)(ROW)(COLUMN)(((a, b) => {
  val map = swiping();
  if (a.$bang$eq(null).$amp$amp(b.$bang$eq(null)).$amp$amp(map(a).isEmpty).$amp$amp(map(b).isEmpty))
    a.n.$eq$eq(b.n)
  else
    false
})).filter(((x$3) => x$3.size.$greater(2))).flatten.distinct
after
def scanAllDistinct2 = {
  val _$started = System.nanoTime;
  val _$result = GMatch3.scanAll(fixedFuture)(ROW)(COLUMN)(((a, b) => {
  val map = swiping();
  if (a.$bang$eq(null).$amp$amp(b.$bang$eq(null)).$amp$amp(map(a).isEmpty).$amp$amp(map(b).isEmpty))
    a.n.$eq$eq(b.n)
  else
    false
})).filter(((x$3) => x$3.size.$greater(2))).flatten.distinct;
  val _$finished = System.nanoTime;
  scala.Predef.println("(ActionPuzzle3,scanAllDistinct2)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def fixedFuture = fixed().zipWithIndex.map(<empty> match {
  case scala.Tuple2((row @ _), (x @ _)) => row.zipWithIndex.map(<empty> match {
    case scala.Tuple2((p @ _), (y @ _)) => future()(x)(y)
  })
})
after
def fixedFuture = {
  val _$started = System.nanoTime;
  val _$result = fixed().zipWithIndex.map(<empty> match {
    case scala.Tuple2((row @ _), (x @ _)) => row.zipWithIndex.map(<empty> match {
      case scala.Tuple2((p @ _), (y @ _)) => future()(x)(y)
    })
  });
  val _$finished = System.nanoTime;
  scala.Predef.println("(ActionPuzzle3,fixedFuture)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def scanRemoveFill(): scala.Unit = {
  remove(scanAllDistinct2);
  fill()
}
after
def scanRemoveFill(): scala.Unit = {
  val _$started = System.nanoTime;
  val _$result: scala.Unit = {
    remove(scanAllDistinct2);
    fill()
  };
  val _$finished = System.nanoTime;
  scala.Predef.println("(ActionPuzzle3,scanRemoveFill)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def swipe(x: Int, y: Int, nx: Int, ny: Int) = try {
  def verified = y.$less(fixed()(x).size).$amp$amp(ny.$less(fixed()(nx).size));
  if (verified)
    {
      val pa = future()(x)(y);
      val pb = future()(nx)(ny);
      import Animator._;
      import Interpolation._;
      var pTask: Task = null;
      val task = {
  <synthetic> val x$17 = {
  <synthetic> val x$7 = scala.Tuple2(pa.x, nx);
  {
  <synthetic> val x$6 = scala.Tuple2(pa.y, ny);
  {
  <synthetic> val x$5 = scala.Tuple2(pb.x, x);
  {
  <synthetic> val x$4 = scala.Tuple2(pb.y, y);
  Nil.$colon$colon(x$4)
}.$colon$colon(x$5)
}.$colon$colon(x$6)
}.$colon$colon(x$7)
}.map(<empty> match {
  case scala.Tuple2((v @ _), (tgt @ _)) => interpolate(v).to(tgt).in(0.3).using(exp10Out)
}).$bar$greater(((x$8) => WaitAll((x$8: _*))));
  {
  <synthetic> val x$16 = Do({
    swiping().$plus$plus$eq({
      <synthetic> val x$14 = pa.$minus$greater(swiping().get(pa).map(((x$9) => x$9.filterNot(((x$10) => x$10.$eq$eq(pTask))))).$bar(Nil));
      {
  <synthetic> val x$13 = pb.$minus$greater(swiping().get(pb).map(((x$11) => x$11.filterNot(((x$12) => x$12.$eq$eq(pTask))))).$bar(Nil));
  Nil.$colon$colon(x$13)
}.$colon$colon(x$14)
    });
    swiping.update(swiping().filterNot(((x$15) => x$15._2.isEmpty)));
    if (verified)
      {
        fixed.update(fixed().swap(x, y, nx, ny));
        scanRemoveFill()
      }
    else
      ()
  });
  Nil.$colon$colon(x$16)
}.$colon$colon(x$17)
}.$bar$greater(((x$18) => Sequence((x$18: _*))));
      pTask = task;
      swiping().$plus$plus$eq({
        <synthetic> val x$20 = pa.$minus$greater(swiping().get(pa).$bar(Nil).$colon$plus(task));
        {
  <synthetic> val x$19 = pb.$minus$greater(swiping().get(pb).$bar(Nil).$colon$plus(task));
  Nil.$colon$colon(x$19)
}.$colon$colon(x$20)
      });
      future.update(future().swap(x, y, nx, ny));
      processor.add(task)
    }
  else
    ()
} catch {
  case (e @ (_: Exception)) => e.printStackTrace()
}
after
def swipe(x: Int, y: Int, nx: Int, ny: Int) = {
  val _$started = System.nanoTime;
  val _$result = try {
    def verified = y.$less(fixed()(x).size).$amp$amp(ny.$less(fixed()(nx).size));
    if (verified)
      {
        val pa = future()(x)(y);
        val pb = future()(nx)(ny);
        import Animator._;
        import Interpolation._;
        var pTask: Task = null;
        val task = {
  <synthetic> val x$17 = {
  <synthetic> val x$7 = scala.Tuple2(pa.x, nx);
  {
  <synthetic> val x$6 = scala.Tuple2(pa.y, ny);
  {
  <synthetic> val x$5 = scala.Tuple2(pb.x, x);
  {
  <synthetic> val x$4 = scala.Tuple2(pb.y, y);
  Nil.$colon$colon(x$4)
}.$colon$colon(x$5)
}.$colon$colon(x$6)
}.$colon$colon(x$7)
}.map(<empty> match {
  case scala.Tuple2((v @ _), (tgt @ _)) => interpolate(v).to(tgt).in(0.3).using(exp10Out)
}).$bar$greater(((x$8) => WaitAll((x$8: _*))));
  {
  <synthetic> val x$16 = Do({
    swiping().$plus$plus$eq({
      <synthetic> val x$14 = pa.$minus$greater(swiping().get(pa).map(((x$9) => x$9.filterNot(((x$10) => x$10.$eq$eq(pTask))))).$bar(Nil));
      {
  <synthetic> val x$13 = pb.$minus$greater(swiping().get(pb).map(((x$11) => x$11.filterNot(((x$12) => x$12.$eq$eq(pTask))))).$bar(Nil));
  Nil.$colon$colon(x$13)
}.$colon$colon(x$14)
    });
    swiping.update(swiping().filterNot(((x$15) => x$15._2.isEmpty)));
    if (verified)
      {
        fixed.update(fixed().swap(x, y, nx, ny));
        scanRemoveFill()
      }
    else
      ()
  });
  Nil.$colon$colon(x$16)
}.$colon$colon(x$17)
}.$bar$greater(((x$18) => Sequence((x$18: _*))));
        pTask = task;
        swiping().$plus$plus$eq({
          <synthetic> val x$20 = pa.$minus$greater(swiping().get(pa).$bar(Nil).$colon$plus(task));
          {
  <synthetic> val x$19 = pb.$minus$greater(swiping().get(pb).$bar(Nil).$colon$plus(task));
  Nil.$colon$colon(x$19)
}.$colon$colon(x$20)
        });
        future.update(future().swap(x, y, nx, ny));
        processor.add(task)
      }
    else
      ()
  } catch {
    case (e @ (_: Exception)) => e.printStackTrace()
  };
  val _$finished = System.nanoTime;
  scala.Predef.println("(ActionPuzzle3,swipe)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def fill(): scala.Unit = {
  val filling = future().createFillingPuzzle(seed, COLUMN);
  if (filling.exists(((x$21) => x$21.isEmpty.unary_$bang)))
    {
      falling.update(falling().append(filling));
      future.update(fixed().append(falling()));
      val indexed = filling.flatten.map(((p) => {
        <synthetic> private[this] val x$22 = filling.indexOfPanelUnhandled(p): @scala.unchecked match {
          case scala.Tuple2((x @ _), (y @ _)) => scala.Tuple2(x, y)
        };
        val x = x$22._1;
        val y = x$22._2;
        scala.Tuple3(p, x, y)
      }));
      val futureIndexed = filling.flatten.map(((p) => {
        <synthetic> private[this] val x$23 = future().indexOfPanelUnhandled(p): @scala.unchecked match {
          case scala.Tuple2((x @ _), (y @ _)) => scala.Tuple2(x, y)
        };
        val x = x$23._1;
        val y = x$23._2;
        scala.Tuple3(p, x, y)
      }));
      indexed.withFilter(((check$ifrefutable$1) => check$ifrefutable$1: @scala.unchecked match {
  case scala.Tuple3((p @ _), (x @ _), (y @ _)) => true
  case _ => false
})).foreach(((x$24) => x$24: @scala.unchecked match {
        case scala.Tuple3((p @ _), (x @ _), (y @ _)) => {
          p.x.update(x);
          p.y.update(COLUMN.$plus(y))
        }
      }));
      futureIndexed.$bar$greater(panelAdd)
    }
  else
    ();
  updateTargetPosition()
}
after
def fill(): scala.Unit = {
  val _$started = System.nanoTime;
  val _$result: scala.Unit = {
    val filling = future().createFillingPuzzle(seed, COLUMN);
    if (filling.exists(((x$21) => x$21.isEmpty.unary_$bang)))
      {
        falling.update(falling().append(filling));
        future.update(fixed().append(falling()));
        val indexed = filling.flatten.map(((p) => {
          <synthetic> private[this] val x$22 = filling.indexOfPanelUnhandled(p): @scala.unchecked match {
            case scala.Tuple2((x @ _), (y @ _)) => scala.Tuple2(x, y)
          };
          val x = x$22._1;
          val y = x$22._2;
          scala.Tuple3(p, x, y)
        }));
        val futureIndexed = filling.flatten.map(((p) => {
          <synthetic> private[this] val x$23 = future().indexOfPanelUnhandled(p): @scala.unchecked match {
            case scala.Tuple2((x @ _), (y @ _)) => scala.Tuple2(x, y)
          };
          val x = x$23._1;
          val y = x$23._2;
          scala.Tuple3(p, x, y)
        }));
        indexed.withFilter(((check$ifrefutable$1) => check$ifrefutable$1: @scala.unchecked match {
  case scala.Tuple3((p @ _), (x @ _), (y @ _)) => true
  case _ => false
})).foreach(((x$24) => x$24: @scala.unchecked match {
          case scala.Tuple3((p @ _), (x @ _), (y @ _)) => {
            p.x.update(x);
            p.y.update(COLUMN.$plus(y))
          }
        }));
        futureIndexed.$bar$greater(panelAdd)
      }
    else
      ();
    updateTargetPosition()
  };
  val _$finished = System.nanoTime;
  scala.Predef.println("(ActionPuzzle3,fill)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def cancelSwipingAnimation(panel: AP): scala.Unit = swiping().get(panel).foreach(((tasks) => tasks.foreach(((task) => {
  log("canceled!".$plus(panel));
  swiping().$plus$eq(panel.$minus$greater(swiping().get(panel).map(((x$25) => x$25.filterNot(((x$26) => x$26.$eq$eq(task))))).$bar(Nil)))
}))))
after
def cancelSwipingAnimation(panel: AP): scala.Unit = {
  val _$started = System.nanoTime;
  val _$result: scala.Unit = swiping().get(panel).foreach(((tasks) => tasks.foreach(((task) => {
    log("canceled!".$plus(panel));
    swiping().$plus$eq(panel.$minus$greater(swiping().get(panel).map(((x$25) => x$25.filterNot(((x$26) => x$26.$eq$eq(task))))).$bar(Nil)))
  }))));
  val _$finished = System.nanoTime;
  scala.Predef.println("(ActionPuzzle3,cancelSwipingAnimation)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def remove(panels: Seq[AP]): scala.Unit = {
  if (panels.isEmpty.unary_$bang)
    {
      <synthetic> private[this] val x$27 = fixedFuture.remove(panels): @scala.unchecked match {
        case scala.Tuple2((left @ _), (fallen @ _)) => scala.Tuple2(left, fallen)
      };
      val left = x$27._1;
      val fallen = x$27._2;
      fallen.foreach(((x$28) => x$28.foreach(cancelSwipingAnimation)));
      panelRemove(panels);
      fixed.update(left);
      falling.update(fallen.append(falling()));
      future.update(fixed().append(falling()))
    }
  else
    ();
  updateTargetPosition()
}
after
def remove(panels: Seq[AP]): scala.Unit = {
  val _$started = System.nanoTime;
  val _$result: scala.Unit = {
    if (panels.isEmpty.unary_$bang)
      {
        <synthetic> private[this] val x$27 = fixedFuture.remove(panels): @scala.unchecked match {
          case scala.Tuple2((left @ _), (fallen @ _)) => scala.Tuple2(left, fallen)
        };
        val left = x$27._1;
        val fallen = x$27._2;
        fallen.foreach(((x$28) => x$28.foreach(cancelSwipingAnimation)));
        panelRemove(panels);
        fixed.update(left);
        falling.update(fallen.append(falling()));
        future.update(fixed().append(falling()))
      }
    else
      ();
    updateTargetPosition()
  };
  val _$finished = System.nanoTime;
  scala.Predef.println("(ActionPuzzle3,remove)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def updateTargetPosition(): scala.Unit = {
  val indices = futureIndices();
  falling().foreach(((row) => row.foreach(((p) => {
    <synthetic> private[this] val x$29 = indices(p): @scala.unchecked match {
      case scala.Tuple2((tx @ _), (ty @ _)) => scala.Tuple2(tx, ty)
    };
    val tx = x$29._1;
    val ty = x$29._2;
    p.tx.update(tx);
    p.ty.update(ty)
  }))))
}
after
def updateTargetPosition(): scala.Unit = {
  val _$started = System.nanoTime;
  val _$result: scala.Unit = {
    val indices = futureIndices();
    falling().foreach(((row) => row.foreach(((p) => {
      <synthetic> private[this] val x$29 = indices(p): @scala.unchecked match {
        case scala.Tuple2((tx @ _), (ty @ _)) => scala.Tuple2(tx, ty)
      };
      val tx = x$29._1;
      val ty = x$29._2;
      p.tx.update(tx);
      p.ty.update(ty)
    }))))
  };
  val _$finished = System.nanoTime;
  scala.Predef.println("(ActionPuzzle3,updateTargetPosition)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def initialize(): scala.Unit = fill()
after
def initialize(): scala.Unit = {
  val _$started = System.nanoTime;
  val _$result: scala.Unit = fill();
  val _$finished = System.nanoTime;
  scala.Predef.println("(ActionPuzzle3,initialize)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def update(delta: Float): scala.Unit = {
  updateFalling(delta);
  processor.update(delta)
}
after
def update(delta: Float): scala.Unit = {
  val _$started = System.nanoTime;
  val _$result: scala.Unit = {
    updateFalling(delta);
    processor.update(delta)
  };
  val _$finished = System.nanoTime;
  scala.Predef.println("(ActionPuzzle3,update)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def newPuzzleBuffer: ArrayBuffer[ArrayBuffer[AP]] = ArrayBuffer((0.until(ROW).map(((x$30) => ArrayBuffer.empty[AP])): _*))
after
def newPuzzleBuffer: ArrayBuffer[ArrayBuffer[AP]] = {
  val _$started = System.nanoTime;
  val _$result: ArrayBuffer[ArrayBuffer[AP]] = ArrayBuffer((0.until(ROW).map(((x$30) => ArrayBuffer.empty[AP])): _*));
  val _$finished = System.nanoTime;
  scala.Predef.println("(ActionPuzzle3,newPuzzleBuffer)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def updateFalling(delta: Float): scala.Unit = {
  {
    val fallingCpy = falling();
    val width = fallingCpy.size;
    var x = 0;
    while$2(){
      if (x.$less(width))
        {
          {
            val applied = fallingCpy(x);
            val height = applied.size;
            var y = 0;
            while$1(){
              if (y.$less(height))
                {
                  {
                    val p = applied(y);
                    p.vy().$plus$eq(gravity.$times(delta));
                    if (p.update(delta))
                      finishedBuf.$plus$eq(p)
                    else
                      continuedBuf(x).$plus$eq(p);
                    y.$plus$eq(1)
                  };
                  while$1()
                }
              else
                ()
            };
            x.$plus$eq(1)
          };
          while$2()
        }
      else
        ()
    }
  };
  if (finishedBuf.isEmpty.unary_$bang)
    {
      {
        var x = 0;
        while$4(){
          if (x.$less(ROW))
            {
              {
                val row = fallingBuffer(x);
                row.clear();
                var y = 0;
                val conRow = continuedBuf(x);
                val height = conRow.size;
                while$3(){
                  if (y.$less(height))
                    {
                      {
                        row.$plus$eq(conRow(y));
                        y.$plus$eq(1)
                      };
                      while$3()
                    }
                  else
                    ()
                };
                x.$plus$eq(1)
              };
              while$4()
            }
          else
            ()
        };
        falling.update(fallingBuffer)
      };
      {
        var x = 0;
        while$7(){
          if (x.$less(ROW))
            {
              {
                val row = fixed()(x);
                val length = row.size;
                val buf = fixedBuf(x);
                fixedTemp.clear();
                var y = 0;
                while$5(){
                  if (y.$less(length))
                    {
                      {
                        fixedTemp.push(row(y));
                        y.$plus$eq(1)
                      };
                      while$5()
                    }
                  else
                    ()
                };
                buf.clear();
                while$6(){
                  if (fixedTemp.isEmpty.unary_$bang)
                    {
                      buf.$plus$eq(fixedTemp.pop());
                      while$6()
                    }
                  else
                    ()
                };
                x.$plus$eq(1)
              };
              while$7()
            }
          else
            ()
        }
      };
      finishedBuf.foreach(((p) => fixedBuf(p.tx()).$plus$eq(p)));
      fixed.update(fixedBuf);
      scanRemoveFill()
    }
  else
    ();
  var i = 0;
  while$8(){
    if (i.$less(ROW))
      {
        {
          continuedBuf(i).clear();
          i.$plus$eq(1)
        };
        while$8()
      }
    else
      ()
  };
  finishedBuf.clear()
}
after
def updateFalling(delta: Float): scala.Unit = {
  val _$started = System.nanoTime;
  val _$result: scala.Unit = {
    {
      val fallingCpy = falling();
      val width = fallingCpy.size;
      var x = 0;
      while$2(){
        if (x.$less(width))
          {
            {
              val applied = fallingCpy(x);
              val height = applied.size;
              var y = 0;
              while$1(){
                if (y.$less(height))
                  {
                    {
                      val p = applied(y);
                      p.vy().$plus$eq(gravity.$times(delta));
                      if (p.update(delta))
                        finishedBuf.$plus$eq(p)
                      else
                        continuedBuf(x).$plus$eq(p);
                      y.$plus$eq(1)
                    };
                    while$1()
                  }
                else
                  ()
              };
              x.$plus$eq(1)
            };
            while$2()
          }
        else
          ()
      }
    };
    if (finishedBuf.isEmpty.unary_$bang)
      {
        {
          var x = 0;
          while$4(){
            if (x.$less(ROW))
              {
                {
                  val row = fallingBuffer(x);
                  row.clear();
                  var y = 0;
                  val conRow = continuedBuf(x);
                  val height = conRow.size;
                  while$3(){
                    if (y.$less(height))
                      {
                        {
                          row.$plus$eq(conRow(y));
                          y.$plus$eq(1)
                        };
                        while$3()
                      }
                    else
                      ()
                  };
                  x.$plus$eq(1)
                };
                while$4()
              }
            else
              ()
          };
          falling.update(fallingBuffer)
        };
        {
          var x = 0;
          while$7(){
            if (x.$less(ROW))
              {
                {
                  val row = fixed()(x);
                  val length = row.size;
                  val buf = fixedBuf(x);
                  fixedTemp.clear();
                  var y = 0;
                  while$5(){
                    if (y.$less(length))
                      {
                        {
                          fixedTemp.push(row(y));
                          y.$plus$eq(1)
                        };
                        while$5()
                      }
                    else
                      ()
                  };
                  buf.clear();
                  while$6(){
                    if (fixedTemp.isEmpty.unary_$bang)
                      {
                        buf.$plus$eq(fixedTemp.pop());
                        while$6()
                      }
                    else
                      ()
                  };
                  x.$plus$eq(1)
                };
                while$7()
              }
            else
              ()
          }
        };
        finishedBuf.foreach(((p) => fixedBuf(p.tx()).$plus$eq(p)));
        fixed.update(fixedBuf);
        scanRemoveFill()
      }
    else
      ();
    var i = 0;
    while$8(){
      if (i.$less(ROW))
        {
          {
            continuedBuf(i).clear();
            i.$plus$eq(1)
          };
          while$8()
        }
      else
        ()
    };
    finishedBuf.clear()
  };
  val _$finished = System.nanoTime;
  scala.Predef.println("(ActionPuzzle3,updateFalling)".$plus(_$finished.$minus(_$started)));
  _$result
}
result:
class ActionPuzzle3 extends Reactor with Logging {
  def <init>() = {
    super.<init>();
    ()
  };
  import GMatch3._;
  val ROW = 8;
  val COLUMN = 8;
  val gravity = -10.0;
  val processor = {
    final class $anon extends ParallelProcessor {
      def <init>() = {
        super.<init>();
        ()
      }
    };
    new $anon()
  };
  def initializer: Var[Puzzle[AP]] = {
    val _$started = System.nanoTime;
    val _$result: Var[Puzzle[AP]] = Var(GMatch3.initialize(COLUMN));
    val _$finished = System.nanoTime;
    scala.Predef.println("(ActionPuzzle3,initializer)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def seed: _root_.scala.Function0[AP] = {
    val _$started = System.nanoTime;
    val _$result: _root_.scala.Function0[AP] = (() => MathUtils.random(0, 3).$bar$greater(((x$1) => new AP(x$1))));
    val _$finished = System.nanoTime;
    scala.Predef.println("(ActionPuzzle3,seed)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  val fixed = initializer;
  val falling = initializer;
  val swiping: Var[Map[AP, Seq[Task]]] = Var(Map.empty.withDefaultValue(Nil));
  val future = initializer;
  val futureIndices = future.map(((f) => f.flatten.map(((p) => p.$minus$greater(f.indexOfPanelUnhandled(p)))).toMap.withDefaultValue(scala.Tuple2(0, 0))));
  var panelAdd = ((panels: Seq[scala.Tuple3[AP, Int, Int]]) => ());
  var panelRemove = ((panels: Seq[AP]) => ());
  def scanAll = {
    val _$started = System.nanoTime;
    val _$result = scanAllWithException(fixedFuture)(3)(((p) => {
      val opt = swiping().get(p);
      if (opt.isDefined)
        opt.get.isEmpty.unary_$bang
      else
        false
    }));
    val _$finished = System.nanoTime;
    scala.Predef.println("(ActionPuzzle3,scanAll)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def scanAllDistinct = {
    val _$started = System.nanoTime;
    val _$result = scanAll.flatten.map(((x$2) => x$2._1)).distinct;
    val _$finished = System.nanoTime;
    scala.Predef.println("(ActionPuzzle3,scanAllDistinct)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def scanAllDistinct2 = {
    val _$started = System.nanoTime;
    val _$result = GMatch3.scanAll(fixedFuture)(ROW)(COLUMN)(((a, b) => {
  val map = swiping();
  if (a.$bang$eq(null).$amp$amp(b.$bang$eq(null)).$amp$amp(map(a).isEmpty).$amp$amp(map(b).isEmpty))
    a.n.$eq$eq(b.n)
  else
    false
})).filter(((x$3) => x$3.size.$greater(2))).flatten.distinct;
    val _$finished = System.nanoTime;
    scala.Predef.println("(ActionPuzzle3,scanAllDistinct2)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def fixedFuture = {
    val _$started = System.nanoTime;
    val _$result = fixed().zipWithIndex.map(<empty> match {
      case scala.Tuple2((row @ _), (x @ _)) => row.zipWithIndex.map(<empty> match {
        case scala.Tuple2((p @ _), (y @ _)) => future()(x)(y)
      })
    });
    val _$finished = System.nanoTime;
    scala.Predef.println("(ActionPuzzle3,fixedFuture)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def scanRemoveFill(): scala.Unit = {
    val _$started = System.nanoTime;
    val _$result: scala.Unit = {
      remove(scanAllDistinct2);
      fill()
    };
    val _$finished = System.nanoTime;
    scala.Predef.println("(ActionPuzzle3,scanRemoveFill)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def swipe(x: Int, y: Int, nx: Int, ny: Int) = {
    val _$started = System.nanoTime;
    val _$result = try {
      def verified = y.$less(fixed()(x).size).$amp$amp(ny.$less(fixed()(nx).size));
      if (verified)
        {
          val pa = future()(x)(y);
          val pb = future()(nx)(ny);
          import Animator._;
          import Interpolation._;
          var pTask: Task = null;
          val task = {
  <synthetic> val x$17 = {
  <synthetic> val x$7 = scala.Tuple2(pa.x, nx);
  {
  <synthetic> val x$6 = scala.Tuple2(pa.y, ny);
  {
  <synthetic> val x$5 = scala.Tuple2(pb.x, x);
  {
  <synthetic> val x$4 = scala.Tuple2(pb.y, y);
  Nil.$colon$colon(x$4)
}.$colon$colon(x$5)
}.$colon$colon(x$6)
}.$colon$colon(x$7)
}.map(<empty> match {
  case scala.Tuple2((v @ _), (tgt @ _)) => interpolate(v).to(tgt).in(0.3).using(exp10Out)
}).$bar$greater(((x$8) => WaitAll((x$8: _*))));
  {
  <synthetic> val x$16 = Do({
    swiping().$plus$plus$eq({
      <synthetic> val x$14 = pa.$minus$greater(swiping().get(pa).map(((x$9) => x$9.filterNot(((x$10) => x$10.$eq$eq(pTask))))).$bar(Nil));
      {
  <synthetic> val x$13 = pb.$minus$greater(swiping().get(pb).map(((x$11) => x$11.filterNot(((x$12) => x$12.$eq$eq(pTask))))).$bar(Nil));
  Nil.$colon$colon(x$13)
}.$colon$colon(x$14)
    });
    swiping.update(swiping().filterNot(((x$15) => x$15._2.isEmpty)));
    if (verified)
      {
        fixed.update(fixed().swap(x, y, nx, ny));
        scanRemoveFill()
      }
    else
      ()
  });
  Nil.$colon$colon(x$16)
}.$colon$colon(x$17)
}.$bar$greater(((x$18) => Sequence((x$18: _*))));
          pTask = task;
          swiping().$plus$plus$eq({
            <synthetic> val x$20 = pa.$minus$greater(swiping().get(pa).$bar(Nil).$colon$plus(task));
            {
  <synthetic> val x$19 = pb.$minus$greater(swiping().get(pb).$bar(Nil).$colon$plus(task));
  Nil.$colon$colon(x$19)
}.$colon$colon(x$20)
          });
          future.update(future().swap(x, y, nx, ny));
          processor.add(task)
        }
      else
        ()
    } catch {
      case (e @ (_: Exception)) => e.printStackTrace()
    };
    val _$finished = System.nanoTime;
    scala.Predef.println("(ActionPuzzle3,swipe)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def fill(): scala.Unit = {
    val _$started = System.nanoTime;
    val _$result: scala.Unit = {
      val filling = future().createFillingPuzzle(seed, COLUMN);
      if (filling.exists(((x$21) => x$21.isEmpty.unary_$bang)))
        {
          falling.update(falling().append(filling));
          future.update(fixed().append(falling()));
          val indexed = filling.flatten.map(((p) => {
            <synthetic> private[this] val x$22 = filling.indexOfPanelUnhandled(p): @scala.unchecked match {
              case scala.Tuple2((x @ _), (y @ _)) => scala.Tuple2(x, y)
            };
            val x = x$22._1;
            val y = x$22._2;
            scala.Tuple3(p, x, y)
          }));
          val futureIndexed = filling.flatten.map(((p) => {
            <synthetic> private[this] val x$23 = future().indexOfPanelUnhandled(p): @scala.unchecked match {
              case scala.Tuple2((x @ _), (y @ _)) => scala.Tuple2(x, y)
            };
            val x = x$23._1;
            val y = x$23._2;
            scala.Tuple3(p, x, y)
          }));
          indexed.withFilter(((check$ifrefutable$1) => check$ifrefutable$1: @scala.unchecked match {
  case scala.Tuple3((p @ _), (x @ _), (y @ _)) => true
  case _ => false
})).foreach(((x$24) => x$24: @scala.unchecked match {
            case scala.Tuple3((p @ _), (x @ _), (y @ _)) => {
              p.x.update(x);
              p.y.update(COLUMN.$plus(y))
            }
          }));
          futureIndexed.$bar$greater(panelAdd)
        }
      else
        ();
      updateTargetPosition()
    };
    val _$finished = System.nanoTime;
    scala.Predef.println("(ActionPuzzle3,fill)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def cancelSwipingAnimation(panel: AP): scala.Unit = {
    val _$started = System.nanoTime;
    val _$result: scala.Unit = swiping().get(panel).foreach(((tasks) => tasks.foreach(((task) => {
      log("canceled!".$plus(panel));
      swiping().$plus$eq(panel.$minus$greater(swiping().get(panel).map(((x$25) => x$25.filterNot(((x$26) => x$26.$eq$eq(task))))).$bar(Nil)))
    }))));
    val _$finished = System.nanoTime;
    scala.Predef.println("(ActionPuzzle3,cancelSwipingAnimation)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def remove(panels: Seq[AP]): scala.Unit = {
    val _$started = System.nanoTime;
    val _$result: scala.Unit = {
      if (panels.isEmpty.unary_$bang)
        {
          <synthetic> private[this] val x$27 = fixedFuture.remove(panels): @scala.unchecked match {
            case scala.Tuple2((left @ _), (fallen @ _)) => scala.Tuple2(left, fallen)
          };
          val left = x$27._1;
          val fallen = x$27._2;
          fallen.foreach(((x$28) => x$28.foreach(cancelSwipingAnimation)));
          panelRemove(panels);
          fixed.update(left);
          falling.update(fallen.append(falling()));
          future.update(fixed().append(falling()))
        }
      else
        ();
      updateTargetPosition()
    };
    val _$finished = System.nanoTime;
    scala.Predef.println("(ActionPuzzle3,remove)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def updateTargetPosition(): scala.Unit = {
    val _$started = System.nanoTime;
    val _$result: scala.Unit = {
      val indices = futureIndices();
      falling().foreach(((row) => row.foreach(((p) => {
        <synthetic> private[this] val x$29 = indices(p): @scala.unchecked match {
          case scala.Tuple2((tx @ _), (ty @ _)) => scala.Tuple2(tx, ty)
        };
        val tx = x$29._1;
        val ty = x$29._2;
        p.tx.update(tx);
        p.ty.update(ty)
      }))))
    };
    val _$finished = System.nanoTime;
    scala.Predef.println("(ActionPuzzle3,updateTargetPosition)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def initialize(): scala.Unit = {
    val _$started = System.nanoTime;
    val _$result: scala.Unit = fill();
    val _$finished = System.nanoTime;
    scala.Predef.println("(ActionPuzzle3,initialize)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def update(delta: Float): scala.Unit = {
    val _$started = System.nanoTime;
    val _$result: scala.Unit = {
      updateFalling(delta);
      processor.update(delta)
    };
    val _$finished = System.nanoTime;
    scala.Predef.println("(ActionPuzzle3,update)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def newPuzzleBuffer: ArrayBuffer[ArrayBuffer[AP]] = {
    val _$started = System.nanoTime;
    val _$result: ArrayBuffer[ArrayBuffer[AP]] = ArrayBuffer((0.until(ROW).map(((x$30) => ArrayBuffer.empty[AP])): _*));
    val _$finished = System.nanoTime;
    scala.Predef.println("(ActionPuzzle3,newPuzzleBuffer)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  val finishedBuf = ListBuffer.empty[AP];
  val continuedBuf = newPuzzleBuffer;
  val fallingBuffer = ArrayBuffer((0.until(ROW).map(((x$31) => ArrayBuffer.empty[AP])): _*));
  val fixedBuf = newPuzzleBuffer;
  val fixedTemp = mutable.Stack.empty[AP];
  def updateFalling(delta: Float): scala.Unit = {
    val _$started = System.nanoTime;
    val _$result: scala.Unit = {
      {
        val fallingCpy = falling();
        val width = fallingCpy.size;
        var x = 0;
        while$2(){
          if (x.$less(width))
            {
              {
                val applied = fallingCpy(x);
                val height = applied.size;
                var y = 0;
                while$1(){
                  if (y.$less(height))
                    {
                      {
                        val p = applied(y);
                        p.vy().$plus$eq(gravity.$times(delta));
                        if (p.update(delta))
                          finishedBuf.$plus$eq(p)
                        else
                          continuedBuf(x).$plus$eq(p);
                        y.$plus$eq(1)
                      };
                      while$1()
                    }
                  else
                    ()
                };
                x.$plus$eq(1)
              };
              while$2()
            }
          else
            ()
        }
      };
      if (finishedBuf.isEmpty.unary_$bang)
        {
          {
            var x = 0;
            while$4(){
              if (x.$less(ROW))
                {
                  {
                    val row = fallingBuffer(x);
                    row.clear();
                    var y = 0;
                    val conRow = continuedBuf(x);
                    val height = conRow.size;
                    while$3(){
                      if (y.$less(height))
                        {
                          {
                            row.$plus$eq(conRow(y));
                            y.$plus$eq(1)
                          };
                          while$3()
                        }
                      else
                        ()
                    };
                    x.$plus$eq(1)
                  };
                  while$4()
                }
              else
                ()
            };
            falling.update(fallingBuffer)
          };
          {
            var x = 0;
            while$7(){
              if (x.$less(ROW))
                {
                  {
                    val row = fixed()(x);
                    val length = row.size;
                    val buf = fixedBuf(x);
                    fixedTemp.clear();
                    var y = 0;
                    while$5(){
                      if (y.$less(length))
                        {
                          {
                            fixedTemp.push(row(y));
                            y.$plus$eq(1)
                          };
                          while$5()
                        }
                      else
                        ()
                    };
                    buf.clear();
                    while$6(){
                      if (fixedTemp.isEmpty.unary_$bang)
                        {
                          buf.$plus$eq(fixedTemp.pop());
                          while$6()
                        }
                      else
                        ()
                    };
                    x.$plus$eq(1)
                  };
                  while$7()
                }
              else
                ()
            }
          };
          finishedBuf.foreach(((p) => fixedBuf(p.tx()).$plus$eq(p)));
          fixed.update(fixedBuf);
          scanRemoveFill()
        }
      else
        ();
      var i = 0;
      while$8(){
        if (i.$less(ROW))
          {
            {
              continuedBuf(i).clear();
              i.$plus$eq(1)
            };
            while$8()
          }
        else
          ()
      };
      finishedBuf.clear()
    };
    val _$finished = System.nanoTime;
    scala.Predef.println("(ActionPuzzle3,updateFalling)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  class AP extends GMatch3.Panel with Reactor {
    <paramaccessor> val n: Int = _;
    def <init>(n: Int) = {
      super.<init>();
      ()
    };
    val x = Var(0.0);
    val y = Var(0.0);
    val vx = Var(0.0);
    val vy = Var(0.0);
    val tx = Var(0);
    val ty = Var(0);
    lazy val isSwiping = swiping.map(((x$32) => x$32.get(AP.this).map(((x$33) => x$33.isEmpty.unary_$bang)).$bar(false)));
    lazy val isFalling = falling.map(((x$34) => x$34.exists(((x$35) => x$35.contains(AP.this)))));
    def matchTo(panel: Panel): Boolean = panel match {
      case (p @ (_: AP)) => n.$eq$eq(p.n)
      case _ => false
    };
    def update(delta: Float): Boolean = {
      val nx = x().$plus(vx().$times(delta));
      var ny = y().$plus(vy().$times(delta));
      val next = PartialFunction.condOpt(ty().$minus(1))(future()(tx()));
      val finished = next match {
        case Some((p @ _)) if fixed().exists(((x$36) => x$36.contains(p))) => ny.$minus(ty()).$less(0.0)
        case Some((p @ _)) if ny.$minus(p.y()).$less(1.0) => {
          ny = p.y().$plus(1);
          vy.update(p.vy());
          false
        }
        case _ => ny.$minus(ty()).$less(0.0)
      };
      if (finished)
        {
          ny = ty();
          clear()
        }
      else
        ();
      x.update(nx);
      y.update(ny);
      finished
    };
    def clear(): scala.Unit = {
      vx.update(0);
      vy.update(0)
    };
    override def toString: String = n.$plus("")
  }
}
[0m[[0minfo[0m] [0mRunning com.glyph.Main [0m
[0m[[0minfo[0m] [0m{"screenClass":{"class":"com.glyph.scala.game.action_puzzle.screen.ActionScreen"},"assets":[{"_1":{"class":"com.badlogic.gdx.graphics.Texture"},"_2":["data/dummy.png","data/particle.png","data/sword.png"]},{"_1":{"class":"com.badlogic.gdx.scenes.scene2d.ui.Skin"},"_2":["skin/default.json"]}]}[0m
[0m[[0minfo[0m] [0mspecified resource directory:../common/src/main/resources=>/Users/glyph/Documents/sbt/scalagamerepo/desktop/../common/src/main/resources[0m
[0m[[0minfo[0m] [0mstart Memory Analyzer[0m
[0m[[0minfo[0m] [0mGdxFilePath:/Users/glyph/Documents/sbt/scalagamerepo/desktop/../common/src/main/resources/json/gameConfig.json[0m
[0m[[0minfo[0m] [0mload RFile:[0m
[0m[[0minfo[0m] [0mgameConfig.json[0m
[0m[[0minfo[0m] [0mGdxFilePath:/Users/glyph/Documents/sbt/scalagamerepo/desktop/../common/src/main/resources/constants/string.js[0m
[0m[[0minfo[0m] [0mload RFile:[0m
[0m[[0minfo[0m] [0mstring.js[0m
[0m[[0minfo[0m] [0mCreated LoadingScreen[0m
[0m[[0minfo[0m] [0msetScreen:com.glyph.scala.lib.libgdx.screen.LoadingScreen@6415f3ad[0m
[0m[[0minfo[0m] [0mshow StagedScreen[0m
[0m[[0minfo[0m] [0mloading...[0m
[0m[[0minfo[0m] [0mloading...[0m
[0m[[0minfo[0m] [0mloading...[0m
[0m[[0minfo[0m] [0mloading...[0m
[0m[[0minfo[0m] [0mloading...[0m
[0m[[0minfo[0m] [0mloading...[0m
[0m[[0minfo[0m] [0mloading...[0m
[0m[[0minfo[0m] [0mloading...[0m
[0m[[0minfo[0m] [0mloading...[0m
[0m[[0minfo[0m] [0mloading...[0m
[0m[[0minfo[0m] [0mloading...[0m
[0m[[0minfo[0m] [0mloading...[0m
[0m[[0minfo[0m] [0mloading...[0m
[0m[[0minfo[0m] [0mloading...[0m
[0m[[0minfo[0m] [0mloading...[0m
[0m[[0minfo[0m] [0mloading...[0m
[0m[[0minfo[0m] [0mloading...[0m
[0m[[0minfo[0m] [0mloading...[0m
[0m[[0minfo[0m] [0mloading...[0m
[0m[[0minfo[0m] [0mloading...[0m
[0m[[0minfo[0m] [0mloading...[0m
[0m[[0minfo[0m] [0mloading...[0m
[0m[[0minfo[0m] [0mloading...[0m
[0m[[0minfo[0m] [0mloading...[0m
[0m[[0minfo[0m] [0mloading...[0m
[0m[[0minfo[0m] [0mloading...[0m
[0m[[0minfo[0m] [0mloading...[0m
[0m[[0minfo[0m] [0mGdxFilePath:/Users/glyph/Documents/sbt/scalagamerepo/desktop/../common/src/main/resources/json/gameConfig.json[0m
[0m[[0minfo[0m] [0mload RFile:[0m
[0m[[0minfo[0m] [0mgameConfig.json[0m
[0m[[0minfo[0m] [0mGdxFilePath:/Users/glyph/Documents/sbt/scalagamerepo/desktop/../common/src/main/resources/constants/string.js[0m
[0m[[0minfo[0m] [0mload RFile:[0m
[0m[[0minfo[0m] [0mstring.js[0m
[0m[[0minfo[0m] [0mGdxFilePath:/Users/glyph/Documents/sbt/scalagamerepo/desktop/../common/src/main/resources/constants/colors.js[0m
[0m[[0minfo[0m] [0mload RFile:[0m
[0m[[0minfo[0m] [0mcolors.js[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,initializer)12511000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,initializer)1020000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,initializer)248000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,newPuzzleBuffer)1428000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,newPuzzleBuffer)176000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)964000[0m
[0m[[0minfo[0m] [0mGdxFilePath:/Users/glyph/Documents/sbt/scalagamerepo/desktop/../common/src/main/resources/constants/colors.js[0m
[0m[[0minfo[0m] [0mload RFile:[0m
[0m[[0minfo[0m] [0mcolors.js[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)5161000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)224545000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,initialize)224630000[0m
[0m[[0minfo[0m] [0msetScreen:com.glyph.scala.game.action_puzzle.screen.ActionScreen@7d0938f7[0m
[0m[[0minfo[0m] [0mshow StagedScreen[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)14390000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)18942000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11334000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)11505000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11564000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)11702000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10856000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)11555000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10414000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)10559000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11043000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)11195000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11774000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)11913000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10860000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)10999000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10694000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)10854000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11142000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)11310000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11475000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)11615000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)19091000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)19245000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)20277000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)20416000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)8354000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)8492000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)7789000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)8503000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)9000000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)9142000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)13544000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)13691000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)9075000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)9217000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)16198000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)16339000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)7025000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)7165000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)7899000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)8044000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)6705000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)6842000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)13995000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)14135000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)5531000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)5671000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)5708000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)5844000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)5357000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)5486000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)2972000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)10010000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)1880000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)1968000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)1962000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)2382000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)14631000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)34974000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)35058000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)485000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)2141000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)458000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)1668000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)49007000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)4872000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)22736000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)74099000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)94817000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)94902000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)358000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1961000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)382000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)1746000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)22208000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)4552000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)38550000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)62935000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)79704000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)79798000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)338000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)2177000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)920000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)990000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)893000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)1244000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)4628000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)13564000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)13647000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)952000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)2931000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)1252000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)1336000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)1960000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)2333000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)6829000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)20319000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)20399000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)351000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)16292000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)1019000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)1105000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)657000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)1016000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)18646000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)64957000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)65041000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)344000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1739000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)633000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)698000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)620000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)1650000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)5221000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)12001000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)12085000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)354000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)2410000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)797000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)873000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)805000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)1400000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)4907000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10991000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)11076000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)397000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)2578000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)598000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)676000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)562000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)912000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)4405000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11951000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)12040000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)394000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)3506000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)617000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)497000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)11454000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)625000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)14065000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)29262000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)34970000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)35052000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)377000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1768000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)1128000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)1214000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)668000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)1034000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)4230000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)13693000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)14785000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)385000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1876000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)893000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)986000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)1229000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)1577000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)4648000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11207000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)11308000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)393000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1794000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)2084000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)2195000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)1121000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)1534000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)5732000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)20989000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)21075000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)400000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1788000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)437000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)516000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)406000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)801000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)3311000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)8179000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)8262000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)566000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)2167000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)405000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)475000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)2627000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)3017000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)5887000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11156000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)11243000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1356000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1489000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)19379000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)19943000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1301000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1434000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1860000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1994000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1172000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1361000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1164000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1287000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1201000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1326000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1204000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1404000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)2970000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)3101000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1263000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1391000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1166000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1371000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1203000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1326000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1332000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1462000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)437000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1769000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)377000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)435000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)328000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)630000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)3015000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)8176000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)8244000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)428000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1744000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)435000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)1573000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)5000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)397000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)11477000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)1000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)414000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)10926000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)24324000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)28958000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)29031000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1527000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1648000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1413000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1543000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1651000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1774000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1944000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)2078000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1506000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1633000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1482000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1613000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1345000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1480000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1588000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1718000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1401000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1529000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1272000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1404000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1397000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1525000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1268000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1390000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1345000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1465000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1263000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1383000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1397000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1523000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1404000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1530000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)398000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1815000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)653000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)722000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)720000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)1053000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)3777000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)8035000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)8117000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)429000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1669000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)1172000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)1259000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)356000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)829000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)3932000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)12487000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)12561000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)435000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1803000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)431000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)6000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)450000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)14564000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)407000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)13491000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)30049000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)34328000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)34402000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)2345000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)2476000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1502000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1630000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)345000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1576000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)368000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)5000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)449000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)11256000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)457000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)10530000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)23546000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)29041000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)29112000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)315000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1550000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)553000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)622000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)635000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)1220000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)3578000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)8232000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)8303000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)316000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)14101000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)432000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)488000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)394000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)710000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)15517000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)19794000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)19870000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)327000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)3736000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)444000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)502000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)425000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)854000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)5305000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10475000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)10549000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)7737000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)8895000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)447000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)508000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)385000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)712000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)10292000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)14552000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)14627000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)303000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1551000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)369000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)955000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)434000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)809000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)3533000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)15752000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)15828000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)311000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1483000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)365000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)423000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)351000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)671000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)2756000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)6469000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)6543000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1207000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1334000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1353000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1482000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1445000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1575000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1168000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1307000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1277000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1419000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1233000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1358000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1245000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1366000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1136000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1260000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1166000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1291000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)288000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1563000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)526000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)598000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)336000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)661000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)3015000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)6483000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)6558000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)283000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)2397000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)322000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)385000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)290000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)614000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)3607000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)7309000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)7383000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)291000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)2059000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)295000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)355000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)268000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)623000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)3243000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)6863000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)6942000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)304000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1588000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)267000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)328000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)258000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)575000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)2675000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)6333000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)6405000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)883000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)2003000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)245000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)304000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)219000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)537000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)3018000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)6303000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)6376000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)314000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1444000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)195000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)254000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)174000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)492000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)2470000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)6183000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)6279000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)321000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1529000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)213000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)274000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)158000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)475000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)2459000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)6249000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)6357000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)416000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1586000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)155000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)211000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)131000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)425000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)2388000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)5594000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)5662000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)343000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)2032000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)151000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)209000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)125000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)442000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)2882000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)6003000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)6086000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)342000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)6862000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)136000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)192000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)104000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)426000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)7706000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11119000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)11187000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)357000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)2863000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)345000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)5000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)190000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)16711000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)208000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)14561000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)34354000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)37593000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)48221000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)393000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)4569000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)213000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)277000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)2121000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)2473000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)7547000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)12450000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)12521000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)732000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)2072000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)681000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)802000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)677000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)828000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)903000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1038000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)806000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1024000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)633000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)742000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)607000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)707000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)604000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)705000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)621000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)719000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)615000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)715000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)680000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)784000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)594000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)694000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)698000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)801000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)703000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)879000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)526000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)628000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1396000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1509000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)509000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)610000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)508000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)607000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)505000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)604000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)507000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)640000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)507000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)609000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)315000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)2429000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)183000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)239000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)152000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)463000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)3336000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)6198000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)6259000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)334000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1270000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)151000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)208000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)134000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)448000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)2102000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4740000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)4803000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)342000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1426000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)130000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)188000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)110000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)438000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)2232000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)5157000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)5220000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)379000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1455000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)110000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)168000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)87000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)407000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)2221000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4469000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)4533000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)533000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1527000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)81000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)139000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)67000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)388000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)2293000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4173000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)4236000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)363000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1358000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)52000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)110000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)1000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)39000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)353000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)1991000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)6958000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)7022000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)367000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1459000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)410000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)14000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)8534000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)42000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)6877000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)17041000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)18678000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)18742000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)120000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)221000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)121000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)222000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)125000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)230000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)125000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)241000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)136000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)337000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)141000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)236000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)120000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)217000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)120000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)217000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)119000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)219000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)119000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)222000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)126000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)228000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)120000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)220000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)120000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)221000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)122000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)224000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)118000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)220000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)120000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)238000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)127000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)229000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)127000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)229000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)127000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)228000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)125000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)221000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)119000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)217000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)129000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)228000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)129000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)235000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)130000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)233000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)120000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)222000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)124000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)228000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)119000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)550000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)131000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)230000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)118000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)217000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)128000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)230000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)173000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)275000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)130000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)234000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)112000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)246000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)134000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)233000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)111000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)212000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)111000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)213000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)119000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)223000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)111000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)212000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)111000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)212000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)112000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)212000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)113000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)214000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)111000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)211000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)112000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)212000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)352000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1903000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)49000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)105000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)1000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)30000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)349000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)2595000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4034000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)4114000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)353000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1421000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)35000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)92000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)21000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)338000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)2032000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)3429000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)3491000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)375000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1412000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)14000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)69000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)1000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)68000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)517000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)2177000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)3550000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)3613000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)106000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)107000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)105000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)104000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)105000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)106000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)107000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)118000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)105000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)103000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)105000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)105000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)102000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,swipe)140080000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)5000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)4071000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,swipe)8081000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)696000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)259000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)7000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)287000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)257000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)268000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)263000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)258000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)258000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)285000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)300000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)387000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1503000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)12000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)70000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)13000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)5632000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)7385000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)18492000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)272000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)204000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)207000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)207000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)208000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)203000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)222000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)355000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1508000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)369000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)5000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)159000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)8121000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)167000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)7145000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)16948000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)22136000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)561000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)674000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)574000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)676000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)591000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)694000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)579000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)680000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)591000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)696000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)563000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)661000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)924000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1033000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)579000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)679000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)737000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)842000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)608000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)723000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)567000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)668000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)585000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)687000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)566000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)668000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)572000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)670000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)575000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)673000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)579000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)680000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)564000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)667000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)564000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)666000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)602000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)702000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)563000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)666000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)572000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)673000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)568000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)670000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)665000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)818000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)570000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)675000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)579000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)680000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)315000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1199000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)171000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)229000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)152000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)544000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)2148000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4634000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)4696000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)322000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1288000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)145000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)203000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)1000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)127000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)435000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)2105000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4660000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)4723000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)338000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1284000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)124000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)182000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)1000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)111000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)426000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)2060000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)5152000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)5214000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)341000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1332000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)99000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)158000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)83000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)414000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)2087000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4540000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)4603000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)349000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1398000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)517000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)5000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)102000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)9254000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)1000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)124000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)8121000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)18953000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)21333000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)21397000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)314000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)2224000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)125000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)184000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)99000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)417000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)3032000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)5320000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)5382000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)324000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1424000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)146000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)210000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)83000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)408000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)2225000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4658000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)4720000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)270000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)371000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)271000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)373000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)273000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)376000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)271000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)374000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)270000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)372000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)274000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)375000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)271000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)373000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)273000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)372000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)271000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)376000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)271000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)375000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)271000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)375000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)272000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)376000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)271000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)374000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)283000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)436000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)306000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)409000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)276000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)382000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)278000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)378000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)293000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)390000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)295000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)395000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)298000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)403000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)290000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)394000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)286000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)393000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)295000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)398000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)340000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1366000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)78000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)207000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)1000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)62000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)366000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)2118000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4398000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)4459000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)348000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1492000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)320000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)6000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)137000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)10488000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)1000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)96000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)8400000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)20554000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)22685000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)22749000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)337000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)438000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)342000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)442000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)354000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)455000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)382000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)485000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)361000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)464000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)342000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)446000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)360000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)459000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)356000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)464000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)353000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)453000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)358000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)569000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)343000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)442000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)410000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)511000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)341000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)440000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)373000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)474000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)343000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)442000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)400000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)498000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)404000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)502000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)341000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)440000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)480000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)588000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)520000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)621000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)377000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)482000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)348000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)457000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)339000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)448000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)343000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)444000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)341000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)441000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)326000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1175000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)71000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)128000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)1000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)54000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)363000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)1836000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4676000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)4744000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)340000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1170000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)334000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)12000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)11753000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)1000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)40000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)6413000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)19506000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)21735000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)21814000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)110000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)211000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)111000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)212000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)111000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)212000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,swipe)5989000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)104000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)279000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)110000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)286000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)110000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)305000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)194000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)378000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)110000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)289000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)112000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)292000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)120000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)293000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)111000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)288000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)113000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)292000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)112000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)293000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)112000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)288000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)114000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)294000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)113000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)291000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)121000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)297000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)112000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)293000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)113000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)293000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)112000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)292000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)117000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)296000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)142000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)326000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)127000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)328000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1144000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)332000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)5000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)163000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)6906000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)167000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)7172000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)15398000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)20640000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)511000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)623000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)725000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)854000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)548000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)735000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)553000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)664000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)488000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1220000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)488000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)591000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)490000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)593000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)731000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)922000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)488000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)593000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)495000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)598000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)552000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)653000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)490000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)590000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)726000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)830000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)570000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)670000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)501000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)602000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)491000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)593000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)489000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)591000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)488000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)590000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)486000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)588000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)490000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)599000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)294000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1025000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)157000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)213000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)1000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)137000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)447000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)1852000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)3838000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)3898000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)310000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)9976000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)166000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)225000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)133000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)453000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)10892000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)12988000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)13051000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)298000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)965000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)144000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)201000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)123000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)432000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)1764000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)3803000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)3865000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)455000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)565000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)504000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)603000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)303000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1003000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)123000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)178000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)110000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)717000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)2066000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)3955000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)4018000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)359000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1055000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)107000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)163000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)89000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)399000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)1919000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)3748000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)3810000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)316000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1017000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)86000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)144000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)1000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)71000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)378000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)1726000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)3463000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)3523000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)438000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1164000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)68000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)122000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)56000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)350000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)1801000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)3483000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)3543000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)337000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1081000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)45000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)97000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)1000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)31000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)323000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)1796000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)6984000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)7045000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)353000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1085000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)13000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)67000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)1000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)9000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)650000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)1982000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)3317000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)3378000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)108000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)107000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)112000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)105000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)105000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)107000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)103000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)110000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)240000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)107000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)107000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)104000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)103000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)119000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)105000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)217000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)5000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)112000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)5000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)105000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)5000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)105000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)122000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)5000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)106000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)107000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)106000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)5000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)110000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)123000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)113000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)5000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)111000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)5000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)66000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)161000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)116000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)107000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)104000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)105000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)104000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)105000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)105000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)105000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)6000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)112000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)5000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)109000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)73000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)109000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)107000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)108000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)108000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)107000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)106000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)106000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)103000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)105000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)5000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)322000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)106000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)103000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)179000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)105000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)105000[0m
[0m[[0minfo[0m] [0mtotal heap: 3438kb[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)106000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)5000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)111000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)5000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)111000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)105000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)104000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)104000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)106000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)104000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)104000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)105000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)105000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)70000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)180000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)106000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)106000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)106000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)104000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)133000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)113000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)105000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)105000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)106000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)106000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)143000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)107000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)105000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)107000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)105000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)106000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)108000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)108000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)108000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)106000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)196000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)106000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)106000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)107000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)105000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)104000[0m
[0m[[0minfo[0m] [0mpause![0m
java.lang.RuntimeException: Nonzero exit code returned from runner: 255
	at scala.sys.package$.error(package.scala:27)
[0m[[31mtrace[0m] [0mStack trace suppressed: run [34mlast desktop/compile:run[0m for the full output.[0m
[0m[[31merror[0m] [0m(desktop/compile:[31mrun[0m) Nonzero exit code returned from runner: 255[0m
[0m[[31merror[0m] [0mTotal time: 1494 s, completed 2013/11/15 16:59:07[0m
