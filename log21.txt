[0m[[0minfo[0m] [0mLoading project definition from /Users/glyph/Documents/sbt/scalagamerepo/project[0m
[0m[[0minfo[0m] [0mSet current project to android (in build file:/Users/glyph/Documents/sbt/scalagamerepo/)[0m
[0m[[0minfo[0m] [0mCompiling 2 Scala sources to /Users/glyph/Documents/sbt/scalagamerepo/common/target/scala-2.10/classes...[0m
before
def initializer: Var[Puzzle[AP]] = Var(GMatch3.initialize(COLUMN)({
  final class $anon extends IndexedSeqGen {
    def <init>() = {
      super.<init>();
      ()
    };
    def convert[T >: _root_.scala.Nothing <: _root_.scala.Any](seq: Seq[T]): IndexedSeq[T] = ArrayBuffer.apply((seq: _*))
  };
  new $anon()
}))
after
def initializer: Var[Puzzle[AP]] = {
  val _$started = System.nanoTime;
  val _$result: Var[Puzzle[AP]] = Var(GMatch3.initialize(COLUMN)({
    final class $anon extends IndexedSeqGen {
      def <init>() = {
        super.<init>();
        ()
      };
      def convert[T >: _root_.scala.Nothing <: _root_.scala.Any](seq: Seq[T]): IndexedSeq[T] = ArrayBuffer.apply((seq: _*))
    };
    new $anon()
  }));
  val _$finished = System.nanoTime;
  scala.Predef.println("(ActionPuzzle3,initializer)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def seed: _root_.scala.Function0[AP] = (() => MathUtils.random(0, 3).$bar$greater(((x$1) => new AP(x$1))))
after
def seed: _root_.scala.Function0[AP] = {
  val _$started = System.nanoTime;
  val _$result: _root_.scala.Function0[AP] = (() => MathUtils.random(0, 3).$bar$greater(((x$1) => new AP(x$1))));
  val _$finished = System.nanoTime;
  scala.Predef.println("(ActionPuzzle3,seed)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def scanAll = scanAllWithException(fixedFuture)(3)(((p) => {
  val opt = swiping().get(p);
  if (opt.isDefined)
    opt.get.isEmpty.unary_$bang
  else
    false
}))
after
def scanAll = {
  val _$started = System.nanoTime;
  val _$result = scanAllWithException(fixedFuture)(3)(((p) => {
    val opt = swiping().get(p);
    if (opt.isDefined)
      opt.get.isEmpty.unary_$bang
    else
      false
  }));
  val _$finished = System.nanoTime;
  scala.Predef.println("(ActionPuzzle3,scanAll)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def scanAllDistinct = scanAll.flatten.map(((x$2) => x$2._1)).distinct
after
def scanAllDistinct = {
  val _$started = System.nanoTime;
  val _$result = scanAll.flatten.map(((x$2) => x$2._1)).distinct;
  val _$finished = System.nanoTime;
  scala.Predef.println("(ActionPuzzle3,scanAllDistinct)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def scanAllDistinct2 = GMatch3.scanAll(fixedFuture)(ROW)(COLUMN)(((a, b) => {
  val map = swiping();
  if (a.$bang$eq(null).$amp$amp(b.$bang$eq(null)).$amp$amp(map(a).isEmpty).$amp$amp(map(b).isEmpty))
    a.n.$eq$eq(b.n)
  else
    false
})).filter(((x$3) => x$3.size.$greater(2))).flatten.distinct
after
def scanAllDistinct2 = {
  val _$started = System.nanoTime;
  val _$result = GMatch3.scanAll(fixedFuture)(ROW)(COLUMN)(((a, b) => {
  val map = swiping();
  if (a.$bang$eq(null).$amp$amp(b.$bang$eq(null)).$amp$amp(map(a).isEmpty).$amp$amp(map(b).isEmpty))
    a.n.$eq$eq(b.n)
  else
    false
})).filter(((x$3) => x$3.size.$greater(2))).flatten.distinct;
  val _$finished = System.nanoTime;
  scala.Predef.println("(ActionPuzzle3,scanAllDistinct2)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def fixedFuture = fixed().zipWithIndex.map(<empty> match {
  case scala.Tuple2((row @ _), (x @ _)) => row.zipWithIndex.map(<empty> match {
    case scala.Tuple2((p @ _), (y @ _)) => future()(x)(y)
  })
})
after
def fixedFuture = {
  val _$started = System.nanoTime;
  val _$result = fixed().zipWithIndex.map(<empty> match {
    case scala.Tuple2((row @ _), (x @ _)) => row.zipWithIndex.map(<empty> match {
      case scala.Tuple2((p @ _), (y @ _)) => future()(x)(y)
    })
  });
  val _$finished = System.nanoTime;
  scala.Predef.println("(ActionPuzzle3,fixedFuture)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def scanRemoveFill(): scala.Unit = {
  remove(scanAllDistinct2);
  fill()
}
after
def scanRemoveFill(): scala.Unit = {
  val _$started = System.nanoTime;
  val _$result: scala.Unit = {
    remove(scanAllDistinct2);
    fill()
  };
  val _$finished = System.nanoTime;
  scala.Predef.println("(ActionPuzzle3,scanRemoveFill)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def swipe(x: Int, y: Int, nx: Int, ny: Int) = try {
  def verified = y.$less(fixed()(x).size).$amp$amp(ny.$less(fixed()(nx).size));
  if (verified)
    {
      val pa = future()(x)(y);
      val pb = future()(nx)(ny);
      import Animator._;
      import Interpolation._;
      var pTask: Task = null;
      val task = {
  <synthetic> val x$17 = {
  <synthetic> val x$7 = scala.Tuple2(pa.x, nx);
  {
  <synthetic> val x$6 = scala.Tuple2(pa.y, ny);
  {
  <synthetic> val x$5 = scala.Tuple2(pb.x, x);
  {
  <synthetic> val x$4 = scala.Tuple2(pb.y, y);
  Nil.$colon$colon(x$4)
}.$colon$colon(x$5)
}.$colon$colon(x$6)
}.$colon$colon(x$7)
}.map(<empty> match {
  case scala.Tuple2((v @ _), (tgt @ _)) => interpolate(v).to(tgt).in(0.3).using(exp10Out)
}).$bar$greater(((x$8) => WaitAll((x$8: _*))));
  {
  <synthetic> val x$16 = Do({
    swiping().$plus$plus$eq({
      <synthetic> val x$14 = pa.$minus$greater(swiping().get(pa).map(((x$9) => x$9.filterNot(((x$10) => x$10.$eq$eq(pTask))))).$bar(Nil));
      {
  <synthetic> val x$13 = pb.$minus$greater(swiping().get(pb).map(((x$11) => x$11.filterNot(((x$12) => x$12.$eq$eq(pTask))))).$bar(Nil));
  Nil.$colon$colon(x$13)
}.$colon$colon(x$14)
    });
    swiping.update(swiping().filterNot(((x$15) => x$15._2.isEmpty)));
    if (verified)
      {
        fixed.update(fixed().swap(x, y, nx, ny));
        scanRemoveFill()
      }
    else
      ()
  });
  Nil.$colon$colon(x$16)
}.$colon$colon(x$17)
}.$bar$greater(((x$18) => Sequence((x$18: _*))));
      pTask = task;
      swiping().$plus$plus$eq({
        <synthetic> val x$20 = pa.$minus$greater(swiping().get(pa).$bar(Nil).$colon$plus(task));
        {
  <synthetic> val x$19 = pb.$minus$greater(swiping().get(pb).$bar(Nil).$colon$plus(task));
  Nil.$colon$colon(x$19)
}.$colon$colon(x$20)
      });
      future.update(future().swap(x, y, nx, ny));
      processor.add(task)
    }
  else
    ()
} catch {
  case (e @ (_: Exception)) => e.printStackTrace()
}
after
def swipe(x: Int, y: Int, nx: Int, ny: Int) = {
  val _$started = System.nanoTime;
  val _$result = try {
    def verified = y.$less(fixed()(x).size).$amp$amp(ny.$less(fixed()(nx).size));
    if (verified)
      {
        val pa = future()(x)(y);
        val pb = future()(nx)(ny);
        import Animator._;
        import Interpolation._;
        var pTask: Task = null;
        val task = {
  <synthetic> val x$17 = {
  <synthetic> val x$7 = scala.Tuple2(pa.x, nx);
  {
  <synthetic> val x$6 = scala.Tuple2(pa.y, ny);
  {
  <synthetic> val x$5 = scala.Tuple2(pb.x, x);
  {
  <synthetic> val x$4 = scala.Tuple2(pb.y, y);
  Nil.$colon$colon(x$4)
}.$colon$colon(x$5)
}.$colon$colon(x$6)
}.$colon$colon(x$7)
}.map(<empty> match {
  case scala.Tuple2((v @ _), (tgt @ _)) => interpolate(v).to(tgt).in(0.3).using(exp10Out)
}).$bar$greater(((x$8) => WaitAll((x$8: _*))));
  {
  <synthetic> val x$16 = Do({
    swiping().$plus$plus$eq({
      <synthetic> val x$14 = pa.$minus$greater(swiping().get(pa).map(((x$9) => x$9.filterNot(((x$10) => x$10.$eq$eq(pTask))))).$bar(Nil));
      {
  <synthetic> val x$13 = pb.$minus$greater(swiping().get(pb).map(((x$11) => x$11.filterNot(((x$12) => x$12.$eq$eq(pTask))))).$bar(Nil));
  Nil.$colon$colon(x$13)
}.$colon$colon(x$14)
    });
    swiping.update(swiping().filterNot(((x$15) => x$15._2.isEmpty)));
    if (verified)
      {
        fixed.update(fixed().swap(x, y, nx, ny));
        scanRemoveFill()
      }
    else
      ()
  });
  Nil.$colon$colon(x$16)
}.$colon$colon(x$17)
}.$bar$greater(((x$18) => Sequence((x$18: _*))));
        pTask = task;
        swiping().$plus$plus$eq({
          <synthetic> val x$20 = pa.$minus$greater(swiping().get(pa).$bar(Nil).$colon$plus(task));
          {
  <synthetic> val x$19 = pb.$minus$greater(swiping().get(pb).$bar(Nil).$colon$plus(task));
  Nil.$colon$colon(x$19)
}.$colon$colon(x$20)
        });
        future.update(future().swap(x, y, nx, ny));
        processor.add(task)
      }
    else
      ()
  } catch {
    case (e @ (_: Exception)) => e.printStackTrace()
  };
  val _$finished = System.nanoTime;
  scala.Predef.println("(ActionPuzzle3,swipe)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def fill(): scala.Unit = {
  val filling = future().createFillingPuzzle(seed, COLUMN);
  if (filling.exists(((x$21) => x$21.isEmpty.unary_$bang)))
    {
      falling.update(falling().append(filling));
      future.update(fixed().append(falling()));
      val fillingMap = filling.toIndexMap;
      val indexed = filling.flatten.map(((p) => {
        <synthetic> private[this] val x$22 = fillingMap(p): @scala.unchecked match {
          case scala.Tuple2((x @ _), (y @ _)) => scala.Tuple2(x, y)
        };
        val x = x$22._1;
        val y = x$22._2;
        scala.Tuple3(p, x, y)
      }));
      val futureMap = futureIndices();
      val futureIndexed = filling.flatten.map(((p) => {
        <synthetic> private[this] val x$23 = futureMap(p): @scala.unchecked match {
          case scala.Tuple2((x @ _), (y @ _)) => scala.Tuple2(x, y)
        };
        val x = x$23._1;
        val y = x$23._2;
        scala.Tuple3(p, x, y)
      }));
      indexed.withFilter(((check$ifrefutable$1) => check$ifrefutable$1: @scala.unchecked match {
  case scala.Tuple3((p @ _), (x @ _), (y @ _)) => true
  case _ => false
})).foreach(((x$24) => x$24: @scala.unchecked match {
        case scala.Tuple3((p @ _), (x @ _), (y @ _)) => {
          p.x.update(x);
          p.y.update(COLUMN.$plus(y))
        }
      }));
      futureIndexed.$bar$greater(panelAdd)
    }
  else
    ();
  updateTargetPosition()
}
after
def fill(): scala.Unit = {
  val _$started = System.nanoTime;
  val _$result: scala.Unit = {
    val filling = future().createFillingPuzzle(seed, COLUMN);
    if (filling.exists(((x$21) => x$21.isEmpty.unary_$bang)))
      {
        falling.update(falling().append(filling));
        future.update(fixed().append(falling()));
        val fillingMap = filling.toIndexMap;
        val indexed = filling.flatten.map(((p) => {
          <synthetic> private[this] val x$22 = fillingMap(p): @scala.unchecked match {
            case scala.Tuple2((x @ _), (y @ _)) => scala.Tuple2(x, y)
          };
          val x = x$22._1;
          val y = x$22._2;
          scala.Tuple3(p, x, y)
        }));
        val futureMap = futureIndices();
        val futureIndexed = filling.flatten.map(((p) => {
          <synthetic> private[this] val x$23 = futureMap(p): @scala.unchecked match {
            case scala.Tuple2((x @ _), (y @ _)) => scala.Tuple2(x, y)
          };
          val x = x$23._1;
          val y = x$23._2;
          scala.Tuple3(p, x, y)
        }));
        indexed.withFilter(((check$ifrefutable$1) => check$ifrefutable$1: @scala.unchecked match {
  case scala.Tuple3((p @ _), (x @ _), (y @ _)) => true
  case _ => false
})).foreach(((x$24) => x$24: @scala.unchecked match {
          case scala.Tuple3((p @ _), (x @ _), (y @ _)) => {
            p.x.update(x);
            p.y.update(COLUMN.$plus(y))
          }
        }));
        futureIndexed.$bar$greater(panelAdd)
      }
    else
      ();
    updateTargetPosition()
  };
  val _$finished = System.nanoTime;
  scala.Predef.println("(ActionPuzzle3,fill)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def cancelSwipingAnimation(panel: AP): scala.Unit = swiping().get(panel).foreach(((tasks) => tasks.foreach(((task) => {
  log("canceled!".$plus(panel));
  swiping().$plus$eq(panel.$minus$greater(swiping().get(panel).map(((x$25) => x$25.filterNot(((x$26) => x$26.$eq$eq(task))))).$bar(Nil)))
}))))
after
def cancelSwipingAnimation(panel: AP): scala.Unit = {
  val _$started = System.nanoTime;
  val _$result: scala.Unit = swiping().get(panel).foreach(((tasks) => tasks.foreach(((task) => {
    log("canceled!".$plus(panel));
    swiping().$plus$eq(panel.$minus$greater(swiping().get(panel).map(((x$25) => x$25.filterNot(((x$26) => x$26.$eq$eq(task))))).$bar(Nil)))
  }))));
  val _$finished = System.nanoTime;
  scala.Predef.println("(ActionPuzzle3,cancelSwipingAnimation)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def remove(panels: Seq[AP]): scala.Unit = {
  if (panels.isEmpty.unary_$bang)
    {
      <synthetic> private[this] val x$27 = fixedFuture.remove(panels): @scala.unchecked match {
        case scala.Tuple2((left @ _), (fallen @ _)) => scala.Tuple2(left, fallen)
      };
      val left = x$27._1;
      val fallen = x$27._2;
      fallen.foreach(((x$28) => x$28.foreach(cancelSwipingAnimation)));
      panelRemove(panels);
      fixed.update(left);
      falling.update(fallen.append(falling()));
      future.update(fixed().append(falling()))
    }
  else
    ();
  updateTargetPosition()
}
after
def remove(panels: Seq[AP]): scala.Unit = {
  val _$started = System.nanoTime;
  val _$result: scala.Unit = {
    if (panels.isEmpty.unary_$bang)
      {
        <synthetic> private[this] val x$27 = fixedFuture.remove(panels): @scala.unchecked match {
          case scala.Tuple2((left @ _), (fallen @ _)) => scala.Tuple2(left, fallen)
        };
        val left = x$27._1;
        val fallen = x$27._2;
        fallen.foreach(((x$28) => x$28.foreach(cancelSwipingAnimation)));
        panelRemove(panels);
        fixed.update(left);
        falling.update(fallen.append(falling()));
        future.update(fixed().append(falling()))
      }
    else
      ();
    updateTargetPosition()
  };
  val _$finished = System.nanoTime;
  scala.Predef.println("(ActionPuzzle3,remove)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def updateTargetPosition(): scala.Unit = {
  val indices = futureIndices();
  falling().foreach(((row) => row.foreach(((p) => {
    <synthetic> private[this] val x$29 = indices(p): @scala.unchecked match {
      case scala.Tuple2((tx @ _), (ty @ _)) => scala.Tuple2(tx, ty)
    };
    val tx = x$29._1;
    val ty = x$29._2;
    p.tx.update(tx);
    p.ty.update(ty)
  }))))
}
after
def updateTargetPosition(): scala.Unit = {
  val _$started = System.nanoTime;
  val _$result: scala.Unit = {
    val indices = futureIndices();
    falling().foreach(((row) => row.foreach(((p) => {
      <synthetic> private[this] val x$29 = indices(p): @scala.unchecked match {
        case scala.Tuple2((tx @ _), (ty @ _)) => scala.Tuple2(tx, ty)
      };
      val tx = x$29._1;
      val ty = x$29._2;
      p.tx.update(tx);
      p.ty.update(ty)
    }))))
  };
  val _$finished = System.nanoTime;
  scala.Predef.println("(ActionPuzzle3,updateTargetPosition)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def initialize(): scala.Unit = fill()
after
def initialize(): scala.Unit = {
  val _$started = System.nanoTime;
  val _$result: scala.Unit = fill();
  val _$finished = System.nanoTime;
  scala.Predef.println("(ActionPuzzle3,initialize)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def update(delta: Float): scala.Unit = {
  updateFalling(delta);
  processor.update(delta)
}
after
def update(delta: Float): scala.Unit = {
  val _$started = System.nanoTime;
  val _$result: scala.Unit = {
    updateFalling(delta);
    processor.update(delta)
  };
  val _$finished = System.nanoTime;
  scala.Predef.println("(ActionPuzzle3,update)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def newPuzzleBuffer: ArrayBuffer[ArrayBuffer[AP]] = ArrayBuffer((0.until(ROW).map(((x$30) => ArrayBuffer.empty[AP])): _*))
after
def newPuzzleBuffer: ArrayBuffer[ArrayBuffer[AP]] = {
  val _$started = System.nanoTime;
  val _$result: ArrayBuffer[ArrayBuffer[AP]] = ArrayBuffer((0.until(ROW).map(((x$30) => ArrayBuffer.empty[AP])): _*));
  val _$finished = System.nanoTime;
  scala.Predef.println("(ActionPuzzle3,newPuzzleBuffer)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def updateFalling(delta: Float): scala.Unit = {
  {
    val fallingCpy = falling();
    val width = fallingCpy.size;
    var x = 0;
    while$2(){
      if (x.$less(width))
        {
          {
            val applied = fallingCpy(x);
            val height = applied.size;
            var y = 0;
            while$1(){
              if (y.$less(height))
                {
                  {
                    val p = applied(y);
                    p.vy().$plus$eq(gravity.$times(delta));
                    if (p.update(delta))
                      finishedBuf.$plus$eq(p)
                    else
                      continuedBuf(x).$plus$eq(p);
                    y.$plus$eq(1)
                  };
                  while$1()
                }
              else
                ()
            };
            x.$plus$eq(1)
          };
          while$2()
        }
      else
        ()
    }
  };
  if (finishedBuf.isEmpty.unary_$bang)
    {
      {
        var x = 0;
        while$4(){
          if (x.$less(ROW))
            {
              {
                val row = fallingBuffer(x);
                row.clear();
                var y = 0;
                val conRow = continuedBuf(x);
                val height = conRow.size;
                while$3(){
                  if (y.$less(height))
                    {
                      {
                        row.$plus$eq(conRow(y));
                        y.$plus$eq(1)
                      };
                      while$3()
                    }
                  else
                    ()
                };
                x.$plus$eq(1)
              };
              while$4()
            }
          else
            ()
        };
        falling.update(fallingBuffer)
      };
      {
        var x = 0;
        while$7(){
          if (x.$less(ROW))
            {
              {
                val row = fixed()(x);
                val length = row.size;
                val buf = fixedBuf(x);
                fixedTemp.clear();
                var y = 0;
                while$5(){
                  if (y.$less(length))
                    {
                      {
                        fixedTemp.push(row(y));
                        y.$plus$eq(1)
                      };
                      while$5()
                    }
                  else
                    ()
                };
                buf.clear();
                while$6(){
                  if (fixedTemp.isEmpty.unary_$bang)
                    {
                      buf.$plus$eq(fixedTemp.pop());
                      while$6()
                    }
                  else
                    ()
                };
                x.$plus$eq(1)
              };
              while$7()
            }
          else
            ()
        }
      };
      finishedBuf.foreach(((p) => fixedBuf(p.tx()).$plus$eq(p)));
      fixed.update(fixedBuf);
      scanRemoveFill()
    }
  else
    ();
  var i = 0;
  while$8(){
    if (i.$less(ROW))
      {
        {
          continuedBuf(i).clear();
          i.$plus$eq(1)
        };
        while$8()
      }
    else
      ()
  };
  finishedBuf.clear()
}
after
def updateFalling(delta: Float): scala.Unit = {
  val _$started = System.nanoTime;
  val _$result: scala.Unit = {
    {
      val fallingCpy = falling();
      val width = fallingCpy.size;
      var x = 0;
      while$2(){
        if (x.$less(width))
          {
            {
              val applied = fallingCpy(x);
              val height = applied.size;
              var y = 0;
              while$1(){
                if (y.$less(height))
                  {
                    {
                      val p = applied(y);
                      p.vy().$plus$eq(gravity.$times(delta));
                      if (p.update(delta))
                        finishedBuf.$plus$eq(p)
                      else
                        continuedBuf(x).$plus$eq(p);
                      y.$plus$eq(1)
                    };
                    while$1()
                  }
                else
                  ()
              };
              x.$plus$eq(1)
            };
            while$2()
          }
        else
          ()
      }
    };
    if (finishedBuf.isEmpty.unary_$bang)
      {
        {
          var x = 0;
          while$4(){
            if (x.$less(ROW))
              {
                {
                  val row = fallingBuffer(x);
                  row.clear();
                  var y = 0;
                  val conRow = continuedBuf(x);
                  val height = conRow.size;
                  while$3(){
                    if (y.$less(height))
                      {
                        {
                          row.$plus$eq(conRow(y));
                          y.$plus$eq(1)
                        };
                        while$3()
                      }
                    else
                      ()
                  };
                  x.$plus$eq(1)
                };
                while$4()
              }
            else
              ()
          };
          falling.update(fallingBuffer)
        };
        {
          var x = 0;
          while$7(){
            if (x.$less(ROW))
              {
                {
                  val row = fixed()(x);
                  val length = row.size;
                  val buf = fixedBuf(x);
                  fixedTemp.clear();
                  var y = 0;
                  while$5(){
                    if (y.$less(length))
                      {
                        {
                          fixedTemp.push(row(y));
                          y.$plus$eq(1)
                        };
                        while$5()
                      }
                    else
                      ()
                  };
                  buf.clear();
                  while$6(){
                    if (fixedTemp.isEmpty.unary_$bang)
                      {
                        buf.$plus$eq(fixedTemp.pop());
                        while$6()
                      }
                    else
                      ()
                  };
                  x.$plus$eq(1)
                };
                while$7()
              }
            else
              ()
          }
        };
        finishedBuf.foreach(((p) => fixedBuf(p.tx()).$plus$eq(p)));
        fixed.update(fixedBuf);
        scanRemoveFill()
      }
    else
      ();
    var i = 0;
    while$8(){
      if (i.$less(ROW))
        {
          {
            continuedBuf(i).clear();
            i.$plus$eq(1)
          };
          while$8()
        }
      else
        ()
    };
    finishedBuf.clear()
  };
  val _$finished = System.nanoTime;
  scala.Predef.println("(ActionPuzzle3,updateFalling)".$plus(_$finished.$minus(_$started)));
  _$result
}
result:
class ActionPuzzle3 extends Reactor with Logging {
  def <init>() = {
    super.<init>();
    ()
  };
  import GMatch3._;
  val ROW = 8;
  val COLUMN = 8;
  val gravity = -10.0;
  val processor = {
    final class $anon extends ParallelProcessor {
      def <init>() = {
        super.<init>();
        ()
      }
    };
    new $anon()
  };
  def initializer: Var[Puzzle[AP]] = {
    val _$started = System.nanoTime;
    val _$result: Var[Puzzle[AP]] = Var(GMatch3.initialize(COLUMN)({
      final class $anon extends IndexedSeqGen {
        def <init>() = {
          super.<init>();
          ()
        };
        def convert[T >: _root_.scala.Nothing <: _root_.scala.Any](seq: Seq[T]): IndexedSeq[T] = ArrayBuffer.apply((seq: _*))
      };
      new $anon()
    }));
    val _$finished = System.nanoTime;
    scala.Predef.println("(ActionPuzzle3,initializer)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def seed: _root_.scala.Function0[AP] = {
    val _$started = System.nanoTime;
    val _$result: _root_.scala.Function0[AP] = (() => MathUtils.random(0, 3).$bar$greater(((x$1) => new AP(x$1))));
    val _$finished = System.nanoTime;
    scala.Predef.println("(ActionPuzzle3,seed)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  val fixed = initializer;
  val falling = initializer;
  val swiping: Var[Map[AP, Seq[Task]]] = Var(Map.empty.withDefaultValue(Nil));
  val future = initializer;
  val futureIndices = future.map(GMatch3.toIndexMap);
  var panelAdd = ((panels: Seq[scala.Tuple3[AP, Int, Int]]) => ());
  var panelRemove = ((panels: Seq[AP]) => ());
  def scanAll = {
    val _$started = System.nanoTime;
    val _$result = scanAllWithException(fixedFuture)(3)(((p) => {
      val opt = swiping().get(p);
      if (opt.isDefined)
        opt.get.isEmpty.unary_$bang
      else
        false
    }));
    val _$finished = System.nanoTime;
    scala.Predef.println("(ActionPuzzle3,scanAll)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def scanAllDistinct = {
    val _$started = System.nanoTime;
    val _$result = scanAll.flatten.map(((x$2) => x$2._1)).distinct;
    val _$finished = System.nanoTime;
    scala.Predef.println("(ActionPuzzle3,scanAllDistinct)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def scanAllDistinct2 = {
    val _$started = System.nanoTime;
    val _$result = GMatch3.scanAll(fixedFuture)(ROW)(COLUMN)(((a, b) => {
  val map = swiping();
  if (a.$bang$eq(null).$amp$amp(b.$bang$eq(null)).$amp$amp(map(a).isEmpty).$amp$amp(map(b).isEmpty))
    a.n.$eq$eq(b.n)
  else
    false
})).filter(((x$3) => x$3.size.$greater(2))).flatten.distinct;
    val _$finished = System.nanoTime;
    scala.Predef.println("(ActionPuzzle3,scanAllDistinct2)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def fixedFuture = {
    val _$started = System.nanoTime;
    val _$result = fixed().zipWithIndex.map(<empty> match {
      case scala.Tuple2((row @ _), (x @ _)) => row.zipWithIndex.map(<empty> match {
        case scala.Tuple2((p @ _), (y @ _)) => future()(x)(y)
      })
    });
    val _$finished = System.nanoTime;
    scala.Predef.println("(ActionPuzzle3,fixedFuture)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def scanRemoveFill(): scala.Unit = {
    val _$started = System.nanoTime;
    val _$result: scala.Unit = {
      remove(scanAllDistinct2);
      fill()
    };
    val _$finished = System.nanoTime;
    scala.Predef.println("(ActionPuzzle3,scanRemoveFill)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def swipe(x: Int, y: Int, nx: Int, ny: Int) = {
    val _$started = System.nanoTime;
    val _$result = try {
      def verified = y.$less(fixed()(x).size).$amp$amp(ny.$less(fixed()(nx).size));
      if (verified)
        {
          val pa = future()(x)(y);
          val pb = future()(nx)(ny);
          import Animator._;
          import Interpolation._;
          var pTask: Task = null;
          val task = {
  <synthetic> val x$17 = {
  <synthetic> val x$7 = scala.Tuple2(pa.x, nx);
  {
  <synthetic> val x$6 = scala.Tuple2(pa.y, ny);
  {
  <synthetic> val x$5 = scala.Tuple2(pb.x, x);
  {
  <synthetic> val x$4 = scala.Tuple2(pb.y, y);
  Nil.$colon$colon(x$4)
}.$colon$colon(x$5)
}.$colon$colon(x$6)
}.$colon$colon(x$7)
}.map(<empty> match {
  case scala.Tuple2((v @ _), (tgt @ _)) => interpolate(v).to(tgt).in(0.3).using(exp10Out)
}).$bar$greater(((x$8) => WaitAll((x$8: _*))));
  {
  <synthetic> val x$16 = Do({
    swiping().$plus$plus$eq({
      <synthetic> val x$14 = pa.$minus$greater(swiping().get(pa).map(((x$9) => x$9.filterNot(((x$10) => x$10.$eq$eq(pTask))))).$bar(Nil));
      {
  <synthetic> val x$13 = pb.$minus$greater(swiping().get(pb).map(((x$11) => x$11.filterNot(((x$12) => x$12.$eq$eq(pTask))))).$bar(Nil));
  Nil.$colon$colon(x$13)
}.$colon$colon(x$14)
    });
    swiping.update(swiping().filterNot(((x$15) => x$15._2.isEmpty)));
    if (verified)
      {
        fixed.update(fixed().swap(x, y, nx, ny));
        scanRemoveFill()
      }
    else
      ()
  });
  Nil.$colon$colon(x$16)
}.$colon$colon(x$17)
}.$bar$greater(((x$18) => Sequence((x$18: _*))));
          pTask = task;
          swiping().$plus$plus$eq({
            <synthetic> val x$20 = pa.$minus$greater(swiping().get(pa).$bar(Nil).$colon$plus(task));
            {
  <synthetic> val x$19 = pb.$minus$greater(swiping().get(pb).$bar(Nil).$colon$plus(task));
  Nil.$colon$colon(x$19)
}.$colon$colon(x$20)
          });
          future.update(future().swap(x, y, nx, ny));
          processor.add(task)
        }
      else
        ()
    } catch {
      case (e @ (_: Exception)) => e.printStackTrace()
    };
    val _$finished = System.nanoTime;
    scala.Predef.println("(ActionPuzzle3,swipe)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def fill(): scala.Unit = {
    val _$started = System.nanoTime;
    val _$result: scala.Unit = {
      val filling = future().createFillingPuzzle(seed, COLUMN);
      if (filling.exists(((x$21) => x$21.isEmpty.unary_$bang)))
        {
          falling.update(falling().append(filling));
          future.update(fixed().append(falling()));
          val fillingMap = filling.toIndexMap;
          val indexed = filling.flatten.map(((p) => {
            <synthetic> private[this] val x$22 = fillingMap(p): @scala.unchecked match {
              case scala.Tuple2((x @ _), (y @ _)) => scala.Tuple2(x, y)
            };
            val x = x$22._1;
            val y = x$22._2;
            scala.Tuple3(p, x, y)
          }));
          val futureMap = futureIndices();
          val futureIndexed = filling.flatten.map(((p) => {
            <synthetic> private[this] val x$23 = futureMap(p): @scala.unchecked match {
              case scala.Tuple2((x @ _), (y @ _)) => scala.Tuple2(x, y)
            };
            val x = x$23._1;
            val y = x$23._2;
            scala.Tuple3(p, x, y)
          }));
          indexed.withFilter(((check$ifrefutable$1) => check$ifrefutable$1: @scala.unchecked match {
  case scala.Tuple3((p @ _), (x @ _), (y @ _)) => true
  case _ => false
})).foreach(((x$24) => x$24: @scala.unchecked match {
            case scala.Tuple3((p @ _), (x @ _), (y @ _)) => {
              p.x.update(x);
              p.y.update(COLUMN.$plus(y))
            }
          }));
          futureIndexed.$bar$greater(panelAdd)
        }
      else
        ();
      updateTargetPosition()
    };
    val _$finished = System.nanoTime;
    scala.Predef.println("(ActionPuzzle3,fill)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def cancelSwipingAnimation(panel: AP): scala.Unit = {
    val _$started = System.nanoTime;
    val _$result: scala.Unit = swiping().get(panel).foreach(((tasks) => tasks.foreach(((task) => {
      log("canceled!".$plus(panel));
      swiping().$plus$eq(panel.$minus$greater(swiping().get(panel).map(((x$25) => x$25.filterNot(((x$26) => x$26.$eq$eq(task))))).$bar(Nil)))
    }))));
    val _$finished = System.nanoTime;
    scala.Predef.println("(ActionPuzzle3,cancelSwipingAnimation)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def remove(panels: Seq[AP]): scala.Unit = {
    val _$started = System.nanoTime;
    val _$result: scala.Unit = {
      if (panels.isEmpty.unary_$bang)
        {
          <synthetic> private[this] val x$27 = fixedFuture.remove(panels): @scala.unchecked match {
            case scala.Tuple2((left @ _), (fallen @ _)) => scala.Tuple2(left, fallen)
          };
          val left = x$27._1;
          val fallen = x$27._2;
          fallen.foreach(((x$28) => x$28.foreach(cancelSwipingAnimation)));
          panelRemove(panels);
          fixed.update(left);
          falling.update(fallen.append(falling()));
          future.update(fixed().append(falling()))
        }
      else
        ();
      updateTargetPosition()
    };
    val _$finished = System.nanoTime;
    scala.Predef.println("(ActionPuzzle3,remove)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def updateTargetPosition(): scala.Unit = {
    val _$started = System.nanoTime;
    val _$result: scala.Unit = {
      val indices = futureIndices();
      falling().foreach(((row) => row.foreach(((p) => {
        <synthetic> private[this] val x$29 = indices(p): @scala.unchecked match {
          case scala.Tuple2((tx @ _), (ty @ _)) => scala.Tuple2(tx, ty)
        };
        val tx = x$29._1;
        val ty = x$29._2;
        p.tx.update(tx);
        p.ty.update(ty)
      }))))
    };
    val _$finished = System.nanoTime;
    scala.Predef.println("(ActionPuzzle3,updateTargetPosition)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def initialize(): scala.Unit = {
    val _$started = System.nanoTime;
    val _$result: scala.Unit = fill();
    val _$finished = System.nanoTime;
    scala.Predef.println("(ActionPuzzle3,initialize)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def update(delta: Float): scala.Unit = {
    val _$started = System.nanoTime;
    val _$result: scala.Unit = {
      updateFalling(delta);
      processor.update(delta)
    };
    val _$finished = System.nanoTime;
    scala.Predef.println("(ActionPuzzle3,update)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def newPuzzleBuffer: ArrayBuffer[ArrayBuffer[AP]] = {
    val _$started = System.nanoTime;
    val _$result: ArrayBuffer[ArrayBuffer[AP]] = ArrayBuffer((0.until(ROW).map(((x$30) => ArrayBuffer.empty[AP])): _*));
    val _$finished = System.nanoTime;
    scala.Predef.println("(ActionPuzzle3,newPuzzleBuffer)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  val finishedBuf = ListBuffer.empty[AP];
  val continuedBuf = newPuzzleBuffer;
  val fallingBuffer = ArrayBuffer((0.until(ROW).map(((x$31) => ArrayBuffer.empty[AP])): _*));
  val fixedBuf = newPuzzleBuffer;
  val fixedTemp = mutable.Stack.empty[AP];
  def updateFalling(delta: Float): scala.Unit = {
    val _$started = System.nanoTime;
    val _$result: scala.Unit = {
      {
        val fallingCpy = falling();
        val width = fallingCpy.size;
        var x = 0;
        while$2(){
          if (x.$less(width))
            {
              {
                val applied = fallingCpy(x);
                val height = applied.size;
                var y = 0;
                while$1(){
                  if (y.$less(height))
                    {
                      {
                        val p = applied(y);
                        p.vy().$plus$eq(gravity.$times(delta));
                        if (p.update(delta))
                          finishedBuf.$plus$eq(p)
                        else
                          continuedBuf(x).$plus$eq(p);
                        y.$plus$eq(1)
                      };
                      while$1()
                    }
                  else
                    ()
                };
                x.$plus$eq(1)
              };
              while$2()
            }
          else
            ()
        }
      };
      if (finishedBuf.isEmpty.unary_$bang)
        {
          {
            var x = 0;
            while$4(){
              if (x.$less(ROW))
                {
                  {
                    val row = fallingBuffer(x);
                    row.clear();
                    var y = 0;
                    val conRow = continuedBuf(x);
                    val height = conRow.size;
                    while$3(){
                      if (y.$less(height))
                        {
                          {
                            row.$plus$eq(conRow(y));
                            y.$plus$eq(1)
                          };
                          while$3()
                        }
                      else
                        ()
                    };
                    x.$plus$eq(1)
                  };
                  while$4()
                }
              else
                ()
            };
            falling.update(fallingBuffer)
          };
          {
            var x = 0;
            while$7(){
              if (x.$less(ROW))
                {
                  {
                    val row = fixed()(x);
                    val length = row.size;
                    val buf = fixedBuf(x);
                    fixedTemp.clear();
                    var y = 0;
                    while$5(){
                      if (y.$less(length))
                        {
                          {
                            fixedTemp.push(row(y));
                            y.$plus$eq(1)
                          };
                          while$5()
                        }
                      else
                        ()
                    };
                    buf.clear();
                    while$6(){
                      if (fixedTemp.isEmpty.unary_$bang)
                        {
                          buf.$plus$eq(fixedTemp.pop());
                          while$6()
                        }
                      else
                        ()
                    };
                    x.$plus$eq(1)
                  };
                  while$7()
                }
              else
                ()
            }
          };
          finishedBuf.foreach(((p) => fixedBuf(p.tx()).$plus$eq(p)));
          fixed.update(fixedBuf);
          scanRemoveFill()
        }
      else
        ();
      var i = 0;
      while$8(){
        if (i.$less(ROW))
          {
            {
              continuedBuf(i).clear();
              i.$plus$eq(1)
            };
            while$8()
          }
        else
          ()
      };
      finishedBuf.clear()
    };
    val _$finished = System.nanoTime;
    scala.Predef.println("(ActionPuzzle3,updateFalling)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  class AP extends GMatch3.Panel with Reactor {
    <paramaccessor> val n: Int = _;
    def <init>(n: Int) = {
      super.<init>();
      ()
    };
    val x = Var(0.0);
    val y = Var(0.0);
    val vx = Var(0.0);
    val vy = Var(0.0);
    val tx = Var(0);
    val ty = Var(0);
    lazy val isSwiping = swiping.map(((x$32) => x$32.get(AP.this).map(((x$33) => x$33.isEmpty.unary_$bang)).$bar(false)));
    lazy val isFalling = falling.map(((x$34) => x$34.exists(((x$35) => x$35.contains(AP.this)))));
    def matchTo(panel: Panel): Boolean = panel match {
      case (p @ (_: AP)) => n.$eq$eq(p.n)
      case _ => false
    };
    def update(delta: Float): Boolean = {
      val nx = x().$plus(vx().$times(delta));
      var ny = y().$plus(vy().$times(delta));
      val next = PartialFunction.condOpt(ty().$minus(1))(future()(tx()));
      val finished = next match {
        case Some((p @ _)) if fixed().exists(((x$36) => x$36.contains(p))) => ny.$minus(ty()).$less(0.0)
        case Some((p @ _)) if ny.$minus(p.y()).$less(1.0) => {
          ny = p.y().$plus(1);
          vy.update(p.vy());
          false
        }
        case _ => ny.$minus(ty()).$less(0.0)
      };
      if (finished)
        {
          ny = ty();
          clear()
        }
      else
        ();
      x.update(nx);
      y.update(ny);
      finished
    };
    def clear(): scala.Unit = {
      vx.update(0);
      vy.update(0)
    };
    override def toString: String = n.$plus("")
  }
}
before
def initialize[T >: _root_.scala.Nothing <: Panel](width: Int)(c: IndexedSeqGen): Puzzle[T] = c.convert(0.until(width).toList.as(c.convert(Nil)))
after
def initialize[T >: _root_.scala.Nothing <: Panel](width: Int)(c: IndexedSeqGen): Puzzle[T] = {
  val _$started = System.nanoTime;
  val _$result: Puzzle[T] = c.convert(0.until(width).toList.as(c.convert(Nil)));
  val _$finished = System.nanoTime;
  scala.Predef.println("(GMatch3,initialize)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def included[T >: _root_.scala.Nothing <: Panel](sets: MatchedSet[T], target: MatchedSet[T]): Boolean = target.forall(sets.contains)
after
def included[T >: _root_.scala.Nothing <: Panel](sets: MatchedSet[T], target: MatchedSet[T]): Boolean = {
  val _$started = System.nanoTime;
  val _$result: Boolean = target.forall(sets.contains);
  val _$finished = System.nanoTime;
  scala.Predef.println("(GMatch3,included)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def toIndexMap[T >: _root_.scala.Nothing <: _root_.scala.Any](puzzle: IndexedSeq[IndexedSeq[T]]): Map[T, scala.Tuple2[Int, Int]] = puzzle.zipWithIndex.flatMap(<empty> match {
  case scala.Tuple2((row @ _), (x @ _)) => row.zipWithIndex.map(<empty> match {
    case scala.Tuple2((p @ _), (y @ _)) => p.$minus$greater(x, y)
  })
}).toMap
after
def toIndexMap[T >: _root_.scala.Nothing <: _root_.scala.Any](puzzle: IndexedSeq[IndexedSeq[T]]): Map[T, scala.Tuple2[Int, Int]] = {
  val _$started = System.nanoTime;
  val _$result: Map[T, scala.Tuple2[Int, Int]] = puzzle.zipWithIndex.flatMap(<empty> match {
  case scala.Tuple2((row @ _), (x @ _)) => row.zipWithIndex.map(<empty> match {
    case scala.Tuple2((p @ _), (y @ _)) => p.$minus$greater(x, y)
  })
}).toMap;
  val _$finished = System.nanoTime;
  scala.Predef.println("(GMatch3,toIndexMap)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def scanIndexedWithException[T >: _root_.scala.Nothing <: Panel](puzzle: Puzzle[T])(x: Int)(y: Int)(exception: _root_.scala.Function1[T, Boolean])(right: Boolean): MatchedSet[T] = {
  val W = puzzle.size;
  var matches = {
    <synthetic> val x$1 = scala.Tuple3(puzzle(x)(y), x, y);
    Nil.$colon$colon(x$1)
  };
  if (x.$less(W))
    {
      val H = puzzle(x).size;
      var current = puzzle(x)(y);
      if (right)
        {
          var nx = x.$plus(1);
          while$1(){
            if (nx.$less(W).$amp$amp(y.$less(puzzle(nx).size)).$amp$amp(current.matchTo(puzzle(nx)(y))).$amp$amp(exception(current).unary_$bang))
              {
                {
                  matches.$colon$colon$eq(puzzle(nx)(y), nx, y);
                  current = puzzle(nx)(y);
                  nx.$plus$eq(1)
                };
                while$1()
              }
            else
              ()
          }
        }
      else
        {
          var ny = y.$plus(1);
          while$2(){
            if (ny.$less(H).$amp$amp(current.matchTo(puzzle(x)(ny))).$amp$amp(exception(current).unary_$bang))
              {
                {
                  matches.$colon$colon$eq(puzzle(x)(ny), x, ny);
                  current = puzzle(x)(ny);
                  ny.$plus$eq(1)
                };
                while$2()
              }
            else
              ()
          }
        }
    }
  else
    ();
  matches
}
after
def scanIndexedWithException[T >: _root_.scala.Nothing <: Panel](puzzle: Puzzle[T])(x: Int)(y: Int)(exception: _root_.scala.Function1[T, Boolean])(right: Boolean): MatchedSet[T] = {
  val _$started = System.nanoTime;
  val _$result: MatchedSet[T] = {
    val W = puzzle.size;
    var matches = {
      <synthetic> val x$1 = scala.Tuple3(puzzle(x)(y), x, y);
      Nil.$colon$colon(x$1)
    };
    if (x.$less(W))
      {
        val H = puzzle(x).size;
        var current = puzzle(x)(y);
        if (right)
          {
            var nx = x.$plus(1);
            while$1(){
              if (nx.$less(W).$amp$amp(y.$less(puzzle(nx).size)).$amp$amp(current.matchTo(puzzle(nx)(y))).$amp$amp(exception(current).unary_$bang))
                {
                  {
                    matches.$colon$colon$eq(puzzle(nx)(y), nx, y);
                    current = puzzle(nx)(y);
                    nx.$plus$eq(1)
                  };
                  while$1()
                }
              else
                ()
            }
          }
        else
          {
            var ny = y.$plus(1);
            while$2(){
              if (ny.$less(H).$amp$amp(current.matchTo(puzzle(x)(ny))).$amp$amp(exception(current).unary_$bang))
                {
                  {
                    matches.$colon$colon$eq(puzzle(x)(ny), x, ny);
                    current = puzzle(x)(ny);
                    ny.$plus$eq(1)
                  };
                  while$2()
                }
              else
                ()
            }
          }
      }
    else
      ();
    matches
  };
  val _$finished = System.nanoTime;
  scala.Predef.println("(GMatch3,scanIndexedWithException)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def segment[T >: _root_.scala.Nothing <: _root_.scala.Any](line: List[T])(divider: _root_.scala.Function1[T, Boolean]): List[List[T]] = {
  def rec(seq: List[T], processing: List[T]): List[List[T]] = seq match {
    case Nil => {
      <synthetic> val x$2 = processing;
      Nil.$colon$colon(x$2)
    }
    case $colon$colon((head @ _), (tail @ _)) => if (divider(head))
      rec(tail, {
        <synthetic> val x$3 = head;
        processing.$colon$colon(x$3)
      })
    else
      {
        <synthetic> val x$5 = processing;
        rec(tail, {
  <synthetic> val x$4 = head;
  Nil.$colon$colon(x$4)
}).$colon$colon(x$5)
      }
  };
  rec(line, Nil)
}
after
def segment[T >: _root_.scala.Nothing <: _root_.scala.Any](line: List[T])(divider: _root_.scala.Function1[T, Boolean]): List[List[T]] = {
  val _$started = System.nanoTime;
  val _$result: List[List[T]] = {
    def rec(seq: List[T], processing: List[T]): List[List[T]] = seq match {
      case Nil => {
        <synthetic> val x$2 = processing;
        Nil.$colon$colon(x$2)
      }
      case $colon$colon((head @ _), (tail @ _)) => if (divider(head))
        rec(tail, {
          <synthetic> val x$3 = head;
          processing.$colon$colon(x$3)
        })
      else
        {
          <synthetic> val x$5 = processing;
          rec(tail, {
  <synthetic> val x$4 = head;
  Nil.$colon$colon(x$4)
}).$colon$colon(x$5)
        }
    };
    rec(line, Nil)
  };
  val _$finished = System.nanoTime;
  scala.Predef.println("(GMatch3,segment)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def segment2[T >: _root_.scala.Nothing <: _root_.scala.Any](line: List[T])(filter: _root_.scala.Function2[T, T, Boolean]): List[List[T]] = {
  @new tailrec() def rec(seq: List[T], buffer: List[T], result: List[List[T]]): List[List[T]] = seq match {
    case Nil => {
      <synthetic> val x$6 = buffer;
      result.$colon$colon(x$6)
    }
    case $colon$colon((head @ _), Nil) => {
      <synthetic> val x$8 = {
        <synthetic> val x$7 = head;
        buffer.$colon$colon(x$7)
      };
      result.$colon$colon(x$8)
    }
    case $colon$colon((first @ _), $colon$colon((second @ _), (tail @ _))) => if (filter(first, second))
      rec({
        <synthetic> val x$9 = second;
        tail.$colon$colon(x$9)
      }, {
        <synthetic> val x$10 = first;
        buffer.$colon$colon(x$10)
      }, result)
    else
      rec({
        <synthetic> val x$11 = second;
        tail.$colon$colon(x$11)
      }, Nil, {
        <synthetic> val x$13 = {
          <synthetic> val x$12 = first;
          buffer.$colon$colon(x$12)
        };
        result.$colon$colon(x$13)
      })
  };
  rec(line, Nil, Nil)
}
after
def segment2[T >: _root_.scala.Nothing <: _root_.scala.Any](line: List[T])(filter: _root_.scala.Function2[T, T, Boolean]): List[List[T]] = {
  val _$started = System.nanoTime;
  val _$result: List[List[T]] = {
    @new tailrec() def rec(seq: List[T], buffer: List[T], result: List[List[T]]): List[List[T]] = seq match {
      case Nil => {
        <synthetic> val x$6 = buffer;
        result.$colon$colon(x$6)
      }
      case $colon$colon((head @ _), Nil) => {
        <synthetic> val x$8 = {
          <synthetic> val x$7 = head;
          buffer.$colon$colon(x$7)
        };
        result.$colon$colon(x$8)
      }
      case $colon$colon((first @ _), $colon$colon((second @ _), (tail @ _))) => if (filter(first, second))
        rec({
          <synthetic> val x$9 = second;
          tail.$colon$colon(x$9)
        }, {
          <synthetic> val x$10 = first;
          buffer.$colon$colon(x$10)
        }, result)
      else
        rec({
          <synthetic> val x$11 = second;
          tail.$colon$colon(x$11)
        }, Nil, {
          <synthetic> val x$13 = {
            <synthetic> val x$12 = first;
            buffer.$colon$colon(x$12)
          };
          result.$colon$colon(x$13)
        })
    };
    rec(line, Nil, Nil)
  };
  val _$finished = System.nanoTime;
  scala.Predef.println("(GMatch3,segment2)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def verticalLine[T >: _root_.scala.Nothing <: _root_.scala.Any](puzzle: IndexedSeq[IndexedSeq[T]])(x: Int)(y: Int)(height: Int): List[T] = {
  val W = puzzle.size;
  var result = List.empty[T];
  if (x.$less(W))
    {
      val row = puzzle(x);
      val H = row.size;
      var ny = y;
      while$3(){
        if (ny.$less(height))
          {
            {
              if (ny.$less(H))
                result.$colon$colon$eq(row(ny))
              else
                result.$colon$colon$eq(null.asInstanceOf[T]);
              ny.$plus$eq(1)
            };
            while$3()
          }
        else
          ()
      }
    }
  else
    {
      var ny = y;
      while$4(){
        if (ny.$less(height))
          {
            {
              result.$colon$colon$eq(null.asInstanceOf[T]);
              ny.$plus$eq(1)
            };
            while$4()
          }
        else
          ()
      }
    };
  result
}
after
def verticalLine[T >: _root_.scala.Nothing <: _root_.scala.Any](puzzle: IndexedSeq[IndexedSeq[T]])(x: Int)(y: Int)(height: Int): List[T] = {
  val _$started = System.nanoTime;
  val _$result: List[T] = {
    val W = puzzle.size;
    var result = List.empty[T];
    if (x.$less(W))
      {
        val row = puzzle(x);
        val H = row.size;
        var ny = y;
        while$3(){
          if (ny.$less(height))
            {
              {
                if (ny.$less(H))
                  result.$colon$colon$eq(row(ny))
                else
                  result.$colon$colon$eq(null.asInstanceOf[T]);
                ny.$plus$eq(1)
              };
              while$3()
            }
          else
            ()
        }
      }
    else
      {
        var ny = y;
        while$4(){
          if (ny.$less(height))
            {
              {
                result.$colon$colon$eq(null.asInstanceOf[T]);
                ny.$plus$eq(1)
              };
              while$4()
            }
          else
            ()
        }
      };
    result
  };
  val _$finished = System.nanoTime;
  scala.Predef.println("(GMatch3,verticalLine)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def horizontalLine[T >: _root_.scala.Nothing <: _root_.scala.Any](puzzle: IndexedSeq[IndexedSeq[T]])(x: Int)(y: Int)(width: Int): List[T] = {
  val W = puzzle.size;
  var result = List.empty[T];
  var nx = x;
  while$5(){
    if (nx.$less(width))
      {
        {
          if (nx.$less(W))
            {
              val row = puzzle(nx);
              val H = row.size;
              if (y.$less(H))
                result.$colon$colon$eq(row(y))
              else
                result.$colon$colon$eq(null.asInstanceOf[T])
            }
          else
            result.$colon$colon$eq(null.asInstanceOf[T]);
          nx.$plus$eq(1)
        };
        while$5()
      }
    else
      ()
  };
  result
}
after
def horizontalLine[T >: _root_.scala.Nothing <: _root_.scala.Any](puzzle: IndexedSeq[IndexedSeq[T]])(x: Int)(y: Int)(width: Int): List[T] = {
  val _$started = System.nanoTime;
  val _$result: List[T] = {
    val W = puzzle.size;
    var result = List.empty[T];
    var nx = x;
    while$5(){
      if (nx.$less(width))
        {
          {
            if (nx.$less(W))
              {
                val row = puzzle(nx);
                val H = row.size;
                if (y.$less(H))
                  result.$colon$colon$eq(row(y))
                else
                  result.$colon$colon$eq(null.asInstanceOf[T])
              }
            else
              result.$colon$colon$eq(null.asInstanceOf[T]);
            nx.$plus$eq(1)
          };
          while$5()
        }
      else
        ()
    };
    result
  };
  val _$finished = System.nanoTime;
  scala.Predef.println("(GMatch3,horizontalLine)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def allLine[T >: _root_.scala.Nothing <: _root_.scala.Any](puzzle: IndexedSeq[IndexedSeq[T]])(width: Int)(height: Int): List[List[T]] = {
  var result: List[List[T]] = Nil;
  var x = 0;
  while$6(){
    if (x.$less(width))
      {
        {
          result.$colon$colon$eq(verticalLine(puzzle)(x)(0)(height));
          x.$plus$eq(1)
        };
        while$6()
      }
    else
      ()
  };
  var y = 0;
  while$7(){
    if (y.$less(height))
      {
        {
          result.$colon$colon$eq(horizontalLine(puzzle)(0)(y)(width));
          y.$plus$eq(1)
        };
        while$7()
      }
    else
      ()
  };
  result
}
after
def allLine[T >: _root_.scala.Nothing <: _root_.scala.Any](puzzle: IndexedSeq[IndexedSeq[T]])(width: Int)(height: Int): List[List[T]] = {
  val _$started = System.nanoTime;
  val _$result: List[List[T]] = {
    var result: List[List[T]] = Nil;
    var x = 0;
    while$6(){
      if (x.$less(width))
        {
          {
            result.$colon$colon$eq(verticalLine(puzzle)(x)(0)(height));
            x.$plus$eq(1)
          };
          while$6()
        }
      else
        ()
    };
    var y = 0;
    while$7(){
      if (y.$less(height))
        {
          {
            result.$colon$colon$eq(horizontalLine(puzzle)(0)(y)(width));
            y.$plus$eq(1)
          };
          while$7()
        }
      else
        ()
    };
    result
  };
  val _$finished = System.nanoTime;
  scala.Predef.println("(GMatch3,allLine)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def scanAll[T >: _root_.scala.Nothing <: _root_.scala.Any](puzzle: IndexedSeq[IndexedSeq[T]])(width: Int)(height: Int)(filter: _root_.scala.Function2[T, T, Boolean]): Seq[Seq[T]] = allLine(puzzle)(width)(height).flatMap(((x$14) => segment2(x$14)(filter)))
after
def scanAll[T >: _root_.scala.Nothing <: _root_.scala.Any](puzzle: IndexedSeq[IndexedSeq[T]])(width: Int)(height: Int)(filter: _root_.scala.Function2[T, T, Boolean]): Seq[Seq[T]] = {
  val _$started = System.nanoTime;
  val _$result: Seq[Seq[T]] = allLine(puzzle)(width)(height).flatMap(((x$14) => segment2(x$14)(filter)));
  val _$finished = System.nanoTime;
  scala.Predef.println("(GMatch3,scanAll)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def scanBy[T >: _root_.scala.Nothing <: Panel](puzzle: Puzzle[T])(scanner: _root_.scala.Function1[Int, _root_.scala.Function1[Int, _root_.scala.Function1[Boolean, MatchedSet[T]]]]): Seq[MatchedSet[T]] = {
  val result = mutable.ArrayBuffer[MatchedSet[T]]();
  var x = 0;
  val width = puzzle.size;
  while$11(){
    if (x.$less(width))
      {
        {
          var y = 0;
          val height = puzzle(x).size;
          while$10(){
            if (y.$less(height))
              {
                {
                  var vertical = false;
                  var flipCount = 0;
                  while$9(){
                    if (flipCount.$less(2))
                      {
                        {
                          val set = scanner(x)(y)(vertical);
                          var i = 0;
                          val l = result.length;
                          var noNeedToAdd = false;
                          while$8(){
                            if (i.$less(l))
                              {
                                {
                                  val current = result(i);
                                  val inc = included(result(i), set);
                                  noNeedToAdd.$bar$eq(inc);
                                  val needReplace = current.size.$less(set.size).$amp$amp(inc);
                                  if (needReplace)
                                    result.update(i, set)
                                  else
                                    ();
                                  i.$plus$eq(1)
                                };
                                while$8()
                              }
                            else
                              ()
                          };
                          if (noNeedToAdd.unary_$bang.$amp$amp(set.$bang$eq(Nil)))
                            result.$plus$eq(set)
                          else
                            ();
                          vertical = vertical.unary_$bang;
                          flipCount.$plus$eq(1)
                        };
                        while$9()
                      }
                    else
                      ()
                  };
                  y.$plus$eq(1)
                };
                while$10()
              }
            else
              ()
          };
          x.$plus$eq(1)
        };
        while$11()
      }
    else
      ()
  };
  result
}
after
def scanBy[T >: _root_.scala.Nothing <: Panel](puzzle: Puzzle[T])(scanner: _root_.scala.Function1[Int, _root_.scala.Function1[Int, _root_.scala.Function1[Boolean, MatchedSet[T]]]]): Seq[MatchedSet[T]] = {
  val _$started = System.nanoTime;
  val _$result: Seq[MatchedSet[T]] = {
    val result = mutable.ArrayBuffer[MatchedSet[T]]();
    var x = 0;
    val width = puzzle.size;
    while$11(){
      if (x.$less(width))
        {
          {
            var y = 0;
            val height = puzzle(x).size;
            while$10(){
              if (y.$less(height))
                {
                  {
                    var vertical = false;
                    var flipCount = 0;
                    while$9(){
                      if (flipCount.$less(2))
                        {
                          {
                            val set = scanner(x)(y)(vertical);
                            var i = 0;
                            val l = result.length;
                            var noNeedToAdd = false;
                            while$8(){
                              if (i.$less(l))
                                {
                                  {
                                    val current = result(i);
                                    val inc = included(result(i), set);
                                    noNeedToAdd.$bar$eq(inc);
                                    val needReplace = current.size.$less(set.size).$amp$amp(inc);
                                    if (needReplace)
                                      result.update(i, set)
                                    else
                                      ();
                                    i.$plus$eq(1)
                                  };
                                  while$8()
                                }
                              else
                                ()
                            };
                            if (noNeedToAdd.unary_$bang.$amp$amp(set.$bang$eq(Nil)))
                              result.$plus$eq(set)
                            else
                              ();
                            vertical = vertical.unary_$bang;
                            flipCount.$plus$eq(1)
                          };
                          while$9()
                        }
                      else
                        ()
                    };
                    y.$plus$eq(1)
                  };
                  while$10()
                }
              else
                ()
            };
            x.$plus$eq(1)
          };
          while$11()
        }
      else
        ()
    };
    result
  };
  val _$finished = System.nanoTime;
  scala.Predef.println("(GMatch3,scanBy)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def createFilling[T >: _root_.scala.Nothing <: Panel](puzzle: Puzzle[T])(seed: _root_.scala.Function0[T], col: Int): Events[T] = 0.until(puzzle.size).flatMap(((x) => puzzle(x).size.until(col).map(((y) => scala.Tuple3(seed(), x, y)))))
after
def createFilling[T >: _root_.scala.Nothing <: Panel](puzzle: Puzzle[T])(seed: _root_.scala.Function0[T], col: Int): Events[T] = {
  val _$started = System.nanoTime;
  val _$result: Events[T] = 0.until(puzzle.size).flatMap(((x) => puzzle(x).size.until(col).map(((y) => scala.Tuple3(seed(), x, y)))));
  val _$finished = System.nanoTime;
  scala.Predef.println("(GMatch3,createFilling)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def createFillingPuzzle[T >: _root_.scala.Nothing <: Panel](puzzle: Puzzle[T])(seed: _root_.scala.Function0[T], col: Int): Puzzle[T] = 0.until(puzzle.size).map(((x) => puzzle(x).size.until(col).map(((y) => seed()))))
after
def createFillingPuzzle[T >: _root_.scala.Nothing <: Panel](puzzle: Puzzle[T])(seed: _root_.scala.Function0[T], col: Int): Puzzle[T] = {
  val _$started = System.nanoTime;
  val _$result: Puzzle[T] = 0.until(puzzle.size).map(((x) => puzzle(x).size.until(col).map(((y) => seed()))));
  val _$finished = System.nanoTime;
  scala.Predef.println("(GMatch3,createFillingPuzzle)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def scanAllWithException[T >: _root_.scala.Nothing <: Panel](puzzle: Puzzle[T])(matchLength: Int)(exception: _root_.scala.Function1[T, Boolean]) = scanBy(puzzle)(((x) => ((y) => ((right) => scanIndexedWithException(puzzle)(x)(y)(exception)(right))))).filter(((x$15) => x$15.length.$greater$eq(matchLength)))
after
def scanAllWithException[T >: _root_.scala.Nothing <: Panel](puzzle: Puzzle[T])(matchLength: Int)(exception: _root_.scala.Function1[T, Boolean]) = {
  val _$started = System.nanoTime;
  val _$result = scanBy(puzzle)(((x) => ((y) => ((right) => scanIndexedWithException(puzzle)(x)(y)(exception)(right))))).filter(((x$15) => x$15.length.$greater$eq(matchLength)));
  val _$finished = System.nanoTime;
  scala.Predef.println("(GMatch3,scanAllWithException)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def calcNextIndices[T >: _root_.scala.Nothing <: Panel](left: Puzzle[T])(floatings: Puzzle[T]): Seq[scala.Tuple2[T, scala.Tuple2[Int, Int]]] = {
  val appended = left.append(floatings);
  floatings.flatten.map(((p) => scala.Tuple2(p, appended.indexOfPanelUnhandled(p))))
}
after
def calcNextIndices[T >: _root_.scala.Nothing <: Panel](left: Puzzle[T])(floatings: Puzzle[T]): Seq[scala.Tuple2[T, scala.Tuple2[Int, Int]]] = {
  val _$started = System.nanoTime;
  val _$result: Seq[scala.Tuple2[T, scala.Tuple2[Int, Int]]] = {
    val appended = left.append(floatings);
    floatings.flatten.map(((p) => scala.Tuple2(p, appended.indexOfPanelUnhandled(p))))
  };
  val _$finished = System.nanoTime;
  scala.Predef.println("(GMatch3,calcNextIndices)".$plus(_$finished.$minus(_$started)));
  _$result
}
result:
object GMatch3 extends scala.AnyRef {
  def <init>() = {
    super.<init>();
    ()
  };
  import scala.util.control.Exception._;
  abstract trait Panel extends scala.AnyRef {
    def matchTo(panel: Panel): Boolean
  };
  type Event[T >: _root_.scala.Nothing <: Panel] = scala.Tuple3[T, Int, Int];
  type MatchedSet[T >: _root_.scala.Nothing <: Panel] = Seq[Event[T]];
  type Events[T >: _root_.scala.Nothing <: Panel] = Seq[Event[T]];
  type Puzzle[T >: _root_.scala.Nothing <: Panel] = IndexedSeq[IndexedSeq[T]];
  abstract trait IndexedSeqGen extends scala.AnyRef {
    def convert[T >: _root_.scala.Nothing <: _root_.scala.Any](seq: Seq[T]): IndexedSeq[T]
  };
  def initialize[T >: _root_.scala.Nothing <: Panel](width: Int)(c: IndexedSeqGen): Puzzle[T] = {
    val _$started = System.nanoTime;
    val _$result: Puzzle[T] = c.convert(0.until(width).toList.as(c.convert(Nil)));
    val _$finished = System.nanoTime;
    scala.Predef.println("(GMatch3,initialize)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def included[T >: _root_.scala.Nothing <: Panel](sets: MatchedSet[T], target: MatchedSet[T]): Boolean = {
    val _$started = System.nanoTime;
    val _$result: Boolean = target.forall(sets.contains);
    val _$finished = System.nanoTime;
    scala.Predef.println("(GMatch3,included)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def toIndexMap[T >: _root_.scala.Nothing <: _root_.scala.Any](puzzle: IndexedSeq[IndexedSeq[T]]): Map[T, scala.Tuple2[Int, Int]] = {
    val _$started = System.nanoTime;
    val _$result: Map[T, scala.Tuple2[Int, Int]] = puzzle.zipWithIndex.flatMap(<empty> match {
  case scala.Tuple2((row @ _), (x @ _)) => row.zipWithIndex.map(<empty> match {
    case scala.Tuple2((p @ _), (y @ _)) => p.$minus$greater(x, y)
  })
}).toMap;
    val _$finished = System.nanoTime;
    scala.Predef.println("(GMatch3,toIndexMap)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def scanIndexedWithException[T >: _root_.scala.Nothing <: Panel](puzzle: Puzzle[T])(x: Int)(y: Int)(exception: _root_.scala.Function1[T, Boolean])(right: Boolean): MatchedSet[T] = {
    val _$started = System.nanoTime;
    val _$result: MatchedSet[T] = {
      val W = puzzle.size;
      var matches = {
        <synthetic> val x$1 = scala.Tuple3(puzzle(x)(y), x, y);
        Nil.$colon$colon(x$1)
      };
      if (x.$less(W))
        {
          val H = puzzle(x).size;
          var current = puzzle(x)(y);
          if (right)
            {
              var nx = x.$plus(1);
              while$1(){
                if (nx.$less(W).$amp$amp(y.$less(puzzle(nx).size)).$amp$amp(current.matchTo(puzzle(nx)(y))).$amp$amp(exception(current).unary_$bang))
                  {
                    {
                      matches.$colon$colon$eq(puzzle(nx)(y), nx, y);
                      current = puzzle(nx)(y);
                      nx.$plus$eq(1)
                    };
                    while$1()
                  }
                else
                  ()
              }
            }
          else
            {
              var ny = y.$plus(1);
              while$2(){
                if (ny.$less(H).$amp$amp(current.matchTo(puzzle(x)(ny))).$amp$amp(exception(current).unary_$bang))
                  {
                    {
                      matches.$colon$colon$eq(puzzle(x)(ny), x, ny);
                      current = puzzle(x)(ny);
                      ny.$plus$eq(1)
                    };
                    while$2()
                  }
                else
                  ()
              }
            }
        }
      else
        ();
      matches
    };
    val _$finished = System.nanoTime;
    scala.Predef.println("(GMatch3,scanIndexedWithException)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def segment[T >: _root_.scala.Nothing <: _root_.scala.Any](line: List[T])(divider: _root_.scala.Function1[T, Boolean]): List[List[T]] = {
    val _$started = System.nanoTime;
    val _$result: List[List[T]] = {
      def rec(seq: List[T], processing: List[T]): List[List[T]] = seq match {
        case Nil => {
          <synthetic> val x$2 = processing;
          Nil.$colon$colon(x$2)
        }
        case $colon$colon((head @ _), (tail @ _)) => if (divider(head))
          rec(tail, {
            <synthetic> val x$3 = head;
            processing.$colon$colon(x$3)
          })
        else
          {
            <synthetic> val x$5 = processing;
            rec(tail, {
  <synthetic> val x$4 = head;
  Nil.$colon$colon(x$4)
}).$colon$colon(x$5)
          }
      };
      rec(line, Nil)
    };
    val _$finished = System.nanoTime;
    scala.Predef.println("(GMatch3,segment)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def segment2[T >: _root_.scala.Nothing <: _root_.scala.Any](line: List[T])(filter: _root_.scala.Function2[T, T, Boolean]): List[List[T]] = {
    val _$started = System.nanoTime;
    val _$result: List[List[T]] = {
      @new tailrec() def rec(seq: List[T], buffer: List[T], result: List[List[T]]): List[List[T]] = seq match {
        case Nil => {
          <synthetic> val x$6 = buffer;
          result.$colon$colon(x$6)
        }
        case $colon$colon((head @ _), Nil) => {
          <synthetic> val x$8 = {
            <synthetic> val x$7 = head;
            buffer.$colon$colon(x$7)
          };
          result.$colon$colon(x$8)
        }
        case $colon$colon((first @ _), $colon$colon((second @ _), (tail @ _))) => if (filter(first, second))
          rec({
            <synthetic> val x$9 = second;
            tail.$colon$colon(x$9)
          }, {
            <synthetic> val x$10 = first;
            buffer.$colon$colon(x$10)
          }, result)
        else
          rec({
            <synthetic> val x$11 = second;
            tail.$colon$colon(x$11)
          }, Nil, {
            <synthetic> val x$13 = {
              <synthetic> val x$12 = first;
              buffer.$colon$colon(x$12)
            };
            result.$colon$colon(x$13)
          })
      };
      rec(line, Nil, Nil)
    };
    val _$finished = System.nanoTime;
    scala.Predef.println("(GMatch3,segment2)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def verticalLine[T >: _root_.scala.Nothing <: _root_.scala.Any](puzzle: IndexedSeq[IndexedSeq[T]])(x: Int)(y: Int)(height: Int): List[T] = {
    val _$started = System.nanoTime;
    val _$result: List[T] = {
      val W = puzzle.size;
      var result = List.empty[T];
      if (x.$less(W))
        {
          val row = puzzle(x);
          val H = row.size;
          var ny = y;
          while$3(){
            if (ny.$less(height))
              {
                {
                  if (ny.$less(H))
                    result.$colon$colon$eq(row(ny))
                  else
                    result.$colon$colon$eq(null.asInstanceOf[T]);
                  ny.$plus$eq(1)
                };
                while$3()
              }
            else
              ()
          }
        }
      else
        {
          var ny = y;
          while$4(){
            if (ny.$less(height))
              {
                {
                  result.$colon$colon$eq(null.asInstanceOf[T]);
                  ny.$plus$eq(1)
                };
                while$4()
              }
            else
              ()
          }
        };
      result
    };
    val _$finished = System.nanoTime;
    scala.Predef.println("(GMatch3,verticalLine)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def horizontalLine[T >: _root_.scala.Nothing <: _root_.scala.Any](puzzle: IndexedSeq[IndexedSeq[T]])(x: Int)(y: Int)(width: Int): List[T] = {
    val _$started = System.nanoTime;
    val _$result: List[T] = {
      val W = puzzle.size;
      var result = List.empty[T];
      var nx = x;
      while$5(){
        if (nx.$less(width))
          {
            {
              if (nx.$less(W))
                {
                  val row = puzzle(nx);
                  val H = row.size;
                  if (y.$less(H))
                    result.$colon$colon$eq(row(y))
                  else
                    result.$colon$colon$eq(null.asInstanceOf[T])
                }
              else
                result.$colon$colon$eq(null.asInstanceOf[T]);
              nx.$plus$eq(1)
            };
            while$5()
          }
        else
          ()
      };
      result
    };
    val _$finished = System.nanoTime;
    scala.Predef.println("(GMatch3,horizontalLine)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def allLine[T >: _root_.scala.Nothing <: _root_.scala.Any](puzzle: IndexedSeq[IndexedSeq[T]])(width: Int)(height: Int): List[List[T]] = {
    val _$started = System.nanoTime;
    val _$result: List[List[T]] = {
      var result: List[List[T]] = Nil;
      var x = 0;
      while$6(){
        if (x.$less(width))
          {
            {
              result.$colon$colon$eq(verticalLine(puzzle)(x)(0)(height));
              x.$plus$eq(1)
            };
            while$6()
          }
        else
          ()
      };
      var y = 0;
      while$7(){
        if (y.$less(height))
          {
            {
              result.$colon$colon$eq(horizontalLine(puzzle)(0)(y)(width));
              y.$plus$eq(1)
            };
            while$7()
          }
        else
          ()
      };
      result
    };
    val _$finished = System.nanoTime;
    scala.Predef.println("(GMatch3,allLine)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def scanAll[T >: _root_.scala.Nothing <: _root_.scala.Any](puzzle: IndexedSeq[IndexedSeq[T]])(width: Int)(height: Int)(filter: _root_.scala.Function2[T, T, Boolean]): Seq[Seq[T]] = {
    val _$started = System.nanoTime;
    val _$result: Seq[Seq[T]] = allLine(puzzle)(width)(height).flatMap(((x$14) => segment2(x$14)(filter)));
    val _$finished = System.nanoTime;
    scala.Predef.println("(GMatch3,scanAll)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def scanBy[T >: _root_.scala.Nothing <: Panel](puzzle: Puzzle[T])(scanner: _root_.scala.Function1[Int, _root_.scala.Function1[Int, _root_.scala.Function1[Boolean, MatchedSet[T]]]]): Seq[MatchedSet[T]] = {
    val _$started = System.nanoTime;
    val _$result: Seq[MatchedSet[T]] = {
      val result = mutable.ArrayBuffer[MatchedSet[T]]();
      var x = 0;
      val width = puzzle.size;
      while$11(){
        if (x.$less(width))
          {
            {
              var y = 0;
              val height = puzzle(x).size;
              while$10(){
                if (y.$less(height))
                  {
                    {
                      var vertical = false;
                      var flipCount = 0;
                      while$9(){
                        if (flipCount.$less(2))
                          {
                            {
                              val set = scanner(x)(y)(vertical);
                              var i = 0;
                              val l = result.length;
                              var noNeedToAdd = false;
                              while$8(){
                                if (i.$less(l))
                                  {
                                    {
                                      val current = result(i);
                                      val inc = included(result(i), set);
                                      noNeedToAdd.$bar$eq(inc);
                                      val needReplace = current.size.$less(set.size).$amp$amp(inc);
                                      if (needReplace)
                                        result.update(i, set)
                                      else
                                        ();
                                      i.$plus$eq(1)
                                    };
                                    while$8()
                                  }
                                else
                                  ()
                              };
                              if (noNeedToAdd.unary_$bang.$amp$amp(set.$bang$eq(Nil)))
                                result.$plus$eq(set)
                              else
                                ();
                              vertical = vertical.unary_$bang;
                              flipCount.$plus$eq(1)
                            };
                            while$9()
                          }
                        else
                          ()
                      };
                      y.$plus$eq(1)
                    };
                    while$10()
                  }
                else
                  ()
              };
              x.$plus$eq(1)
            };
            while$11()
          }
        else
          ()
      };
      result
    };
    val _$finished = System.nanoTime;
    scala.Predef.println("(GMatch3,scanBy)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def createFilling[T >: _root_.scala.Nothing <: Panel](puzzle: Puzzle[T])(seed: _root_.scala.Function0[T], col: Int): Events[T] = {
    val _$started = System.nanoTime;
    val _$result: Events[T] = 0.until(puzzle.size).flatMap(((x) => puzzle(x).size.until(col).map(((y) => scala.Tuple3(seed(), x, y)))));
    val _$finished = System.nanoTime;
    scala.Predef.println("(GMatch3,createFilling)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def createFillingPuzzle[T >: _root_.scala.Nothing <: Panel](puzzle: Puzzle[T])(seed: _root_.scala.Function0[T], col: Int): Puzzle[T] = {
    val _$started = System.nanoTime;
    val _$result: Puzzle[T] = 0.until(puzzle.size).map(((x) => puzzle(x).size.until(col).map(((y) => seed()))));
    val _$finished = System.nanoTime;
    scala.Predef.println("(GMatch3,createFillingPuzzle)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def scanAllWithException[T >: _root_.scala.Nothing <: Panel](puzzle: Puzzle[T])(matchLength: Int)(exception: _root_.scala.Function1[T, Boolean]) = {
    val _$started = System.nanoTime;
    val _$result = scanBy(puzzle)(((x) => ((y) => ((right) => scanIndexedWithException(puzzle)(x)(y)(exception)(right))))).filter(((x$15) => x$15.length.$greater$eq(matchLength)));
    val _$finished = System.nanoTime;
    scala.Predef.println("(GMatch3,scanAllWithException)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  @new hello() implicit class PuzzleImpl[T >: _root_.scala.Nothing <: Panel] extends AnyVal {
    <paramaccessor> val puzzle: Puzzle[T] = _;
    def <init>(puzzle: Puzzle[T]) = {
      super.<init>();
      ()
    };
    def text: String = puzzle.map(((col) => col.map(((x$16) => x$16.toString)).fold("")(((x$17, x$18) => x$17.$plus(",").$plus(x$18))))).fold("")(((x$19, x$20) => x$19.$plus("\n").$plus(x$20)));
    def toIndexMap = GMatch3.toIndexMap(puzzle);
    def scanWithException = (GMatch3.scanIndexedWithException(puzzle): (() => <empty>));
    def scan(x: Int)(y: Int)(right: Boolean): MatchedSet[T] = {
      val W = puzzle.size;
      val H = puzzle.head.size;
      val panel = puzzle(x)(y);
      var matching = {
        <synthetic> val x$21 = scala.Tuple3(puzzle(x)(y), x, y);
        Nil.$colon$colon(x$21)
      };
      if (right)
        {
          var nx = x.$plus(1);
          while$12(){
            if (nx.$less(W).$amp$amp(y.$less(puzzle(nx).size)).$amp$amp(panel.matchTo(puzzle(nx)(y))))
              {
                {
                  matching.$colon$colon$eq(puzzle(nx)(y), nx, y);
                  nx.$plus$eq(1)
                };
                while$12()
              }
            else
              ()
          }
        }
      else
        {
          var ny = y.$plus(1);
          val size = puzzle(x).size;
          while$13(){
            if (ny.$less(H).$amp$amp(ny.$less(size)).$amp$amp(panel.matchTo(puzzle(x)(ny))))
              {
                {
                  matching.$colon$colon$eq(puzzle(x)(ny), x, ny);
                  ny.$plus$eq(1)
                };
                while$13()
              }
            else
              ()
          }
        };
      if (matching.size.$greater$eq(3))
        matching
      else
        Nil
    };
    def createFilling = (GMatch3.createFilling(puzzle): (() => <empty>));
    def createFillingPuzzle = (GMatch3.createFillingPuzzle(puzzle): (() => <empty>));
    def fill(filling: Events[T]): Puzzle[T] = filling.foldLeft(puzzle)(<empty> match {
      case scala.Tuple2((p @ _), scala.Tuple3((panel @ _), (x @ _), _)) => p.updated(x, p(x).$colon$plus(panel))
    });
    def removePanels(panels: Seq[T]): Puzzle[T] = puzzle.map(((x$22) => x$22.filterNot(panels.contains)));
    def remove(panels: Seq[T]): scala.Tuple2[Puzzle[T], Puzzle[T]] = {
      val f = ((p: Panel) => panels.contains(p));
      puzzle.unzip(((col) => col.span(((x$23) => f(x$23).unary_$bang)) match {
        case scala.Tuple2((left @ _), (float @ _)) => scala.Tuple2(left, float.filterNot(f))
      }))
    };
    def createNoMatchFilling(seed: _root_.scala.Function0[T], col: Int): Events[T] = {
      val contains = (puzzle.flatten.contains: (() => <empty>));
      @new tailrec() def fillWithStatics(added: Puzzle[T]): Puzzle[T] = added.createFilling(seed, col) match {
        case (filling @ _) => added.fill(filling) match {
          case (filled @ _) => filled.scanAll match {
            case (matches @ _) if matches.flatten.map(((x$24) => x$24._1)).forall(contains) => filled
            case (matches @ _) => fillWithStatics(added.removePanels(filling.filterNot(puzzle.flatten.contains).map(((x$25) => x$25._1))))
          }
        }
      };
      fillWithStatics(puzzle).zipWithIndex.withFilter(((check$ifrefutable$1) => check$ifrefutable$1: @scala.unchecked match {
  case scala.Tuple2((col @ _), (x @ _)) => true
  case _ => false
})).flatMap(((x$28) => x$28: @scala.unchecked match {
        case scala.Tuple2((col @ _), (x @ _)) => col.zipWithIndex.withFilter(((check$ifrefutable$2) => check$ifrefutable$2: @scala.unchecked match {
  case scala.Tuple2((panel @ _), (y @ _)) => true
  case _ => false
})).withFilter(((x$26) => x$26: @scala.unchecked match {
  case scala.Tuple2((panel @ _), (y @ _)) => puzzle(x).contains(panel).unary_$bang
})).map(((x$27) => x$27: @scala.unchecked match {
          case scala.Tuple2((panel @ _), (y @ _)) => scala.Tuple3(panel, x, y)
        }))
      }))
    };
    private def fillWithoutMatches(seed: _root_.scala.Function0[T], size: Int): Puzzle[T] = {
      @new tailrec() def recFWM(p: Puzzle[T]): Puzzle[T] = p.scanAll match {
        case Seq() => p
        case (matches @ _) => recFWM(removePanels(matches.flatten.distinct.map(<empty> match {
          case scala.Tuple3((pp @ _), (x @ _), (y @ _)) => pp
        })))
      };
      recFWM(puzzle)
    };
    def scanBy = (GMatch3.scanBy(puzzle): (() => <empty>));
    def scanAllWithException(matchLength: Int)(exception: _root_.scala.Function1[T, Boolean]) = scanBy(((x) => ((y) => ((right) => scanWithException(x)(y)(exception)(right))))).filter(((x$29) => x$29.size.$greater$eq(matchLength)));
    def scanAll = scanBy(scan);
    def indexOfPanel(panel: T): Either[Throwable, scala.Tuple2[Int, Int]] = allCatch.either({
      val row = puzzle.filter(((x$30) => x$30.contains(panel))).head;
      scala.Tuple2(puzzle.indexOf(row), row.indexOf(panel))
    });
    def indexOfPanelOpt(panel: T): Option[scala.Tuple2[Int, Int]] = allCatch.opt({
      val row = puzzle.filter(((x$31) => x$31.contains(panel))).head;
      scala.Tuple2(puzzle.indexOf(row), row.indexOf(panel))
    });
    def indexOfPanelUnhandled(panel: Panel): scala.Tuple2[Int, Int] = {
      val row = puzzle.filter(((x$32) => x$32.contains(panel))).head;
      scala.Tuple2(puzzle.indexOf(row), row.indexOf(panel))
    };
    def swap(ax: Int, ay: Int, bx: Int, by: Int): Puzzle[T] = {
      val a = puzzle(ax)(ay);
      val b = puzzle(bx)(by);
      val puzzle1 = puzzle.updated(ax, puzzle(ax).updated(ay, b));
      val puzzle2 = puzzle1.updated(bx, puzzle1(bx).updated(by, a));
      puzzle2
    };
    def append(p: Puzzle[T]): Puzzle[T] = puzzle.zipWithIndex.map(<empty> match {
      case scala.Tuple2((col @ _), (x @ _)) => col.$plus$plus(p(x))
    })
  };
  def calcNextIndices[T >: _root_.scala.Nothing <: Panel](left: Puzzle[T])(floatings: Puzzle[T]): Seq[scala.Tuple2[T, scala.Tuple2[Int, Int]]] = {
    val _$started = System.nanoTime;
    val _$result: Seq[scala.Tuple2[T, scala.Tuple2[Int, Int]]] = {
      val appended = left.append(floatings);
      floatings.flatten.map(((p) => scala.Tuple2(p, appended.indexOfPanelUnhandled(p))))
    };
    val _$finished = System.nanoTime;
    scala.Predef.println("(GMatch3,calcNextIndices)".$plus(_$finished.$minus(_$started)));
    _$result
  }
}
before
def <init>(puzzle: Puzzle[T]) = {
  super.<init>();
  ()
}
after
def <init>(puzzle: Puzzle[T]) = {
  val _$started = System.nanoTime;
  val _$result = {
    super.<init>();
    ()
  };
  val _$finished = System.nanoTime;
  scala.Predef.println("(PuzzleImpl,<init>)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def text: String = puzzle.map(((col) => col.map(((x$16) => x$16.toString)).fold("")(((x$17, x$18) => x$17.$plus(",").$plus(x$18))))).fold("")(((x$19, x$20) => x$19.$plus("\n").$plus(x$20)))
after
def text: String = {
  val _$started = System.nanoTime;
  val _$result: String = puzzle.map(((col) => col.map(((x$16) => x$16.toString)).fold("")(((x$17, x$18) => x$17.$plus(",").$plus(x$18))))).fold("")(((x$19, x$20) => x$19.$plus("\n").$plus(x$20)));
  val _$finished = System.nanoTime;
  scala.Predef.println("(PuzzleImpl,text)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def toIndexMap = GMatch3.toIndexMap(puzzle)
after
def toIndexMap = {
  val _$started = System.nanoTime;
  val _$result = GMatch3.toIndexMap(puzzle);
  val _$finished = System.nanoTime;
  scala.Predef.println("(PuzzleImpl,toIndexMap)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def scanWithException = (GMatch3.scanIndexedWithException(puzzle): (() => <empty>))
after
def scanWithException = {
  val _$started = System.nanoTime;
  val _$result = (GMatch3.scanIndexedWithException(puzzle): (() => <empty>));
  val _$finished = System.nanoTime;
  scala.Predef.println("(PuzzleImpl,scanWithException)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def scan(x: Int)(y: Int)(right: Boolean): MatchedSet[T] = {
  val W = puzzle.size;
  val H = puzzle.head.size;
  val panel = puzzle(x)(y);
  var matching = {
    <synthetic> val x$21 = scala.Tuple3(puzzle(x)(y), x, y);
    Nil.$colon$colon(x$21)
  };
  if (right)
    {
      var nx = x.$plus(1);
      while$12(){
        if (nx.$less(W).$amp$amp(y.$less(puzzle(nx).size)).$amp$amp(panel.matchTo(puzzle(nx)(y))))
          {
            {
              matching.$colon$colon$eq(puzzle(nx)(y), nx, y);
              nx.$plus$eq(1)
            };
            while$12()
          }
        else
          ()
      }
    }
  else
    {
      var ny = y.$plus(1);
      val size = puzzle(x).size;
      while$13(){
        if (ny.$less(H).$amp$amp(ny.$less(size)).$amp$amp(panel.matchTo(puzzle(x)(ny))))
          {
            {
              matching.$colon$colon$eq(puzzle(x)(ny), x, ny);
              ny.$plus$eq(1)
            };
            while$13()
          }
        else
          ()
      }
    };
  if (matching.size.$greater$eq(3))
    matching
  else
    Nil
}
after
def scan(x: Int)(y: Int)(right: Boolean): MatchedSet[T] = {
  val _$started = System.nanoTime;
  val _$result: MatchedSet[T] = {
    val W = puzzle.size;
    val H = puzzle.head.size;
    val panel = puzzle(x)(y);
    var matching = {
      <synthetic> val x$21 = scala.Tuple3(puzzle(x)(y), x, y);
      Nil.$colon$colon(x$21)
    };
    if (right)
      {
        var nx = x.$plus(1);
        while$12(){
          if (nx.$less(W).$amp$amp(y.$less(puzzle(nx).size)).$amp$amp(panel.matchTo(puzzle(nx)(y))))
            {
              {
                matching.$colon$colon$eq(puzzle(nx)(y), nx, y);
                nx.$plus$eq(1)
              };
              while$12()
            }
          else
            ()
        }
      }
    else
      {
        var ny = y.$plus(1);
        val size = puzzle(x).size;
        while$13(){
          if (ny.$less(H).$amp$amp(ny.$less(size)).$amp$amp(panel.matchTo(puzzle(x)(ny))))
            {
              {
                matching.$colon$colon$eq(puzzle(x)(ny), x, ny);
                ny.$plus$eq(1)
              };
              while$13()
            }
          else
            ()
        }
      };
    if (matching.size.$greater$eq(3))
      matching
    else
      Nil
  };
  val _$finished = System.nanoTime;
  scala.Predef.println("(PuzzleImpl,scan)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def createFilling = (GMatch3.createFilling(puzzle): (() => <empty>))
after
def createFilling = {
  val _$started = System.nanoTime;
  val _$result = (GMatch3.createFilling(puzzle): (() => <empty>));
  val _$finished = System.nanoTime;
  scala.Predef.println("(PuzzleImpl,createFilling)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def createFillingPuzzle = (GMatch3.createFillingPuzzle(puzzle): (() => <empty>))
after
def createFillingPuzzle = {
  val _$started = System.nanoTime;
  val _$result = (GMatch3.createFillingPuzzle(puzzle): (() => <empty>));
  val _$finished = System.nanoTime;
  scala.Predef.println("(PuzzleImpl,createFillingPuzzle)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def fill(filling: Events[T]): Puzzle[T] = filling.foldLeft(puzzle)(<empty> match {
  case scala.Tuple2((p @ _), scala.Tuple3((panel @ _), (x @ _), _)) => p.updated(x, p(x).$colon$plus(panel))
})
after
def fill(filling: Events[T]): Puzzle[T] = {
  val _$started = System.nanoTime;
  val _$result: Puzzle[T] = filling.foldLeft(puzzle)(<empty> match {
    case scala.Tuple2((p @ _), scala.Tuple3((panel @ _), (x @ _), _)) => p.updated(x, p(x).$colon$plus(panel))
  });
  val _$finished = System.nanoTime;
  scala.Predef.println("(PuzzleImpl,fill)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def removePanels(panels: Seq[T]): Puzzle[T] = puzzle.map(((x$22) => x$22.filterNot(panels.contains)))
after
def removePanels(panels: Seq[T]): Puzzle[T] = {
  val _$started = System.nanoTime;
  val _$result: Puzzle[T] = puzzle.map(((x$22) => x$22.filterNot(panels.contains)));
  val _$finished = System.nanoTime;
  scala.Predef.println("(PuzzleImpl,removePanels)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def remove(panels: Seq[T]): scala.Tuple2[Puzzle[T], Puzzle[T]] = {
  val f = ((p: Panel) => panels.contains(p));
  puzzle.unzip(((col) => col.span(((x$23) => f(x$23).unary_$bang)) match {
    case scala.Tuple2((left @ _), (float @ _)) => scala.Tuple2(left, float.filterNot(f))
  }))
}
after
def remove(panels: Seq[T]): scala.Tuple2[Puzzle[T], Puzzle[T]] = {
  val _$started = System.nanoTime;
  val _$result: scala.Tuple2[Puzzle[T], Puzzle[T]] = {
    val f = ((p: Panel) => panels.contains(p));
    puzzle.unzip(((col) => col.span(((x$23) => f(x$23).unary_$bang)) match {
      case scala.Tuple2((left @ _), (float @ _)) => scala.Tuple2(left, float.filterNot(f))
    }))
  };
  val _$finished = System.nanoTime;
  scala.Predef.println("(PuzzleImpl,remove)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def createNoMatchFilling(seed: _root_.scala.Function0[T], col: Int): Events[T] = {
  val contains = (puzzle.flatten.contains: (() => <empty>));
  @new tailrec() def fillWithStatics(added: Puzzle[T]): Puzzle[T] = added.createFilling(seed, col) match {
    case (filling @ _) => added.fill(filling) match {
      case (filled @ _) => filled.scanAll match {
        case (matches @ _) if matches.flatten.map(((x$24) => x$24._1)).forall(contains) => filled
        case (matches @ _) => fillWithStatics(added.removePanels(filling.filterNot(puzzle.flatten.contains).map(((x$25) => x$25._1))))
      }
    }
  };
  fillWithStatics(puzzle).zipWithIndex.withFilter(((check$ifrefutable$1) => check$ifrefutable$1: @scala.unchecked match {
  case scala.Tuple2((col @ _), (x @ _)) => true
  case _ => false
})).flatMap(((x$28) => x$28: @scala.unchecked match {
    case scala.Tuple2((col @ _), (x @ _)) => col.zipWithIndex.withFilter(((check$ifrefutable$2) => check$ifrefutable$2: @scala.unchecked match {
  case scala.Tuple2((panel @ _), (y @ _)) => true
  case _ => false
})).withFilter(((x$26) => x$26: @scala.unchecked match {
  case scala.Tuple2((panel @ _), (y @ _)) => puzzle(x).contains(panel).unary_$bang
})).map(((x$27) => x$27: @scala.unchecked match {
      case scala.Tuple2((panel @ _), (y @ _)) => scala.Tuple3(panel, x, y)
    }))
  }))
}
after
def createNoMatchFilling(seed: _root_.scala.Function0[T], col: Int): Events[T] = {
  val _$started = System.nanoTime;
  val _$result: Events[T] = {
    val contains = (puzzle.flatten.contains: (() => <empty>));
    @new tailrec() def fillWithStatics(added: Puzzle[T]): Puzzle[T] = added.createFilling(seed, col) match {
      case (filling @ _) => added.fill(filling) match {
        case (filled @ _) => filled.scanAll match {
          case (matches @ _) if matches.flatten.map(((x$24) => x$24._1)).forall(contains) => filled
          case (matches @ _) => fillWithStatics(added.removePanels(filling.filterNot(puzzle.flatten.contains).map(((x$25) => x$25._1))))
        }
      }
    };
    fillWithStatics(puzzle).zipWithIndex.withFilter(((check$ifrefutable$1) => check$ifrefutable$1: @scala.unchecked match {
  case scala.Tuple2((col @ _), (x @ _)) => true
  case _ => false
})).flatMap(((x$28) => x$28: @scala.unchecked match {
      case scala.Tuple2((col @ _), (x @ _)) => col.zipWithIndex.withFilter(((check$ifrefutable$2) => check$ifrefutable$2: @scala.unchecked match {
  case scala.Tuple2((panel @ _), (y @ _)) => true
  case _ => false
})).withFilter(((x$26) => x$26: @scala.unchecked match {
  case scala.Tuple2((panel @ _), (y @ _)) => puzzle(x).contains(panel).unary_$bang
})).map(((x$27) => x$27: @scala.unchecked match {
        case scala.Tuple2((panel @ _), (y @ _)) => scala.Tuple3(panel, x, y)
      }))
    }))
  };
  val _$finished = System.nanoTime;
  scala.Predef.println("(PuzzleImpl,createNoMatchFilling)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
private def fillWithoutMatches(seed: _root_.scala.Function0[T], size: Int): Puzzle[T] = {
  @new tailrec() def recFWM(p: Puzzle[T]): Puzzle[T] = p.scanAll match {
    case Seq() => p
    case (matches @ _) => recFWM(removePanels(matches.flatten.distinct.map(<empty> match {
      case scala.Tuple3((pp @ _), (x @ _), (y @ _)) => pp
    })))
  };
  recFWM(puzzle)
}
after
private def fillWithoutMatches(seed: _root_.scala.Function0[T], size: Int): Puzzle[T] = {
  val _$started = System.nanoTime;
  val _$result: Puzzle[T] = {
    @new tailrec() def recFWM(p: Puzzle[T]): Puzzle[T] = p.scanAll match {
      case Seq() => p
      case (matches @ _) => recFWM(removePanels(matches.flatten.distinct.map(<empty> match {
        case scala.Tuple3((pp @ _), (x @ _), (y @ _)) => pp
      })))
    };
    recFWM(puzzle)
  };
  val _$finished = System.nanoTime;
  scala.Predef.println("(PuzzleImpl,fillWithoutMatches)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def scanBy = (GMatch3.scanBy(puzzle): (() => <empty>))
after
def scanBy = {
  val _$started = System.nanoTime;
  val _$result = (GMatch3.scanBy(puzzle): (() => <empty>));
  val _$finished = System.nanoTime;
  scala.Predef.println("(PuzzleImpl,scanBy)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def scanAllWithException(matchLength: Int)(exception: _root_.scala.Function1[T, Boolean]) = scanBy(((x) => ((y) => ((right) => scanWithException(x)(y)(exception)(right))))).filter(((x$29) => x$29.size.$greater$eq(matchLength)))
after
def scanAllWithException(matchLength: Int)(exception: _root_.scala.Function1[T, Boolean]) = {
  val _$started = System.nanoTime;
  val _$result = scanBy(((x) => ((y) => ((right) => scanWithException(x)(y)(exception)(right))))).filter(((x$29) => x$29.size.$greater$eq(matchLength)));
  val _$finished = System.nanoTime;
  scala.Predef.println("(PuzzleImpl,scanAllWithException)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def scanAll = scanBy(scan)
after
def scanAll = {
  val _$started = System.nanoTime;
  val _$result = scanBy(scan);
  val _$finished = System.nanoTime;
  scala.Predef.println("(PuzzleImpl,scanAll)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def indexOfPanel(panel: T): Either[Throwable, scala.Tuple2[Int, Int]] = allCatch.either({
  val row = puzzle.filter(((x$30) => x$30.contains(panel))).head;
  scala.Tuple2(puzzle.indexOf(row), row.indexOf(panel))
})
after
def indexOfPanel(panel: T): Either[Throwable, scala.Tuple2[Int, Int]] = {
  val _$started = System.nanoTime;
  val _$result: Either[Throwable, scala.Tuple2[Int, Int]] = allCatch.either({
    val row = puzzle.filter(((x$30) => x$30.contains(panel))).head;
    scala.Tuple2(puzzle.indexOf(row), row.indexOf(panel))
  });
  val _$finished = System.nanoTime;
  scala.Predef.println("(PuzzleImpl,indexOfPanel)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def indexOfPanelOpt(panel: T): Option[scala.Tuple2[Int, Int]] = allCatch.opt({
  val row = puzzle.filter(((x$31) => x$31.contains(panel))).head;
  scala.Tuple2(puzzle.indexOf(row), row.indexOf(panel))
})
after
def indexOfPanelOpt(panel: T): Option[scala.Tuple2[Int, Int]] = {
  val _$started = System.nanoTime;
  val _$result: Option[scala.Tuple2[Int, Int]] = allCatch.opt({
    val row = puzzle.filter(((x$31) => x$31.contains(panel))).head;
    scala.Tuple2(puzzle.indexOf(row), row.indexOf(panel))
  });
  val _$finished = System.nanoTime;
  scala.Predef.println("(PuzzleImpl,indexOfPanelOpt)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def indexOfPanelUnhandled(panel: Panel): scala.Tuple2[Int, Int] = {
  val row = puzzle.filter(((x$32) => x$32.contains(panel))).head;
  scala.Tuple2(puzzle.indexOf(row), row.indexOf(panel))
}
after
def indexOfPanelUnhandled(panel: Panel): scala.Tuple2[Int, Int] = {
  val _$started = System.nanoTime;
  val _$result: scala.Tuple2[Int, Int] = {
    val row = puzzle.filter(((x$32) => x$32.contains(panel))).head;
    scala.Tuple2(puzzle.indexOf(row), row.indexOf(panel))
  };
  val _$finished = System.nanoTime;
  scala.Predef.println("(PuzzleImpl,indexOfPanelUnhandled)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def swap(ax: Int, ay: Int, bx: Int, by: Int): Puzzle[T] = {
  val a = puzzle(ax)(ay);
  val b = puzzle(bx)(by);
  val puzzle1 = puzzle.updated(ax, puzzle(ax).updated(ay, b));
  val puzzle2 = puzzle1.updated(bx, puzzle1(bx).updated(by, a));
  puzzle2
}
after
def swap(ax: Int, ay: Int, bx: Int, by: Int): Puzzle[T] = {
  val _$started = System.nanoTime;
  val _$result: Puzzle[T] = {
    val a = puzzle(ax)(ay);
    val b = puzzle(bx)(by);
    val puzzle1 = puzzle.updated(ax, puzzle(ax).updated(ay, b));
    val puzzle2 = puzzle1.updated(bx, puzzle1(bx).updated(by, a));
    puzzle2
  };
  val _$finished = System.nanoTime;
  scala.Predef.println("(PuzzleImpl,swap)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def append(p: Puzzle[T]): Puzzle[T] = puzzle.zipWithIndex.map(<empty> match {
  case scala.Tuple2((col @ _), (x @ _)) => col.$plus$plus(p(x))
})
after
def append(p: Puzzle[T]): Puzzle[T] = {
  val _$started = System.nanoTime;
  val _$result: Puzzle[T] = puzzle.zipWithIndex.map(<empty> match {
    case scala.Tuple2((col @ _), (x @ _)) => col.$plus$plus(p(x))
  });
  val _$finished = System.nanoTime;
  scala.Predef.println("(PuzzleImpl,append)".$plus(_$finished.$minus(_$started)));
  _$result
}
result:
implicit class PuzzleImpl[T >: _root_.scala.Nothing <: Panel] extends AnyVal {
  <paramaccessor> val puzzle: Puzzle[T] = _;
  def <init>(puzzle: Puzzle[T]) = {
    val _$started = System.nanoTime;
    val _$result = {
      super.<init>();
      ()
    };
    val _$finished = System.nanoTime;
    scala.Predef.println("(PuzzleImpl,<init>)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def text: String = {
    val _$started = System.nanoTime;
    val _$result: String = puzzle.map(((col) => col.map(((x$16) => x$16.toString)).fold("")(((x$17, x$18) => x$17.$plus(",").$plus(x$18))))).fold("")(((x$19, x$20) => x$19.$plus("\n").$plus(x$20)));
    val _$finished = System.nanoTime;
    scala.Predef.println("(PuzzleImpl,text)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def toIndexMap = {
    val _$started = System.nanoTime;
    val _$result = GMatch3.toIndexMap(puzzle);
    val _$finished = System.nanoTime;
    scala.Predef.println("(PuzzleImpl,toIndexMap)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def scanWithException = {
    val _$started = System.nanoTime;
    val _$result = (GMatch3.scanIndexedWithException(puzzle): (() => <empty>));
    val _$finished = System.nanoTime;
    scala.Predef.println("(PuzzleImpl,scanWithException)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def scan(x: Int)(y: Int)(right: Boolean): MatchedSet[T] = {
    val _$started = System.nanoTime;
    val _$result: MatchedSet[T] = {
      val W = puzzle.size;
      val H = puzzle.head.size;
      val panel = puzzle(x)(y);
      var matching = {
        <synthetic> val x$21 = scala.Tuple3(puzzle(x)(y), x, y);
        Nil.$colon$colon(x$21)
      };
      if (right)
        {
          var nx = x.$plus(1);
          while$12(){
            if (nx.$less(W).$amp$amp(y.$less(puzzle(nx).size)).$amp$amp(panel.matchTo(puzzle(nx)(y))))
              {
                {
                  matching.$colon$colon$eq(puzzle(nx)(y), nx, y);
                  nx.$plus$eq(1)
                };
                while$12()
              }
            else
              ()
          }
        }
      else
        {
          var ny = y.$plus(1);
          val size = puzzle(x).size;
          while$13(){
            if (ny.$less(H).$amp$amp(ny.$less(size)).$amp$amp(panel.matchTo(puzzle(x)(ny))))
              {
                {
                  matching.$colon$colon$eq(puzzle(x)(ny), x, ny);
                  ny.$plus$eq(1)
                };
                while$13()
              }
            else
              ()
          }
        };
      if (matching.size.$greater$eq(3))
        matching
      else
        Nil
    };
    val _$finished = System.nanoTime;
    scala.Predef.println("(PuzzleImpl,scan)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def createFilling = {
    val _$started = System.nanoTime;
    val _$result = (GMatch3.createFilling(puzzle): (() => <empty>));
    val _$finished = System.nanoTime;
    scala.Predef.println("(PuzzleImpl,createFilling)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def createFillingPuzzle = {
    val _$started = System.nanoTime;
    val _$result = (GMatch3.createFillingPuzzle(puzzle): (() => <empty>));
    val _$finished = System.nanoTime;
    scala.Predef.println("(PuzzleImpl,createFillingPuzzle)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def fill(filling: Events[T]): Puzzle[T] = {
    val _$started = System.nanoTime;
    val _$result: Puzzle[T] = filling.foldLeft(puzzle)(<empty> match {
      case scala.Tuple2((p @ _), scala.Tuple3((panel @ _), (x @ _), _)) => p.updated(x, p(x).$colon$plus(panel))
    });
    val _$finished = System.nanoTime;
    scala.Predef.println("(PuzzleImpl,fill)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def removePanels(panels: Seq[T]): Puzzle[T] = {
    val _$started = System.nanoTime;
    val _$result: Puzzle[T] = puzzle.map(((x$22) => x$22.filterNot(panels.contains)));
    val _$finished = System.nanoTime;
    scala.Predef.println("(PuzzleImpl,removePanels)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def remove(panels: Seq[T]): scala.Tuple2[Puzzle[T], Puzzle[T]] = {
    val _$started = System.nanoTime;
    val _$result: scala.Tuple2[Puzzle[T], Puzzle[T]] = {
      val f = ((p: Panel) => panels.contains(p));
      puzzle.unzip(((col) => col.span(((x$23) => f(x$23).unary_$bang)) match {
        case scala.Tuple2((left @ _), (float @ _)) => scala.Tuple2(left, float.filterNot(f))
      }))
    };
    val _$finished = System.nanoTime;
    scala.Predef.println("(PuzzleImpl,remove)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def createNoMatchFilling(seed: _root_.scala.Function0[T], col: Int): Events[T] = {
    val _$started = System.nanoTime;
    val _$result: Events[T] = {
      val contains = (puzzle.flatten.contains: (() => <empty>));
      @new tailrec() def fillWithStatics(added: Puzzle[T]): Puzzle[T] = added.createFilling(seed, col) match {
        case (filling @ _) => added.fill(filling) match {
          case (filled @ _) => filled.scanAll match {
            case (matches @ _) if matches.flatten.map(((x$24) => x$24._1)).forall(contains) => filled
            case (matches @ _) => fillWithStatics(added.removePanels(filling.filterNot(puzzle.flatten.contains).map(((x$25) => x$25._1))))
          }
        }
      };
      fillWithStatics(puzzle).zipWithIndex.withFilter(((check$ifrefutable$1) => check$ifrefutable$1: @scala.unchecked match {
  case scala.Tuple2((col @ _), (x @ _)) => true
  case _ => false
})).flatMap(((x$28) => x$28: @scala.unchecked match {
        case scala.Tuple2((col @ _), (x @ _)) => col.zipWithIndex.withFilter(((check$ifrefutable$2) => check$ifrefutable$2: @scala.unchecked match {
  case scala.Tuple2((panel @ _), (y @ _)) => true
  case _ => false
})).withFilter(((x$26) => x$26: @scala.unchecked match {
  case scala.Tuple2((panel @ _), (y @ _)) => puzzle(x).contains(panel).unary_$bang
})).map(((x$27) => x$27: @scala.unchecked match {
          case scala.Tuple2((panel @ _), (y @ _)) => scala.Tuple3(panel, x, y)
        }))
      }))
    };
    val _$finished = System.nanoTime;
    scala.Predef.println("(PuzzleImpl,createNoMatchFilling)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  private def fillWithoutMatches(seed: _root_.scala.Function0[T], size: Int): Puzzle[T] = {
    val _$started = System.nanoTime;
    val _$result: Puzzle[T] = {
      @new tailrec() def recFWM(p: Puzzle[T]): Puzzle[T] = p.scanAll match {
        case Seq() => p
        case (matches @ _) => recFWM(removePanels(matches.flatten.distinct.map(<empty> match {
          case scala.Tuple3((pp @ _), (x @ _), (y @ _)) => pp
        })))
      };
      recFWM(puzzle)
    };
    val _$finished = System.nanoTime;
    scala.Predef.println("(PuzzleImpl,fillWithoutMatches)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def scanBy = {
    val _$started = System.nanoTime;
    val _$result = (GMatch3.scanBy(puzzle): (() => <empty>));
    val _$finished = System.nanoTime;
    scala.Predef.println("(PuzzleImpl,scanBy)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def scanAllWithException(matchLength: Int)(exception: _root_.scala.Function1[T, Boolean]) = {
    val _$started = System.nanoTime;
    val _$result = scanBy(((x) => ((y) => ((right) => scanWithException(x)(y)(exception)(right))))).filter(((x$29) => x$29.size.$greater$eq(matchLength)));
    val _$finished = System.nanoTime;
    scala.Predef.println("(PuzzleImpl,scanAllWithException)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def scanAll = {
    val _$started = System.nanoTime;
    val _$result = scanBy(scan);
    val _$finished = System.nanoTime;
    scala.Predef.println("(PuzzleImpl,scanAll)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def indexOfPanel(panel: T): Either[Throwable, scala.Tuple2[Int, Int]] = {
    val _$started = System.nanoTime;
    val _$result: Either[Throwable, scala.Tuple2[Int, Int]] = allCatch.either({
      val row = puzzle.filter(((x$30) => x$30.contains(panel))).head;
      scala.Tuple2(puzzle.indexOf(row), row.indexOf(panel))
    });
    val _$finished = System.nanoTime;
    scala.Predef.println("(PuzzleImpl,indexOfPanel)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def indexOfPanelOpt(panel: T): Option[scala.Tuple2[Int, Int]] = {
    val _$started = System.nanoTime;
    val _$result: Option[scala.Tuple2[Int, Int]] = allCatch.opt({
      val row = puzzle.filter(((x$31) => x$31.contains(panel))).head;
      scala.Tuple2(puzzle.indexOf(row), row.indexOf(panel))
    });
    val _$finished = System.nanoTime;
    scala.Predef.println("(PuzzleImpl,indexOfPanelOpt)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def indexOfPanelUnhandled(panel: Panel): scala.Tuple2[Int, Int] = {
    val _$started = System.nanoTime;
    val _$result: scala.Tuple2[Int, Int] = {
      val row = puzzle.filter(((x$32) => x$32.contains(panel))).head;
      scala.Tuple2(puzzle.indexOf(row), row.indexOf(panel))
    };
    val _$finished = System.nanoTime;
    scala.Predef.println("(PuzzleImpl,indexOfPanelUnhandled)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def swap(ax: Int, ay: Int, bx: Int, by: Int): Puzzle[T] = {
    val _$started = System.nanoTime;
    val _$result: Puzzle[T] = {
      val a = puzzle(ax)(ay);
      val b = puzzle(bx)(by);
      val puzzle1 = puzzle.updated(ax, puzzle(ax).updated(ay, b));
      val puzzle2 = puzzle1.updated(bx, puzzle1(bx).updated(by, a));
      puzzle2
    };
    val _$finished = System.nanoTime;
    scala.Predef.println("(PuzzleImpl,swap)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def append(p: Puzzle[T]): Puzzle[T] = {
    val _$started = System.nanoTime;
    val _$result: Puzzle[T] = puzzle.zipWithIndex.map(<empty> match {
      case scala.Tuple2((col @ _), (x @ _)) => col.$plus$plus(p(x))
    });
    val _$finished = System.nanoTime;
    scala.Predef.println("(PuzzleImpl,append)".$plus(_$finished.$minus(_$started)));
    _$result
  }
}
[0m[[0minfo[0m] [0mCompiling 5 Scala sources to /Users/glyph/Documents/sbt/scalagamerepo/common/target/scala-2.10/classes...[0m
before
def initialize[T >: _root_.scala.Nothing <: Panel](width: Int)(c: IndexedSeqGen): Puzzle[T] = c.convert(0.until(width).toList.as(c.convert(Nil)))
after
def initialize[T >: _root_.scala.Nothing <: Panel](width: Int)(c: IndexedSeqGen): Puzzle[T] = {
  val _$started = System.nanoTime;
  val _$result: Puzzle[T] = c.convert(0.until(width).toList.as(c.convert(Nil)));
  val _$finished = System.nanoTime;
  scala.Predef.println("(GMatch3,initialize)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def included[T >: _root_.scala.Nothing <: Panel](sets: MatchedSet[T], target: MatchedSet[T]): Boolean = target.forall(sets.contains)
after
def included[T >: _root_.scala.Nothing <: Panel](sets: MatchedSet[T], target: MatchedSet[T]): Boolean = {
  val _$started = System.nanoTime;
  val _$result: Boolean = target.forall(sets.contains);
  val _$finished = System.nanoTime;
  scala.Predef.println("(GMatch3,included)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def toIndexMap[T >: _root_.scala.Nothing <: _root_.scala.Any](puzzle: IndexedSeq[IndexedSeq[T]]): Map[T, scala.Tuple2[Int, Int]] = puzzle.zipWithIndex.flatMap(<empty> match {
  case scala.Tuple2((row @ _), (x @ _)) => row.zipWithIndex.map(<empty> match {
    case scala.Tuple2((p @ _), (y @ _)) => p.$minus$greater(x, y)
  })
}).toMap
after
def toIndexMap[T >: _root_.scala.Nothing <: _root_.scala.Any](puzzle: IndexedSeq[IndexedSeq[T]]): Map[T, scala.Tuple2[Int, Int]] = {
  val _$started = System.nanoTime;
  val _$result: Map[T, scala.Tuple2[Int, Int]] = puzzle.zipWithIndex.flatMap(<empty> match {
  case scala.Tuple2((row @ _), (x @ _)) => row.zipWithIndex.map(<empty> match {
    case scala.Tuple2((p @ _), (y @ _)) => p.$minus$greater(x, y)
  })
}).toMap;
  val _$finished = System.nanoTime;
  scala.Predef.println("(GMatch3,toIndexMap)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def scanIndexedWithException[T >: _root_.scala.Nothing <: Panel](puzzle: Puzzle[T])(x: Int)(y: Int)(exception: _root_.scala.Function1[T, Boolean])(right: Boolean): MatchedSet[T] = {
  val W = puzzle.size;
  var matches = {
    <synthetic> val x$1 = scala.Tuple3(puzzle(x)(y), x, y);
    Nil.$colon$colon(x$1)
  };
  if (x.$less(W))
    {
      val H = puzzle(x).size;
      var current = puzzle(x)(y);
      if (right)
        {
          var nx = x.$plus(1);
          while$1(){
            if (nx.$less(W).$amp$amp(y.$less(puzzle(nx).size)).$amp$amp(current.matchTo(puzzle(nx)(y))).$amp$amp(exception(current).unary_$bang))
              {
                {
                  matches.$colon$colon$eq(puzzle(nx)(y), nx, y);
                  current = puzzle(nx)(y);
                  nx.$plus$eq(1)
                };
                while$1()
              }
            else
              ()
          }
        }
      else
        {
          var ny = y.$plus(1);
          while$2(){
            if (ny.$less(H).$amp$amp(current.matchTo(puzzle(x)(ny))).$amp$amp(exception(current).unary_$bang))
              {
                {
                  matches.$colon$colon$eq(puzzle(x)(ny), x, ny);
                  current = puzzle(x)(ny);
                  ny.$plus$eq(1)
                };
                while$2()
              }
            else
              ()
          }
        }
    }
  else
    ();
  matches
}
after
def scanIndexedWithException[T >: _root_.scala.Nothing <: Panel](puzzle: Puzzle[T])(x: Int)(y: Int)(exception: _root_.scala.Function1[T, Boolean])(right: Boolean): MatchedSet[T] = {
  val _$started = System.nanoTime;
  val _$result: MatchedSet[T] = {
    val W = puzzle.size;
    var matches = {
      <synthetic> val x$1 = scala.Tuple3(puzzle(x)(y), x, y);
      Nil.$colon$colon(x$1)
    };
    if (x.$less(W))
      {
        val H = puzzle(x).size;
        var current = puzzle(x)(y);
        if (right)
          {
            var nx = x.$plus(1);
            while$1(){
              if (nx.$less(W).$amp$amp(y.$less(puzzle(nx).size)).$amp$amp(current.matchTo(puzzle(nx)(y))).$amp$amp(exception(current).unary_$bang))
                {
                  {
                    matches.$colon$colon$eq(puzzle(nx)(y), nx, y);
                    current = puzzle(nx)(y);
                    nx.$plus$eq(1)
                  };
                  while$1()
                }
              else
                ()
            }
          }
        else
          {
            var ny = y.$plus(1);
            while$2(){
              if (ny.$less(H).$amp$amp(current.matchTo(puzzle(x)(ny))).$amp$amp(exception(current).unary_$bang))
                {
                  {
                    matches.$colon$colon$eq(puzzle(x)(ny), x, ny);
                    current = puzzle(x)(ny);
                    ny.$plus$eq(1)
                  };
                  while$2()
                }
              else
                ()
            }
          }
      }
    else
      ();
    matches
  };
  val _$finished = System.nanoTime;
  scala.Predef.println("(GMatch3,scanIndexedWithException)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def segment[T >: _root_.scala.Nothing <: _root_.scala.Any](line: List[T])(divider: _root_.scala.Function1[T, Boolean]): List[List[T]] = {
  def rec(seq: List[T], processing: List[T]): List[List[T]] = seq match {
    case Nil => {
      <synthetic> val x$2 = processing;
      Nil.$colon$colon(x$2)
    }
    case $colon$colon((head @ _), (tail @ _)) => if (divider(head))
      rec(tail, {
        <synthetic> val x$3 = head;
        processing.$colon$colon(x$3)
      })
    else
      {
        <synthetic> val x$5 = processing;
        rec(tail, {
  <synthetic> val x$4 = head;
  Nil.$colon$colon(x$4)
}).$colon$colon(x$5)
      }
  };
  rec(line, Nil)
}
after
def segment[T >: _root_.scala.Nothing <: _root_.scala.Any](line: List[T])(divider: _root_.scala.Function1[T, Boolean]): List[List[T]] = {
  val _$started = System.nanoTime;
  val _$result: List[List[T]] = {
    def rec(seq: List[T], processing: List[T]): List[List[T]] = seq match {
      case Nil => {
        <synthetic> val x$2 = processing;
        Nil.$colon$colon(x$2)
      }
      case $colon$colon((head @ _), (tail @ _)) => if (divider(head))
        rec(tail, {
          <synthetic> val x$3 = head;
          processing.$colon$colon(x$3)
        })
      else
        {
          <synthetic> val x$5 = processing;
          rec(tail, {
  <synthetic> val x$4 = head;
  Nil.$colon$colon(x$4)
}).$colon$colon(x$5)
        }
    };
    rec(line, Nil)
  };
  val _$finished = System.nanoTime;
  scala.Predef.println("(GMatch3,segment)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def segment2[T >: _root_.scala.Nothing <: _root_.scala.Any](line: List[T])(filter: _root_.scala.Function2[T, T, Boolean]): List[List[T]] = {
  @new tailrec() def rec(seq: List[T], buffer: List[T], result: List[List[T]]): List[List[T]] = seq match {
    case Nil => {
      <synthetic> val x$6 = buffer;
      result.$colon$colon(x$6)
    }
    case $colon$colon((head @ _), Nil) => {
      <synthetic> val x$8 = {
        <synthetic> val x$7 = head;
        buffer.$colon$colon(x$7)
      };
      result.$colon$colon(x$8)
    }
    case $colon$colon((first @ _), $colon$colon((second @ _), (tail @ _))) => if (filter(first, second))
      rec({
        <synthetic> val x$9 = second;
        tail.$colon$colon(x$9)
      }, {
        <synthetic> val x$10 = first;
        buffer.$colon$colon(x$10)
      }, result)
    else
      rec({
        <synthetic> val x$11 = second;
        tail.$colon$colon(x$11)
      }, Nil, {
        <synthetic> val x$13 = {
          <synthetic> val x$12 = first;
          buffer.$colon$colon(x$12)
        };
        result.$colon$colon(x$13)
      })
  };
  rec(line, Nil, Nil)
}
after
def segment2[T >: _root_.scala.Nothing <: _root_.scala.Any](line: List[T])(filter: _root_.scala.Function2[T, T, Boolean]): List[List[T]] = {
  val _$started = System.nanoTime;
  val _$result: List[List[T]] = {
    @new tailrec() def rec(seq: List[T], buffer: List[T], result: List[List[T]]): List[List[T]] = seq match {
      case Nil => {
        <synthetic> val x$6 = buffer;
        result.$colon$colon(x$6)
      }
      case $colon$colon((head @ _), Nil) => {
        <synthetic> val x$8 = {
          <synthetic> val x$7 = head;
          buffer.$colon$colon(x$7)
        };
        result.$colon$colon(x$8)
      }
      case $colon$colon((first @ _), $colon$colon((second @ _), (tail @ _))) => if (filter(first, second))
        rec({
          <synthetic> val x$9 = second;
          tail.$colon$colon(x$9)
        }, {
          <synthetic> val x$10 = first;
          buffer.$colon$colon(x$10)
        }, result)
      else
        rec({
          <synthetic> val x$11 = second;
          tail.$colon$colon(x$11)
        }, Nil, {
          <synthetic> val x$13 = {
            <synthetic> val x$12 = first;
            buffer.$colon$colon(x$12)
          };
          result.$colon$colon(x$13)
        })
    };
    rec(line, Nil, Nil)
  };
  val _$finished = System.nanoTime;
  scala.Predef.println("(GMatch3,segment2)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def verticalLine[T >: _root_.scala.Nothing <: _root_.scala.Any](puzzle: IndexedSeq[IndexedSeq[T]])(x: Int)(y: Int)(height: Int): List[T] = {
  val W = puzzle.size;
  var result = List.empty[T];
  if (x.$less(W))
    {
      val row = puzzle(x);
      val H = row.size;
      var ny = y;
      while$3(){
        if (ny.$less(height))
          {
            {
              if (ny.$less(H))
                result.$colon$colon$eq(row(ny))
              else
                result.$colon$colon$eq(null.asInstanceOf[T]);
              ny.$plus$eq(1)
            };
            while$3()
          }
        else
          ()
      }
    }
  else
    {
      var ny = y;
      while$4(){
        if (ny.$less(height))
          {
            {
              result.$colon$colon$eq(null.asInstanceOf[T]);
              ny.$plus$eq(1)
            };
            while$4()
          }
        else
          ()
      }
    };
  result
}
after
def verticalLine[T >: _root_.scala.Nothing <: _root_.scala.Any](puzzle: IndexedSeq[IndexedSeq[T]])(x: Int)(y: Int)(height: Int): List[T] = {
  val _$started = System.nanoTime;
  val _$result: List[T] = {
    val W = puzzle.size;
    var result = List.empty[T];
    if (x.$less(W))
      {
        val row = puzzle(x);
        val H = row.size;
        var ny = y;
        while$3(){
          if (ny.$less(height))
            {
              {
                if (ny.$less(H))
                  result.$colon$colon$eq(row(ny))
                else
                  result.$colon$colon$eq(null.asInstanceOf[T]);
                ny.$plus$eq(1)
              };
              while$3()
            }
          else
            ()
        }
      }
    else
      {
        var ny = y;
        while$4(){
          if (ny.$less(height))
            {
              {
                result.$colon$colon$eq(null.asInstanceOf[T]);
                ny.$plus$eq(1)
              };
              while$4()
            }
          else
            ()
        }
      };
    result
  };
  val _$finished = System.nanoTime;
  scala.Predef.println("(GMatch3,verticalLine)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def horizontalLine[T >: _root_.scala.Nothing <: _root_.scala.Any](puzzle: IndexedSeq[IndexedSeq[T]])(x: Int)(y: Int)(width: Int): List[T] = {
  val W = puzzle.size;
  var result = List.empty[T];
  var nx = x;
  while$5(){
    if (nx.$less(width))
      {
        {
          if (nx.$less(W))
            {
              val row = puzzle(nx);
              val H = row.size;
              if (y.$less(H))
                result.$colon$colon$eq(row(y))
              else
                result.$colon$colon$eq(null.asInstanceOf[T])
            }
          else
            result.$colon$colon$eq(null.asInstanceOf[T]);
          nx.$plus$eq(1)
        };
        while$5()
      }
    else
      ()
  };
  result
}
after
def horizontalLine[T >: _root_.scala.Nothing <: _root_.scala.Any](puzzle: IndexedSeq[IndexedSeq[T]])(x: Int)(y: Int)(width: Int): List[T] = {
  val _$started = System.nanoTime;
  val _$result: List[T] = {
    val W = puzzle.size;
    var result = List.empty[T];
    var nx = x;
    while$5(){
      if (nx.$less(width))
        {
          {
            if (nx.$less(W))
              {
                val row = puzzle(nx);
                val H = row.size;
                if (y.$less(H))
                  result.$colon$colon$eq(row(y))
                else
                  result.$colon$colon$eq(null.asInstanceOf[T])
              }
            else
              result.$colon$colon$eq(null.asInstanceOf[T]);
            nx.$plus$eq(1)
          };
          while$5()
        }
      else
        ()
    };
    result
  };
  val _$finished = System.nanoTime;
  scala.Predef.println("(GMatch3,horizontalLine)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def allLine[T >: _root_.scala.Nothing <: _root_.scala.Any](puzzle: IndexedSeq[IndexedSeq[T]])(width: Int)(height: Int): List[List[T]] = {
  var result: List[List[T]] = Nil;
  var x = 0;
  while$6(){
    if (x.$less(width))
      {
        {
          result.$colon$colon$eq(verticalLine(puzzle)(x)(0)(height));
          x.$plus$eq(1)
        };
        while$6()
      }
    else
      ()
  };
  var y = 0;
  while$7(){
    if (y.$less(height))
      {
        {
          result.$colon$colon$eq(horizontalLine(puzzle)(0)(y)(width));
          y.$plus$eq(1)
        };
        while$7()
      }
    else
      ()
  };
  result
}
after
def allLine[T >: _root_.scala.Nothing <: _root_.scala.Any](puzzle: IndexedSeq[IndexedSeq[T]])(width: Int)(height: Int): List[List[T]] = {
  val _$started = System.nanoTime;
  val _$result: List[List[T]] = {
    var result: List[List[T]] = Nil;
    var x = 0;
    while$6(){
      if (x.$less(width))
        {
          {
            result.$colon$colon$eq(verticalLine(puzzle)(x)(0)(height));
            x.$plus$eq(1)
          };
          while$6()
        }
      else
        ()
    };
    var y = 0;
    while$7(){
      if (y.$less(height))
        {
          {
            result.$colon$colon$eq(horizontalLine(puzzle)(0)(y)(width));
            y.$plus$eq(1)
          };
          while$7()
        }
      else
        ()
    };
    result
  };
  val _$finished = System.nanoTime;
  scala.Predef.println("(GMatch3,allLine)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def scanAll[T >: _root_.scala.Nothing <: _root_.scala.Any](puzzle: IndexedSeq[IndexedSeq[T]])(width: Int)(height: Int)(filter: _root_.scala.Function2[T, T, Boolean]): Seq[Seq[T]] = allLine(puzzle)(width)(height).flatMap(((x$14) => segment2(x$14)(filter)))
after
def scanAll[T >: _root_.scala.Nothing <: _root_.scala.Any](puzzle: IndexedSeq[IndexedSeq[T]])(width: Int)(height: Int)(filter: _root_.scala.Function2[T, T, Boolean]): Seq[Seq[T]] = {
  val _$started = System.nanoTime;
  val _$result: Seq[Seq[T]] = allLine(puzzle)(width)(height).flatMap(((x$14) => segment2(x$14)(filter)));
  val _$finished = System.nanoTime;
  scala.Predef.println("(GMatch3,scanAll)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def scanBy[T >: _root_.scala.Nothing <: Panel](puzzle: Puzzle[T])(scanner: _root_.scala.Function1[Int, _root_.scala.Function1[Int, _root_.scala.Function1[Boolean, MatchedSet[T]]]]): Seq[MatchedSet[T]] = {
  val result = mutable.ArrayBuffer[MatchedSet[T]]();
  var x = 0;
  val width = puzzle.size;
  while$11(){
    if (x.$less(width))
      {
        {
          var y = 0;
          val height = puzzle(x).size;
          while$10(){
            if (y.$less(height))
              {
                {
                  var vertical = false;
                  var flipCount = 0;
                  while$9(){
                    if (flipCount.$less(2))
                      {
                        {
                          val set = scanner(x)(y)(vertical);
                          var i = 0;
                          val l = result.length;
                          var noNeedToAdd = false;
                          while$8(){
                            if (i.$less(l))
                              {
                                {
                                  val current = result(i);
                                  val inc = included(result(i), set);
                                  noNeedToAdd.$bar$eq(inc);
                                  val needReplace = current.size.$less(set.size).$amp$amp(inc);
                                  if (needReplace)
                                    result.update(i, set)
                                  else
                                    ();
                                  i.$plus$eq(1)
                                };
                                while$8()
                              }
                            else
                              ()
                          };
                          if (noNeedToAdd.unary_$bang.$amp$amp(set.$bang$eq(Nil)))
                            result.$plus$eq(set)
                          else
                            ();
                          vertical = vertical.unary_$bang;
                          flipCount.$plus$eq(1)
                        };
                        while$9()
                      }
                    else
                      ()
                  };
                  y.$plus$eq(1)
                };
                while$10()
              }
            else
              ()
          };
          x.$plus$eq(1)
        };
        while$11()
      }
    else
      ()
  };
  result
}
after
def scanBy[T >: _root_.scala.Nothing <: Panel](puzzle: Puzzle[T])(scanner: _root_.scala.Function1[Int, _root_.scala.Function1[Int, _root_.scala.Function1[Boolean, MatchedSet[T]]]]): Seq[MatchedSet[T]] = {
  val _$started = System.nanoTime;
  val _$result: Seq[MatchedSet[T]] = {
    val result = mutable.ArrayBuffer[MatchedSet[T]]();
    var x = 0;
    val width = puzzle.size;
    while$11(){
      if (x.$less(width))
        {
          {
            var y = 0;
            val height = puzzle(x).size;
            while$10(){
              if (y.$less(height))
                {
                  {
                    var vertical = false;
                    var flipCount = 0;
                    while$9(){
                      if (flipCount.$less(2))
                        {
                          {
                            val set = scanner(x)(y)(vertical);
                            var i = 0;
                            val l = result.length;
                            var noNeedToAdd = false;
                            while$8(){
                              if (i.$less(l))
                                {
                                  {
                                    val current = result(i);
                                    val inc = included(result(i), set);
                                    noNeedToAdd.$bar$eq(inc);
                                    val needReplace = current.size.$less(set.size).$amp$amp(inc);
                                    if (needReplace)
                                      result.update(i, set)
                                    else
                                      ();
                                    i.$plus$eq(1)
                                  };
                                  while$8()
                                }
                              else
                                ()
                            };
                            if (noNeedToAdd.unary_$bang.$amp$amp(set.$bang$eq(Nil)))
                              result.$plus$eq(set)
                            else
                              ();
                            vertical = vertical.unary_$bang;
                            flipCount.$plus$eq(1)
                          };
                          while$9()
                        }
                      else
                        ()
                    };
                    y.$plus$eq(1)
                  };
                  while$10()
                }
              else
                ()
            };
            x.$plus$eq(1)
          };
          while$11()
        }
      else
        ()
    };
    result
  };
  val _$finished = System.nanoTime;
  scala.Predef.println("(GMatch3,scanBy)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def createFilling[T >: _root_.scala.Nothing <: Panel](puzzle: Puzzle[T])(seed: _root_.scala.Function0[T], col: Int): Events[T] = 0.until(puzzle.size).flatMap(((x) => puzzle(x).size.until(col).map(((y) => scala.Tuple3(seed(), x, y)))))
after
def createFilling[T >: _root_.scala.Nothing <: Panel](puzzle: Puzzle[T])(seed: _root_.scala.Function0[T], col: Int): Events[T] = {
  val _$started = System.nanoTime;
  val _$result: Events[T] = 0.until(puzzle.size).flatMap(((x) => puzzle(x).size.until(col).map(((y) => scala.Tuple3(seed(), x, y)))));
  val _$finished = System.nanoTime;
  scala.Predef.println("(GMatch3,createFilling)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def createFillingPuzzle[T >: _root_.scala.Nothing <: Panel](puzzle: Puzzle[T])(seed: _root_.scala.Function0[T], col: Int): Puzzle[T] = 0.until(puzzle.size).map(((x) => puzzle(x).size.until(col).map(((y) => seed()))))
after
def createFillingPuzzle[T >: _root_.scala.Nothing <: Panel](puzzle: Puzzle[T])(seed: _root_.scala.Function0[T], col: Int): Puzzle[T] = {
  val _$started = System.nanoTime;
  val _$result: Puzzle[T] = 0.until(puzzle.size).map(((x) => puzzle(x).size.until(col).map(((y) => seed()))));
  val _$finished = System.nanoTime;
  scala.Predef.println("(GMatch3,createFillingPuzzle)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def scanAllWithException[T >: _root_.scala.Nothing <: Panel](puzzle: Puzzle[T])(matchLength: Int)(exception: _root_.scala.Function1[T, Boolean]) = scanBy(puzzle)(((x) => ((y) => ((right) => scanIndexedWithException(puzzle)(x)(y)(exception)(right))))).filter(((x$15) => x$15.length.$greater$eq(matchLength)))
after
def scanAllWithException[T >: _root_.scala.Nothing <: Panel](puzzle: Puzzle[T])(matchLength: Int)(exception: _root_.scala.Function1[T, Boolean]) = {
  val _$started = System.nanoTime;
  val _$result = scanBy(puzzle)(((x) => ((y) => ((right) => scanIndexedWithException(puzzle)(x)(y)(exception)(right))))).filter(((x$15) => x$15.length.$greater$eq(matchLength)));
  val _$finished = System.nanoTime;
  scala.Predef.println("(GMatch3,scanAllWithException)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def calcNextIndices[T >: _root_.scala.Nothing <: Panel](left: Puzzle[T])(floatings: Puzzle[T]): Seq[scala.Tuple2[T, scala.Tuple2[Int, Int]]] = {
  val appended = left.append(floatings);
  floatings.flatten.map(((p) => scala.Tuple2(p, appended.indexOfPanelUnhandled(p))))
}
after
def calcNextIndices[T >: _root_.scala.Nothing <: Panel](left: Puzzle[T])(floatings: Puzzle[T]): Seq[scala.Tuple2[T, scala.Tuple2[Int, Int]]] = {
  val _$started = System.nanoTime;
  val _$result: Seq[scala.Tuple2[T, scala.Tuple2[Int, Int]]] = {
    val appended = left.append(floatings);
    floatings.flatten.map(((p) => scala.Tuple2(p, appended.indexOfPanelUnhandled(p))))
  };
  val _$finished = System.nanoTime;
  scala.Predef.println("(GMatch3,calcNextIndices)".$plus(_$finished.$minus(_$started)));
  _$result
}
result:
object GMatch3 extends scala.AnyRef {
  def <init>() = {
    super.<init>();
    ()
  };
  import scala.util.control.Exception._;
  abstract trait Panel extends scala.AnyRef {
    def matchTo(panel: Panel): Boolean
  };
  type Event[T >: _root_.scala.Nothing <: Panel] = scala.Tuple3[T, Int, Int];
  type MatchedSet[T >: _root_.scala.Nothing <: Panel] = Seq[Event[T]];
  type Events[T >: _root_.scala.Nothing <: Panel] = Seq[Event[T]];
  type Puzzle[T >: _root_.scala.Nothing <: Panel] = IndexedSeq[IndexedSeq[T]];
  abstract trait IndexedSeqGen extends scala.AnyRef {
    def convert[T >: _root_.scala.Nothing <: _root_.scala.Any](seq: Seq[T]): IndexedSeq[T]
  };
  def initialize[T >: _root_.scala.Nothing <: Panel](width: Int)(c: IndexedSeqGen): Puzzle[T] = {
    val _$started = System.nanoTime;
    val _$result: Puzzle[T] = c.convert(0.until(width).toList.as(c.convert(Nil)));
    val _$finished = System.nanoTime;
    scala.Predef.println("(GMatch3,initialize)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def included[T >: _root_.scala.Nothing <: Panel](sets: MatchedSet[T], target: MatchedSet[T]): Boolean = {
    val _$started = System.nanoTime;
    val _$result: Boolean = target.forall(sets.contains);
    val _$finished = System.nanoTime;
    scala.Predef.println("(GMatch3,included)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def toIndexMap[T >: _root_.scala.Nothing <: _root_.scala.Any](puzzle: IndexedSeq[IndexedSeq[T]]): Map[T, scala.Tuple2[Int, Int]] = {
    val _$started = System.nanoTime;
    val _$result: Map[T, scala.Tuple2[Int, Int]] = puzzle.zipWithIndex.flatMap(<empty> match {
  case scala.Tuple2((row @ _), (x @ _)) => row.zipWithIndex.map(<empty> match {
    case scala.Tuple2((p @ _), (y @ _)) => p.$minus$greater(x, y)
  })
}).toMap;
    val _$finished = System.nanoTime;
    scala.Predef.println("(GMatch3,toIndexMap)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def scanIndexedWithException[T >: _root_.scala.Nothing <: Panel](puzzle: Puzzle[T])(x: Int)(y: Int)(exception: _root_.scala.Function1[T, Boolean])(right: Boolean): MatchedSet[T] = {
    val _$started = System.nanoTime;
    val _$result: MatchedSet[T] = {
      val W = puzzle.size;
      var matches = {
        <synthetic> val x$1 = scala.Tuple3(puzzle(x)(y), x, y);
        Nil.$colon$colon(x$1)
      };
      if (x.$less(W))
        {
          val H = puzzle(x).size;
          var current = puzzle(x)(y);
          if (right)
            {
              var nx = x.$plus(1);
              while$1(){
                if (nx.$less(W).$amp$amp(y.$less(puzzle(nx).size)).$amp$amp(current.matchTo(puzzle(nx)(y))).$amp$amp(exception(current).unary_$bang))
                  {
                    {
                      matches.$colon$colon$eq(puzzle(nx)(y), nx, y);
                      current = puzzle(nx)(y);
                      nx.$plus$eq(1)
                    };
                    while$1()
                  }
                else
                  ()
              }
            }
          else
            {
              var ny = y.$plus(1);
              while$2(){
                if (ny.$less(H).$amp$amp(current.matchTo(puzzle(x)(ny))).$amp$amp(exception(current).unary_$bang))
                  {
                    {
                      matches.$colon$colon$eq(puzzle(x)(ny), x, ny);
                      current = puzzle(x)(ny);
                      ny.$plus$eq(1)
                    };
                    while$2()
                  }
                else
                  ()
              }
            }
        }
      else
        ();
      matches
    };
    val _$finished = System.nanoTime;
    scala.Predef.println("(GMatch3,scanIndexedWithException)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def segment[T >: _root_.scala.Nothing <: _root_.scala.Any](line: List[T])(divider: _root_.scala.Function1[T, Boolean]): List[List[T]] = {
    val _$started = System.nanoTime;
    val _$result: List[List[T]] = {
      def rec(seq: List[T], processing: List[T]): List[List[T]] = seq match {
        case Nil => {
          <synthetic> val x$2 = processing;
          Nil.$colon$colon(x$2)
        }
        case $colon$colon((head @ _), (tail @ _)) => if (divider(head))
          rec(tail, {
            <synthetic> val x$3 = head;
            processing.$colon$colon(x$3)
          })
        else
          {
            <synthetic> val x$5 = processing;
            rec(tail, {
  <synthetic> val x$4 = head;
  Nil.$colon$colon(x$4)
}).$colon$colon(x$5)
          }
      };
      rec(line, Nil)
    };
    val _$finished = System.nanoTime;
    scala.Predef.println("(GMatch3,segment)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def segment2[T >: _root_.scala.Nothing <: _root_.scala.Any](line: List[T])(filter: _root_.scala.Function2[T, T, Boolean]): List[List[T]] = {
    val _$started = System.nanoTime;
    val _$result: List[List[T]] = {
      @new tailrec() def rec(seq: List[T], buffer: List[T], result: List[List[T]]): List[List[T]] = seq match {
        case Nil => {
          <synthetic> val x$6 = buffer;
          result.$colon$colon(x$6)
        }
        case $colon$colon((head @ _), Nil) => {
          <synthetic> val x$8 = {
            <synthetic> val x$7 = head;
            buffer.$colon$colon(x$7)
          };
          result.$colon$colon(x$8)
        }
        case $colon$colon((first @ _), $colon$colon((second @ _), (tail @ _))) => if (filter(first, second))
          rec({
            <synthetic> val x$9 = second;
            tail.$colon$colon(x$9)
          }, {
            <synthetic> val x$10 = first;
            buffer.$colon$colon(x$10)
          }, result)
        else
          rec({
            <synthetic> val x$11 = second;
            tail.$colon$colon(x$11)
          }, Nil, {
            <synthetic> val x$13 = {
              <synthetic> val x$12 = first;
              buffer.$colon$colon(x$12)
            };
            result.$colon$colon(x$13)
          })
      };
      rec(line, Nil, Nil)
    };
    val _$finished = System.nanoTime;
    scala.Predef.println("(GMatch3,segment2)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def verticalLine[T >: _root_.scala.Nothing <: _root_.scala.Any](puzzle: IndexedSeq[IndexedSeq[T]])(x: Int)(y: Int)(height: Int): List[T] = {
    val _$started = System.nanoTime;
    val _$result: List[T] = {
      val W = puzzle.size;
      var result = List.empty[T];
      if (x.$less(W))
        {
          val row = puzzle(x);
          val H = row.size;
          var ny = y;
          while$3(){
            if (ny.$less(height))
              {
                {
                  if (ny.$less(H))
                    result.$colon$colon$eq(row(ny))
                  else
                    result.$colon$colon$eq(null.asInstanceOf[T]);
                  ny.$plus$eq(1)
                };
                while$3()
              }
            else
              ()
          }
        }
      else
        {
          var ny = y;
          while$4(){
            if (ny.$less(height))
              {
                {
                  result.$colon$colon$eq(null.asInstanceOf[T]);
                  ny.$plus$eq(1)
                };
                while$4()
              }
            else
              ()
          }
        };
      result
    };
    val _$finished = System.nanoTime;
    scala.Predef.println("(GMatch3,verticalLine)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def horizontalLine[T >: _root_.scala.Nothing <: _root_.scala.Any](puzzle: IndexedSeq[IndexedSeq[T]])(x: Int)(y: Int)(width: Int): List[T] = {
    val _$started = System.nanoTime;
    val _$result: List[T] = {
      val W = puzzle.size;
      var result = List.empty[T];
      var nx = x;
      while$5(){
        if (nx.$less(width))
          {
            {
              if (nx.$less(W))
                {
                  val row = puzzle(nx);
                  val H = row.size;
                  if (y.$less(H))
                    result.$colon$colon$eq(row(y))
                  else
                    result.$colon$colon$eq(null.asInstanceOf[T])
                }
              else
                result.$colon$colon$eq(null.asInstanceOf[T]);
              nx.$plus$eq(1)
            };
            while$5()
          }
        else
          ()
      };
      result
    };
    val _$finished = System.nanoTime;
    scala.Predef.println("(GMatch3,horizontalLine)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def allLine[T >: _root_.scala.Nothing <: _root_.scala.Any](puzzle: IndexedSeq[IndexedSeq[T]])(width: Int)(height: Int): List[List[T]] = {
    val _$started = System.nanoTime;
    val _$result: List[List[T]] = {
      var result: List[List[T]] = Nil;
      var x = 0;
      while$6(){
        if (x.$less(width))
          {
            {
              result.$colon$colon$eq(verticalLine(puzzle)(x)(0)(height));
              x.$plus$eq(1)
            };
            while$6()
          }
        else
          ()
      };
      var y = 0;
      while$7(){
        if (y.$less(height))
          {
            {
              result.$colon$colon$eq(horizontalLine(puzzle)(0)(y)(width));
              y.$plus$eq(1)
            };
            while$7()
          }
        else
          ()
      };
      result
    };
    val _$finished = System.nanoTime;
    scala.Predef.println("(GMatch3,allLine)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def scanAll[T >: _root_.scala.Nothing <: _root_.scala.Any](puzzle: IndexedSeq[IndexedSeq[T]])(width: Int)(height: Int)(filter: _root_.scala.Function2[T, T, Boolean]): Seq[Seq[T]] = {
    val _$started = System.nanoTime;
    val _$result: Seq[Seq[T]] = allLine(puzzle)(width)(height).flatMap(((x$14) => segment2(x$14)(filter)));
    val _$finished = System.nanoTime;
    scala.Predef.println("(GMatch3,scanAll)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def scanBy[T >: _root_.scala.Nothing <: Panel](puzzle: Puzzle[T])(scanner: _root_.scala.Function1[Int, _root_.scala.Function1[Int, _root_.scala.Function1[Boolean, MatchedSet[T]]]]): Seq[MatchedSet[T]] = {
    val _$started = System.nanoTime;
    val _$result: Seq[MatchedSet[T]] = {
      val result = mutable.ArrayBuffer[MatchedSet[T]]();
      var x = 0;
      val width = puzzle.size;
      while$11(){
        if (x.$less(width))
          {
            {
              var y = 0;
              val height = puzzle(x).size;
              while$10(){
                if (y.$less(height))
                  {
                    {
                      var vertical = false;
                      var flipCount = 0;
                      while$9(){
                        if (flipCount.$less(2))
                          {
                            {
                              val set = scanner(x)(y)(vertical);
                              var i = 0;
                              val l = result.length;
                              var noNeedToAdd = false;
                              while$8(){
                                if (i.$less(l))
                                  {
                                    {
                                      val current = result(i);
                                      val inc = included(result(i), set);
                                      noNeedToAdd.$bar$eq(inc);
                                      val needReplace = current.size.$less(set.size).$amp$amp(inc);
                                      if (needReplace)
                                        result.update(i, set)
                                      else
                                        ();
                                      i.$plus$eq(1)
                                    };
                                    while$8()
                                  }
                                else
                                  ()
                              };
                              if (noNeedToAdd.unary_$bang.$amp$amp(set.$bang$eq(Nil)))
                                result.$plus$eq(set)
                              else
                                ();
                              vertical = vertical.unary_$bang;
                              flipCount.$plus$eq(1)
                            };
                            while$9()
                          }
                        else
                          ()
                      };
                      y.$plus$eq(1)
                    };
                    while$10()
                  }
                else
                  ()
              };
              x.$plus$eq(1)
            };
            while$11()
          }
        else
          ()
      };
      result
    };
    val _$finished = System.nanoTime;
    scala.Predef.println("(GMatch3,scanBy)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def createFilling[T >: _root_.scala.Nothing <: Panel](puzzle: Puzzle[T])(seed: _root_.scala.Function0[T], col: Int): Events[T] = {
    val _$started = System.nanoTime;
    val _$result: Events[T] = 0.until(puzzle.size).flatMap(((x) => puzzle(x).size.until(col).map(((y) => scala.Tuple3(seed(), x, y)))));
    val _$finished = System.nanoTime;
    scala.Predef.println("(GMatch3,createFilling)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def createFillingPuzzle[T >: _root_.scala.Nothing <: Panel](puzzle: Puzzle[T])(seed: _root_.scala.Function0[T], col: Int): Puzzle[T] = {
    val _$started = System.nanoTime;
    val _$result: Puzzle[T] = 0.until(puzzle.size).map(((x) => puzzle(x).size.until(col).map(((y) => seed()))));
    val _$finished = System.nanoTime;
    scala.Predef.println("(GMatch3,createFillingPuzzle)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def scanAllWithException[T >: _root_.scala.Nothing <: Panel](puzzle: Puzzle[T])(matchLength: Int)(exception: _root_.scala.Function1[T, Boolean]) = {
    val _$started = System.nanoTime;
    val _$result = scanBy(puzzle)(((x) => ((y) => ((right) => scanIndexedWithException(puzzle)(x)(y)(exception)(right))))).filter(((x$15) => x$15.length.$greater$eq(matchLength)));
    val _$finished = System.nanoTime;
    scala.Predef.println("(GMatch3,scanAllWithException)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  @new hello() implicit class PuzzleImpl[T >: _root_.scala.Nothing <: Panel] extends AnyVal {
    <paramaccessor> val puzzle: Puzzle[T] = _;
    def <init>(puzzle: Puzzle[T]) = {
      super.<init>();
      ()
    };
    def text: String = puzzle.map(((col) => col.map(((x$16) => x$16.toString)).fold("")(((x$17, x$18) => x$17.$plus(",").$plus(x$18))))).fold("")(((x$19, x$20) => x$19.$plus("\n").$plus(x$20)));
    def toIndexMap = GMatch3.toIndexMap(puzzle);
    def scanWithException = (GMatch3.scanIndexedWithException(puzzle): (() => <empty>));
    def scan(x: Int)(y: Int)(right: Boolean): MatchedSet[T] = {
      val W = puzzle.size;
      val H = puzzle.head.size;
      val panel = puzzle(x)(y);
      var matching = {
        <synthetic> val x$21 = scala.Tuple3(puzzle(x)(y), x, y);
        Nil.$colon$colon(x$21)
      };
      if (right)
        {
          var nx = x.$plus(1);
          while$12(){
            if (nx.$less(W).$amp$amp(y.$less(puzzle(nx).size)).$amp$amp(panel.matchTo(puzzle(nx)(y))))
              {
                {
                  matching.$colon$colon$eq(puzzle(nx)(y), nx, y);
                  nx.$plus$eq(1)
                };
                while$12()
              }
            else
              ()
          }
        }
      else
        {
          var ny = y.$plus(1);
          val size = puzzle(x).size;
          while$13(){
            if (ny.$less(H).$amp$amp(ny.$less(size)).$amp$amp(panel.matchTo(puzzle(x)(ny))))
              {
                {
                  matching.$colon$colon$eq(puzzle(x)(ny), x, ny);
                  ny.$plus$eq(1)
                };
                while$13()
              }
            else
              ()
          }
        };
      if (matching.size.$greater$eq(3))
        matching
      else
        Nil
    };
    def createFilling = (GMatch3.createFilling(puzzle): (() => <empty>));
    def createFillingPuzzle = (GMatch3.createFillingPuzzle(puzzle): (() => <empty>));
    def fill(filling: Events[T]): Puzzle[T] = filling.foldLeft(puzzle)(<empty> match {
      case scala.Tuple2((p @ _), scala.Tuple3((panel @ _), (x @ _), _)) => p.updated(x, p(x).$colon$plus(panel))
    });
    def removePanels(panels: Seq[T]): Puzzle[T] = puzzle.map(((x$22) => x$22.filterNot(panels.contains)));
    def remove(panels: Seq[T]): scala.Tuple2[Puzzle[T], Puzzle[T]] = {
      val f = ((p: Panel) => panels.contains(p));
      puzzle.unzip(((col) => col.span(((x$23) => f(x$23).unary_$bang)) match {
        case scala.Tuple2((left @ _), (float @ _)) => scala.Tuple2(left, float.filterNot(f))
      }))
    };
    def createNoMatchFilling(seed: _root_.scala.Function0[T], col: Int): Events[T] = {
      val contains = (puzzle.flatten.contains: (() => <empty>));
      @new tailrec() def fillWithStatics(added: Puzzle[T]): Puzzle[T] = added.createFilling(seed, col) match {
        case (filling @ _) => added.fill(filling) match {
          case (filled @ _) => filled.scanAll match {
            case (matches @ _) if matches.flatten.map(((x$24) => x$24._1)).forall(contains) => filled
            case (matches @ _) => fillWithStatics(added.removePanels(filling.filterNot(puzzle.flatten.contains).map(((x$25) => x$25._1))))
          }
        }
      };
      fillWithStatics(puzzle).zipWithIndex.withFilter(((check$ifrefutable$1) => check$ifrefutable$1: @scala.unchecked match {
  case scala.Tuple2((col @ _), (x @ _)) => true
  case _ => false
})).flatMap(((x$28) => x$28: @scala.unchecked match {
        case scala.Tuple2((col @ _), (x @ _)) => col.zipWithIndex.withFilter(((check$ifrefutable$2) => check$ifrefutable$2: @scala.unchecked match {
  case scala.Tuple2((panel @ _), (y @ _)) => true
  case _ => false
})).withFilter(((x$26) => x$26: @scala.unchecked match {
  case scala.Tuple2((panel @ _), (y @ _)) => puzzle(x).contains(panel).unary_$bang
})).map(((x$27) => x$27: @scala.unchecked match {
          case scala.Tuple2((panel @ _), (y @ _)) => scala.Tuple3(panel, x, y)
        }))
      }))
    };
    private def fillWithoutMatches(seed: _root_.scala.Function0[T], size: Int): Puzzle[T] = {
      @new tailrec() def recFWM(p: Puzzle[T]): Puzzle[T] = p.scanAll match {
        case Seq() => p
        case (matches @ _) => recFWM(removePanels(matches.flatten.distinct.map(<empty> match {
          case scala.Tuple3((pp @ _), (x @ _), (y @ _)) => pp
        })))
      };
      recFWM(puzzle)
    };
    def scanBy = (GMatch3.scanBy(puzzle): (() => <empty>));
    def scanAllWithException(matchLength: Int)(exception: _root_.scala.Function1[T, Boolean]) = scanBy(((x) => ((y) => ((right) => scanWithException(x)(y)(exception)(right))))).filter(((x$29) => x$29.size.$greater$eq(matchLength)));
    def scanAll = scanBy(scan);
    def indexOfPanel(panel: T): Either[Throwable, scala.Tuple2[Int, Int]] = allCatch.either({
      val row = puzzle.filter(((x$30) => x$30.contains(panel))).head;
      scala.Tuple2(puzzle.indexOf(row), row.indexOf(panel))
    });
    def indexOfPanelOpt(panel: T): Option[scala.Tuple2[Int, Int]] = allCatch.opt({
      val row = puzzle.filter(((x$31) => x$31.contains(panel))).head;
      scala.Tuple2(puzzle.indexOf(row), row.indexOf(panel))
    });
    def indexOfPanelUnhandled(panel: Panel): scala.Tuple2[Int, Int] = {
      val row = puzzle.filter(((x$32) => x$32.contains(panel))).head;
      scala.Tuple2(puzzle.indexOf(row), row.indexOf(panel))
    };
    def swap(ax: Int, ay: Int, bx: Int, by: Int): Puzzle[T] = {
      val a = puzzle(ax)(ay);
      val b = puzzle(bx)(by);
      val puzzle1 = puzzle.updated(ax, puzzle(ax).updated(ay, b));
      val puzzle2 = puzzle1.updated(bx, puzzle1(bx).updated(by, a));
      puzzle2
    };
    def append(p: Puzzle[T]): Puzzle[T] = puzzle.zipWithIndex.map(<empty> match {
      case scala.Tuple2((col @ _), (x @ _)) => col.$plus$plus(p(x))
    })
  };
  def calcNextIndices[T >: _root_.scala.Nothing <: Panel](left: Puzzle[T])(floatings: Puzzle[T]): Seq[scala.Tuple2[T, scala.Tuple2[Int, Int]]] = {
    val _$started = System.nanoTime;
    val _$result: Seq[scala.Tuple2[T, scala.Tuple2[Int, Int]]] = {
      val appended = left.append(floatings);
      floatings.flatten.map(((p) => scala.Tuple2(p, appended.indexOfPanelUnhandled(p))))
    };
    val _$finished = System.nanoTime;
    scala.Predef.println("(GMatch3,calcNextIndices)".$plus(_$finished.$minus(_$started)));
    _$result
  }
}
before
def <init>(puzzle: Puzzle[T]) = {
  super.<init>();
  ()
}
after
def <init>(puzzle: Puzzle[T]) = {
  val _$started = System.nanoTime;
  val _$result = {
    super.<init>();
    ()
  };
  val _$finished = System.nanoTime;
  scala.Predef.println("(PuzzleImpl,<init>)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def text: String = puzzle.map(((col) => col.map(((x$16) => x$16.toString)).fold("")(((x$17, x$18) => x$17.$plus(",").$plus(x$18))))).fold("")(((x$19, x$20) => x$19.$plus("\n").$plus(x$20)))
after
def text: String = {
  val _$started = System.nanoTime;
  val _$result: String = puzzle.map(((col) => col.map(((x$16) => x$16.toString)).fold("")(((x$17, x$18) => x$17.$plus(",").$plus(x$18))))).fold("")(((x$19, x$20) => x$19.$plus("\n").$plus(x$20)));
  val _$finished = System.nanoTime;
  scala.Predef.println("(PuzzleImpl,text)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def toIndexMap = GMatch3.toIndexMap(puzzle)
after
def toIndexMap = {
  val _$started = System.nanoTime;
  val _$result = GMatch3.toIndexMap(puzzle);
  val _$finished = System.nanoTime;
  scala.Predef.println("(PuzzleImpl,toIndexMap)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def scanWithException = (GMatch3.scanIndexedWithException(puzzle): (() => <empty>))
after
def scanWithException = {
  val _$started = System.nanoTime;
  val _$result = (GMatch3.scanIndexedWithException(puzzle): (() => <empty>));
  val _$finished = System.nanoTime;
  scala.Predef.println("(PuzzleImpl,scanWithException)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def scan(x: Int)(y: Int)(right: Boolean): MatchedSet[T] = {
  val W = puzzle.size;
  val H = puzzle.head.size;
  val panel = puzzle(x)(y);
  var matching = {
    <synthetic> val x$21 = scala.Tuple3(puzzle(x)(y), x, y);
    Nil.$colon$colon(x$21)
  };
  if (right)
    {
      var nx = x.$plus(1);
      while$12(){
        if (nx.$less(W).$amp$amp(y.$less(puzzle(nx).size)).$amp$amp(panel.matchTo(puzzle(nx)(y))))
          {
            {
              matching.$colon$colon$eq(puzzle(nx)(y), nx, y);
              nx.$plus$eq(1)
            };
            while$12()
          }
        else
          ()
      }
    }
  else
    {
      var ny = y.$plus(1);
      val size = puzzle(x).size;
      while$13(){
        if (ny.$less(H).$amp$amp(ny.$less(size)).$amp$amp(panel.matchTo(puzzle(x)(ny))))
          {
            {
              matching.$colon$colon$eq(puzzle(x)(ny), x, ny);
              ny.$plus$eq(1)
            };
            while$13()
          }
        else
          ()
      }
    };
  if (matching.size.$greater$eq(3))
    matching
  else
    Nil
}
after
def scan(x: Int)(y: Int)(right: Boolean): MatchedSet[T] = {
  val _$started = System.nanoTime;
  val _$result: MatchedSet[T] = {
    val W = puzzle.size;
    val H = puzzle.head.size;
    val panel = puzzle(x)(y);
    var matching = {
      <synthetic> val x$21 = scala.Tuple3(puzzle(x)(y), x, y);
      Nil.$colon$colon(x$21)
    };
    if (right)
      {
        var nx = x.$plus(1);
        while$12(){
          if (nx.$less(W).$amp$amp(y.$less(puzzle(nx).size)).$amp$amp(panel.matchTo(puzzle(nx)(y))))
            {
              {
                matching.$colon$colon$eq(puzzle(nx)(y), nx, y);
                nx.$plus$eq(1)
              };
              while$12()
            }
          else
            ()
        }
      }
    else
      {
        var ny = y.$plus(1);
        val size = puzzle(x).size;
        while$13(){
          if (ny.$less(H).$amp$amp(ny.$less(size)).$amp$amp(panel.matchTo(puzzle(x)(ny))))
            {
              {
                matching.$colon$colon$eq(puzzle(x)(ny), x, ny);
                ny.$plus$eq(1)
              };
              while$13()
            }
          else
            ()
        }
      };
    if (matching.size.$greater$eq(3))
      matching
    else
      Nil
  };
  val _$finished = System.nanoTime;
  scala.Predef.println("(PuzzleImpl,scan)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def createFilling = (GMatch3.createFilling(puzzle): (() => <empty>))
after
def createFilling = {
  val _$started = System.nanoTime;
  val _$result = (GMatch3.createFilling(puzzle): (() => <empty>));
  val _$finished = System.nanoTime;
  scala.Predef.println("(PuzzleImpl,createFilling)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def createFillingPuzzle = (GMatch3.createFillingPuzzle(puzzle): (() => <empty>))
after
def createFillingPuzzle = {
  val _$started = System.nanoTime;
  val _$result = (GMatch3.createFillingPuzzle(puzzle): (() => <empty>));
  val _$finished = System.nanoTime;
  scala.Predef.println("(PuzzleImpl,createFillingPuzzle)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def fill(filling: Events[T]): Puzzle[T] = filling.foldLeft(puzzle)(<empty> match {
  case scala.Tuple2((p @ _), scala.Tuple3((panel @ _), (x @ _), _)) => p.updated(x, p(x).$colon$plus(panel))
})
after
def fill(filling: Events[T]): Puzzle[T] = {
  val _$started = System.nanoTime;
  val _$result: Puzzle[T] = filling.foldLeft(puzzle)(<empty> match {
    case scala.Tuple2((p @ _), scala.Tuple3((panel @ _), (x @ _), _)) => p.updated(x, p(x).$colon$plus(panel))
  });
  val _$finished = System.nanoTime;
  scala.Predef.println("(PuzzleImpl,fill)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def removePanels(panels: Seq[T]): Puzzle[T] = puzzle.map(((x$22) => x$22.filterNot(panels.contains)))
after
def removePanels(panels: Seq[T]): Puzzle[T] = {
  val _$started = System.nanoTime;
  val _$result: Puzzle[T] = puzzle.map(((x$22) => x$22.filterNot(panels.contains)));
  val _$finished = System.nanoTime;
  scala.Predef.println("(PuzzleImpl,removePanels)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def remove(panels: Seq[T]): scala.Tuple2[Puzzle[T], Puzzle[T]] = {
  val f = ((p: Panel) => panels.contains(p));
  puzzle.unzip(((col) => col.span(((x$23) => f(x$23).unary_$bang)) match {
    case scala.Tuple2((left @ _), (float @ _)) => scala.Tuple2(left, float.filterNot(f))
  }))
}
after
def remove(panels: Seq[T]): scala.Tuple2[Puzzle[T], Puzzle[T]] = {
  val _$started = System.nanoTime;
  val _$result: scala.Tuple2[Puzzle[T], Puzzle[T]] = {
    val f = ((p: Panel) => panels.contains(p));
    puzzle.unzip(((col) => col.span(((x$23) => f(x$23).unary_$bang)) match {
      case scala.Tuple2((left @ _), (float @ _)) => scala.Tuple2(left, float.filterNot(f))
    }))
  };
  val _$finished = System.nanoTime;
  scala.Predef.println("(PuzzleImpl,remove)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def createNoMatchFilling(seed: _root_.scala.Function0[T], col: Int): Events[T] = {
  val contains = (puzzle.flatten.contains: (() => <empty>));
  @new tailrec() def fillWithStatics(added: Puzzle[T]): Puzzle[T] = added.createFilling(seed, col) match {
    case (filling @ _) => added.fill(filling) match {
      case (filled @ _) => filled.scanAll match {
        case (matches @ _) if matches.flatten.map(((x$24) => x$24._1)).forall(contains) => filled
        case (matches @ _) => fillWithStatics(added.removePanels(filling.filterNot(puzzle.flatten.contains).map(((x$25) => x$25._1))))
      }
    }
  };
  fillWithStatics(puzzle).zipWithIndex.withFilter(((check$ifrefutable$1) => check$ifrefutable$1: @scala.unchecked match {
  case scala.Tuple2((col @ _), (x @ _)) => true
  case _ => false
})).flatMap(((x$28) => x$28: @scala.unchecked match {
    case scala.Tuple2((col @ _), (x @ _)) => col.zipWithIndex.withFilter(((check$ifrefutable$2) => check$ifrefutable$2: @scala.unchecked match {
  case scala.Tuple2((panel @ _), (y @ _)) => true
  case _ => false
})).withFilter(((x$26) => x$26: @scala.unchecked match {
  case scala.Tuple2((panel @ _), (y @ _)) => puzzle(x).contains(panel).unary_$bang
})).map(((x$27) => x$27: @scala.unchecked match {
      case scala.Tuple2((panel @ _), (y @ _)) => scala.Tuple3(panel, x, y)
    }))
  }))
}
after
def createNoMatchFilling(seed: _root_.scala.Function0[T], col: Int): Events[T] = {
  val _$started = System.nanoTime;
  val _$result: Events[T] = {
    val contains = (puzzle.flatten.contains: (() => <empty>));
    @new tailrec() def fillWithStatics(added: Puzzle[T]): Puzzle[T] = added.createFilling(seed, col) match {
      case (filling @ _) => added.fill(filling) match {
        case (filled @ _) => filled.scanAll match {
          case (matches @ _) if matches.flatten.map(((x$24) => x$24._1)).forall(contains) => filled
          case (matches @ _) => fillWithStatics(added.removePanels(filling.filterNot(puzzle.flatten.contains).map(((x$25) => x$25._1))))
        }
      }
    };
    fillWithStatics(puzzle).zipWithIndex.withFilter(((check$ifrefutable$1) => check$ifrefutable$1: @scala.unchecked match {
  case scala.Tuple2((col @ _), (x @ _)) => true
  case _ => false
})).flatMap(((x$28) => x$28: @scala.unchecked match {
      case scala.Tuple2((col @ _), (x @ _)) => col.zipWithIndex.withFilter(((check$ifrefutable$2) => check$ifrefutable$2: @scala.unchecked match {
  case scala.Tuple2((panel @ _), (y @ _)) => true
  case _ => false
})).withFilter(((x$26) => x$26: @scala.unchecked match {
  case scala.Tuple2((panel @ _), (y @ _)) => puzzle(x).contains(panel).unary_$bang
})).map(((x$27) => x$27: @scala.unchecked match {
        case scala.Tuple2((panel @ _), (y @ _)) => scala.Tuple3(panel, x, y)
      }))
    }))
  };
  val _$finished = System.nanoTime;
  scala.Predef.println("(PuzzleImpl,createNoMatchFilling)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
private def fillWithoutMatches(seed: _root_.scala.Function0[T], size: Int): Puzzle[T] = {
  @new tailrec() def recFWM(p: Puzzle[T]): Puzzle[T] = p.scanAll match {
    case Seq() => p
    case (matches @ _) => recFWM(removePanels(matches.flatten.distinct.map(<empty> match {
      case scala.Tuple3((pp @ _), (x @ _), (y @ _)) => pp
    })))
  };
  recFWM(puzzle)
}
after
private def fillWithoutMatches(seed: _root_.scala.Function0[T], size: Int): Puzzle[T] = {
  val _$started = System.nanoTime;
  val _$result: Puzzle[T] = {
    @new tailrec() def recFWM(p: Puzzle[T]): Puzzle[T] = p.scanAll match {
      case Seq() => p
      case (matches @ _) => recFWM(removePanels(matches.flatten.distinct.map(<empty> match {
        case scala.Tuple3((pp @ _), (x @ _), (y @ _)) => pp
      })))
    };
    recFWM(puzzle)
  };
  val _$finished = System.nanoTime;
  scala.Predef.println("(PuzzleImpl,fillWithoutMatches)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def scanBy = (GMatch3.scanBy(puzzle): (() => <empty>))
after
def scanBy = {
  val _$started = System.nanoTime;
  val _$result = (GMatch3.scanBy(puzzle): (() => <empty>));
  val _$finished = System.nanoTime;
  scala.Predef.println("(PuzzleImpl,scanBy)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def scanAllWithException(matchLength: Int)(exception: _root_.scala.Function1[T, Boolean]) = scanBy(((x) => ((y) => ((right) => scanWithException(x)(y)(exception)(right))))).filter(((x$29) => x$29.size.$greater$eq(matchLength)))
after
def scanAllWithException(matchLength: Int)(exception: _root_.scala.Function1[T, Boolean]) = {
  val _$started = System.nanoTime;
  val _$result = scanBy(((x) => ((y) => ((right) => scanWithException(x)(y)(exception)(right))))).filter(((x$29) => x$29.size.$greater$eq(matchLength)));
  val _$finished = System.nanoTime;
  scala.Predef.println("(PuzzleImpl,scanAllWithException)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def scanAll = scanBy(scan)
after
def scanAll = {
  val _$started = System.nanoTime;
  val _$result = scanBy(scan);
  val _$finished = System.nanoTime;
  scala.Predef.println("(PuzzleImpl,scanAll)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def indexOfPanel(panel: T): Either[Throwable, scala.Tuple2[Int, Int]] = allCatch.either({
  val row = puzzle.filter(((x$30) => x$30.contains(panel))).head;
  scala.Tuple2(puzzle.indexOf(row), row.indexOf(panel))
})
after
def indexOfPanel(panel: T): Either[Throwable, scala.Tuple2[Int, Int]] = {
  val _$started = System.nanoTime;
  val _$result: Either[Throwable, scala.Tuple2[Int, Int]] = allCatch.either({
    val row = puzzle.filter(((x$30) => x$30.contains(panel))).head;
    scala.Tuple2(puzzle.indexOf(row), row.indexOf(panel))
  });
  val _$finished = System.nanoTime;
  scala.Predef.println("(PuzzleImpl,indexOfPanel)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def indexOfPanelOpt(panel: T): Option[scala.Tuple2[Int, Int]] = allCatch.opt({
  val row = puzzle.filter(((x$31) => x$31.contains(panel))).head;
  scala.Tuple2(puzzle.indexOf(row), row.indexOf(panel))
})
after
def indexOfPanelOpt(panel: T): Option[scala.Tuple2[Int, Int]] = {
  val _$started = System.nanoTime;
  val _$result: Option[scala.Tuple2[Int, Int]] = allCatch.opt({
    val row = puzzle.filter(((x$31) => x$31.contains(panel))).head;
    scala.Tuple2(puzzle.indexOf(row), row.indexOf(panel))
  });
  val _$finished = System.nanoTime;
  scala.Predef.println("(PuzzleImpl,indexOfPanelOpt)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def indexOfPanelUnhandled(panel: Panel): scala.Tuple2[Int, Int] = {
  val row = puzzle.filter(((x$32) => x$32.contains(panel))).head;
  scala.Tuple2(puzzle.indexOf(row), row.indexOf(panel))
}
after
def indexOfPanelUnhandled(panel: Panel): scala.Tuple2[Int, Int] = {
  val _$started = System.nanoTime;
  val _$result: scala.Tuple2[Int, Int] = {
    val row = puzzle.filter(((x$32) => x$32.contains(panel))).head;
    scala.Tuple2(puzzle.indexOf(row), row.indexOf(panel))
  };
  val _$finished = System.nanoTime;
  scala.Predef.println("(PuzzleImpl,indexOfPanelUnhandled)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def swap(ax: Int, ay: Int, bx: Int, by: Int): Puzzle[T] = {
  val a = puzzle(ax)(ay);
  val b = puzzle(bx)(by);
  val puzzle1 = puzzle.updated(ax, puzzle(ax).updated(ay, b));
  val puzzle2 = puzzle1.updated(bx, puzzle1(bx).updated(by, a));
  puzzle2
}
after
def swap(ax: Int, ay: Int, bx: Int, by: Int): Puzzle[T] = {
  val _$started = System.nanoTime;
  val _$result: Puzzle[T] = {
    val a = puzzle(ax)(ay);
    val b = puzzle(bx)(by);
    val puzzle1 = puzzle.updated(ax, puzzle(ax).updated(ay, b));
    val puzzle2 = puzzle1.updated(bx, puzzle1(bx).updated(by, a));
    puzzle2
  };
  val _$finished = System.nanoTime;
  scala.Predef.println("(PuzzleImpl,swap)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def append(p: Puzzle[T]): Puzzle[T] = puzzle.zipWithIndex.map(<empty> match {
  case scala.Tuple2((col @ _), (x @ _)) => col.$plus$plus(p(x))
})
after
def append(p: Puzzle[T]): Puzzle[T] = {
  val _$started = System.nanoTime;
  val _$result: Puzzle[T] = puzzle.zipWithIndex.map(<empty> match {
    case scala.Tuple2((col @ _), (x @ _)) => col.$plus$plus(p(x))
  });
  val _$finished = System.nanoTime;
  scala.Predef.println("(PuzzleImpl,append)".$plus(_$finished.$minus(_$started)));
  _$result
}
result:
implicit class PuzzleImpl[T >: _root_.scala.Nothing <: Panel] extends AnyVal {
  <paramaccessor> val puzzle: Puzzle[T] = _;
  def <init>(puzzle: Puzzle[T]) = {
    val _$started = System.nanoTime;
    val _$result = {
      super.<init>();
      ()
    };
    val _$finished = System.nanoTime;
    scala.Predef.println("(PuzzleImpl,<init>)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def text: String = {
    val _$started = System.nanoTime;
    val _$result: String = puzzle.map(((col) => col.map(((x$16) => x$16.toString)).fold("")(((x$17, x$18) => x$17.$plus(",").$plus(x$18))))).fold("")(((x$19, x$20) => x$19.$plus("\n").$plus(x$20)));
    val _$finished = System.nanoTime;
    scala.Predef.println("(PuzzleImpl,text)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def toIndexMap = {
    val _$started = System.nanoTime;
    val _$result = GMatch3.toIndexMap(puzzle);
    val _$finished = System.nanoTime;
    scala.Predef.println("(PuzzleImpl,toIndexMap)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def scanWithException = {
    val _$started = System.nanoTime;
    val _$result = (GMatch3.scanIndexedWithException(puzzle): (() => <empty>));
    val _$finished = System.nanoTime;
    scala.Predef.println("(PuzzleImpl,scanWithException)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def scan(x: Int)(y: Int)(right: Boolean): MatchedSet[T] = {
    val _$started = System.nanoTime;
    val _$result: MatchedSet[T] = {
      val W = puzzle.size;
      val H = puzzle.head.size;
      val panel = puzzle(x)(y);
      var matching = {
        <synthetic> val x$21 = scala.Tuple3(puzzle(x)(y), x, y);
        Nil.$colon$colon(x$21)
      };
      if (right)
        {
          var nx = x.$plus(1);
          while$12(){
            if (nx.$less(W).$amp$amp(y.$less(puzzle(nx).size)).$amp$amp(panel.matchTo(puzzle(nx)(y))))
              {
                {
                  matching.$colon$colon$eq(puzzle(nx)(y), nx, y);
                  nx.$plus$eq(1)
                };
                while$12()
              }
            else
              ()
          }
        }
      else
        {
          var ny = y.$plus(1);
          val size = puzzle(x).size;
          while$13(){
            if (ny.$less(H).$amp$amp(ny.$less(size)).$amp$amp(panel.matchTo(puzzle(x)(ny))))
              {
                {
                  matching.$colon$colon$eq(puzzle(x)(ny), x, ny);
                  ny.$plus$eq(1)
                };
                while$13()
              }
            else
              ()
          }
        };
      if (matching.size.$greater$eq(3))
        matching
      else
        Nil
    };
    val _$finished = System.nanoTime;
    scala.Predef.println("(PuzzleImpl,scan)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def createFilling = {
    val _$started = System.nanoTime;
    val _$result = (GMatch3.createFilling(puzzle): (() => <empty>));
    val _$finished = System.nanoTime;
    scala.Predef.println("(PuzzleImpl,createFilling)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def createFillingPuzzle = {
    val _$started = System.nanoTime;
    val _$result = (GMatch3.createFillingPuzzle(puzzle): (() => <empty>));
    val _$finished = System.nanoTime;
    scala.Predef.println("(PuzzleImpl,createFillingPuzzle)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def fill(filling: Events[T]): Puzzle[T] = {
    val _$started = System.nanoTime;
    val _$result: Puzzle[T] = filling.foldLeft(puzzle)(<empty> match {
      case scala.Tuple2((p @ _), scala.Tuple3((panel @ _), (x @ _), _)) => p.updated(x, p(x).$colon$plus(panel))
    });
    val _$finished = System.nanoTime;
    scala.Predef.println("(PuzzleImpl,fill)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def removePanels(panels: Seq[T]): Puzzle[T] = {
    val _$started = System.nanoTime;
    val _$result: Puzzle[T] = puzzle.map(((x$22) => x$22.filterNot(panels.contains)));
    val _$finished = System.nanoTime;
    scala.Predef.println("(PuzzleImpl,removePanels)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def remove(panels: Seq[T]): scala.Tuple2[Puzzle[T], Puzzle[T]] = {
    val _$started = System.nanoTime;
    val _$result: scala.Tuple2[Puzzle[T], Puzzle[T]] = {
      val f = ((p: Panel) => panels.contains(p));
      puzzle.unzip(((col) => col.span(((x$23) => f(x$23).unary_$bang)) match {
        case scala.Tuple2((left @ _), (float @ _)) => scala.Tuple2(left, float.filterNot(f))
      }))
    };
    val _$finished = System.nanoTime;
    scala.Predef.println("(PuzzleImpl,remove)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def createNoMatchFilling(seed: _root_.scala.Function0[T], col: Int): Events[T] = {
    val _$started = System.nanoTime;
    val _$result: Events[T] = {
      val contains = (puzzle.flatten.contains: (() => <empty>));
      @new tailrec() def fillWithStatics(added: Puzzle[T]): Puzzle[T] = added.createFilling(seed, col) match {
        case (filling @ _) => added.fill(filling) match {
          case (filled @ _) => filled.scanAll match {
            case (matches @ _) if matches.flatten.map(((x$24) => x$24._1)).forall(contains) => filled
            case (matches @ _) => fillWithStatics(added.removePanels(filling.filterNot(puzzle.flatten.contains).map(((x$25) => x$25._1))))
          }
        }
      };
      fillWithStatics(puzzle).zipWithIndex.withFilter(((check$ifrefutable$1) => check$ifrefutable$1: @scala.unchecked match {
  case scala.Tuple2((col @ _), (x @ _)) => true
  case _ => false
})).flatMap(((x$28) => x$28: @scala.unchecked match {
        case scala.Tuple2((col @ _), (x @ _)) => col.zipWithIndex.withFilter(((check$ifrefutable$2) => check$ifrefutable$2: @scala.unchecked match {
  case scala.Tuple2((panel @ _), (y @ _)) => true
  case _ => false
})).withFilter(((x$26) => x$26: @scala.unchecked match {
  case scala.Tuple2((panel @ _), (y @ _)) => puzzle(x).contains(panel).unary_$bang
})).map(((x$27) => x$27: @scala.unchecked match {
          case scala.Tuple2((panel @ _), (y @ _)) => scala.Tuple3(panel, x, y)
        }))
      }))
    };
    val _$finished = System.nanoTime;
    scala.Predef.println("(PuzzleImpl,createNoMatchFilling)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  private def fillWithoutMatches(seed: _root_.scala.Function0[T], size: Int): Puzzle[T] = {
    val _$started = System.nanoTime;
    val _$result: Puzzle[T] = {
      @new tailrec() def recFWM(p: Puzzle[T]): Puzzle[T] = p.scanAll match {
        case Seq() => p
        case (matches @ _) => recFWM(removePanels(matches.flatten.distinct.map(<empty> match {
          case scala.Tuple3((pp @ _), (x @ _), (y @ _)) => pp
        })))
      };
      recFWM(puzzle)
    };
    val _$finished = System.nanoTime;
    scala.Predef.println("(PuzzleImpl,fillWithoutMatches)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def scanBy = {
    val _$started = System.nanoTime;
    val _$result = (GMatch3.scanBy(puzzle): (() => <empty>));
    val _$finished = System.nanoTime;
    scala.Predef.println("(PuzzleImpl,scanBy)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def scanAllWithException(matchLength: Int)(exception: _root_.scala.Function1[T, Boolean]) = {
    val _$started = System.nanoTime;
    val _$result = scanBy(((x) => ((y) => ((right) => scanWithException(x)(y)(exception)(right))))).filter(((x$29) => x$29.size.$greater$eq(matchLength)));
    val _$finished = System.nanoTime;
    scala.Predef.println("(PuzzleImpl,scanAllWithException)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def scanAll = {
    val _$started = System.nanoTime;
    val _$result = scanBy(scan);
    val _$finished = System.nanoTime;
    scala.Predef.println("(PuzzleImpl,scanAll)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def indexOfPanel(panel: T): Either[Throwable, scala.Tuple2[Int, Int]] = {
    val _$started = System.nanoTime;
    val _$result: Either[Throwable, scala.Tuple2[Int, Int]] = allCatch.either({
      val row = puzzle.filter(((x$30) => x$30.contains(panel))).head;
      scala.Tuple2(puzzle.indexOf(row), row.indexOf(panel))
    });
    val _$finished = System.nanoTime;
    scala.Predef.println("(PuzzleImpl,indexOfPanel)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def indexOfPanelOpt(panel: T): Option[scala.Tuple2[Int, Int]] = {
    val _$started = System.nanoTime;
    val _$result: Option[scala.Tuple2[Int, Int]] = allCatch.opt({
      val row = puzzle.filter(((x$31) => x$31.contains(panel))).head;
      scala.Tuple2(puzzle.indexOf(row), row.indexOf(panel))
    });
    val _$finished = System.nanoTime;
    scala.Predef.println("(PuzzleImpl,indexOfPanelOpt)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def indexOfPanelUnhandled(panel: Panel): scala.Tuple2[Int, Int] = {
    val _$started = System.nanoTime;
    val _$result: scala.Tuple2[Int, Int] = {
      val row = puzzle.filter(((x$32) => x$32.contains(panel))).head;
      scala.Tuple2(puzzle.indexOf(row), row.indexOf(panel))
    };
    val _$finished = System.nanoTime;
    scala.Predef.println("(PuzzleImpl,indexOfPanelUnhandled)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def swap(ax: Int, ay: Int, bx: Int, by: Int): Puzzle[T] = {
    val _$started = System.nanoTime;
    val _$result: Puzzle[T] = {
      val a = puzzle(ax)(ay);
      val b = puzzle(bx)(by);
      val puzzle1 = puzzle.updated(ax, puzzle(ax).updated(ay, b));
      val puzzle2 = puzzle1.updated(bx, puzzle1(bx).updated(by, a));
      puzzle2
    };
    val _$finished = System.nanoTime;
    scala.Predef.println("(PuzzleImpl,swap)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def append(p: Puzzle[T]): Puzzle[T] = {
    val _$started = System.nanoTime;
    val _$result: Puzzle[T] = puzzle.zipWithIndex.map(<empty> match {
      case scala.Tuple2((col @ _), (x @ _)) => col.$plus$plus(p(x))
    });
    val _$finished = System.nanoTime;
    scala.Predef.println("(PuzzleImpl,append)".$plus(_$finished.$minus(_$started)));
    _$result
  }
}
[0m[[33mwarn[0m] [0m/Users/glyph/Documents/sbt/scalagamerepo/common/src/main/scala/com/glyph/scala/game/action_puzzle/ActionPuzzle.scala:66: a pure expression does nothing in statement position; you may be omitting necessary parentheses[0m
[0m[[33mwarn[0m] [0m    idle(cb)[0m
[0m[[33mwarn[0m] [0m         ^[0m
before
def initializer: Var[Puzzle[AP]] = Var(GMatch3.initialize(COLUMN)({
  final class $anon extends IndexedSeqGen {
    def <init>() = {
      super.<init>();
      ()
    };
    def convert[T >: _root_.scala.Nothing <: _root_.scala.Any](seq: Seq[T]): IndexedSeq[T] = ArrayBuffer.apply((seq: _*))
  };
  new $anon()
}))
after
def initializer: Var[Puzzle[AP]] = {
  val _$started = System.nanoTime;
  val _$result: Var[Puzzle[AP]] = Var(GMatch3.initialize(COLUMN)({
    final class $anon extends IndexedSeqGen {
      def <init>() = {
        super.<init>();
        ()
      };
      def convert[T >: _root_.scala.Nothing <: _root_.scala.Any](seq: Seq[T]): IndexedSeq[T] = ArrayBuffer.apply((seq: _*))
    };
    new $anon()
  }));
  val _$finished = System.nanoTime;
  scala.Predef.println("(ActionPuzzle3,initializer)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def seed: _root_.scala.Function0[AP] = (() => MathUtils.random(0, 3).$bar$greater(((x$1) => new AP(x$1))))
after
def seed: _root_.scala.Function0[AP] = {
  val _$started = System.nanoTime;
  val _$result: _root_.scala.Function0[AP] = (() => MathUtils.random(0, 3).$bar$greater(((x$1) => new AP(x$1))));
  val _$finished = System.nanoTime;
  scala.Predef.println("(ActionPuzzle3,seed)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def scanAll = scanAllWithException(fixedFuture)(3)(((p) => {
  val opt = swiping().get(p);
  if (opt.isDefined)
    opt.get.isEmpty.unary_$bang
  else
    false
}))
after
def scanAll = {
  val _$started = System.nanoTime;
  val _$result = scanAllWithException(fixedFuture)(3)(((p) => {
    val opt = swiping().get(p);
    if (opt.isDefined)
      opt.get.isEmpty.unary_$bang
    else
      false
  }));
  val _$finished = System.nanoTime;
  scala.Predef.println("(ActionPuzzle3,scanAll)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def scanAllDistinct = scanAll.flatten.map(((x$2) => x$2._1)).distinct
after
def scanAllDistinct = {
  val _$started = System.nanoTime;
  val _$result = scanAll.flatten.map(((x$2) => x$2._1)).distinct;
  val _$finished = System.nanoTime;
  scala.Predef.println("(ActionPuzzle3,scanAllDistinct)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def scanAllDistinct2 = GMatch3.scanAll(fixedFuture)(ROW)(COLUMN)(((a, b) => {
  val map = swiping();
  if (a.$bang$eq(null).$amp$amp(b.$bang$eq(null)).$amp$amp(map(a).isEmpty).$amp$amp(map(b).isEmpty))
    a.n.$eq$eq(b.n)
  else
    false
})).filter(((x$3) => x$3.size.$greater(2))).flatten.distinct
after
def scanAllDistinct2 = {
  val _$started = System.nanoTime;
  val _$result = GMatch3.scanAll(fixedFuture)(ROW)(COLUMN)(((a, b) => {
  val map = swiping();
  if (a.$bang$eq(null).$amp$amp(b.$bang$eq(null)).$amp$amp(map(a).isEmpty).$amp$amp(map(b).isEmpty))
    a.n.$eq$eq(b.n)
  else
    false
})).filter(((x$3) => x$3.size.$greater(2))).flatten.distinct;
  val _$finished = System.nanoTime;
  scala.Predef.println("(ActionPuzzle3,scanAllDistinct2)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def fixedFuture = fixed().zipWithIndex.map(<empty> match {
  case scala.Tuple2((row @ _), (x @ _)) => row.zipWithIndex.map(<empty> match {
    case scala.Tuple2((p @ _), (y @ _)) => future()(x)(y)
  })
})
after
def fixedFuture = {
  val _$started = System.nanoTime;
  val _$result = fixed().zipWithIndex.map(<empty> match {
    case scala.Tuple2((row @ _), (x @ _)) => row.zipWithIndex.map(<empty> match {
      case scala.Tuple2((p @ _), (y @ _)) => future()(x)(y)
    })
  });
  val _$finished = System.nanoTime;
  scala.Predef.println("(ActionPuzzle3,fixedFuture)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def scanRemoveFill(): scala.Unit = {
  remove(scanAllDistinct2);
  fill()
}
after
def scanRemoveFill(): scala.Unit = {
  val _$started = System.nanoTime;
  val _$result: scala.Unit = {
    remove(scanAllDistinct2);
    fill()
  };
  val _$finished = System.nanoTime;
  scala.Predef.println("(ActionPuzzle3,scanRemoveFill)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def swipe(x: Int, y: Int, nx: Int, ny: Int) = try {
  def verified = y.$less(fixed()(x).size).$amp$amp(ny.$less(fixed()(nx).size));
  if (verified)
    {
      val pa = future()(x)(y);
      val pb = future()(nx)(ny);
      import Animator._;
      import Interpolation._;
      var pTask: Task = null;
      val task = {
  <synthetic> val x$17 = {
  <synthetic> val x$7 = scala.Tuple2(pa.x, nx);
  {
  <synthetic> val x$6 = scala.Tuple2(pa.y, ny);
  {
  <synthetic> val x$5 = scala.Tuple2(pb.x, x);
  {
  <synthetic> val x$4 = scala.Tuple2(pb.y, y);
  Nil.$colon$colon(x$4)
}.$colon$colon(x$5)
}.$colon$colon(x$6)
}.$colon$colon(x$7)
}.map(<empty> match {
  case scala.Tuple2((v @ _), (tgt @ _)) => interpolate(v).to(tgt).in(0.3).using(exp10Out)
}).$bar$greater(((x$8) => WaitAll((x$8: _*))));
  {
  <synthetic> val x$16 = Do({
    swiping().$plus$plus$eq({
      <synthetic> val x$14 = pa.$minus$greater(swiping().get(pa).map(((x$9) => x$9.filterNot(((x$10) => x$10.$eq$eq(pTask))))).$bar(Nil));
      {
  <synthetic> val x$13 = pb.$minus$greater(swiping().get(pb).map(((x$11) => x$11.filterNot(((x$12) => x$12.$eq$eq(pTask))))).$bar(Nil));
  Nil.$colon$colon(x$13)
}.$colon$colon(x$14)
    });
    swiping.update(swiping().filterNot(((x$15) => x$15._2.isEmpty)));
    if (verified)
      {
        fixed.update(fixed().swap(x, y, nx, ny));
        scanRemoveFill()
      }
    else
      ()
  });
  Nil.$colon$colon(x$16)
}.$colon$colon(x$17)
}.$bar$greater(((x$18) => Sequence((x$18: _*))));
      pTask = task;
      swiping().$plus$plus$eq({
        <synthetic> val x$20 = pa.$minus$greater(swiping().get(pa).$bar(Nil).$colon$plus(task));
        {
  <synthetic> val x$19 = pb.$minus$greater(swiping().get(pb).$bar(Nil).$colon$plus(task));
  Nil.$colon$colon(x$19)
}.$colon$colon(x$20)
      });
      future.update(future().swap(x, y, nx, ny));
      processor.add(task)
    }
  else
    ()
} catch {
  case (e @ (_: Exception)) => e.printStackTrace()
}
after
def swipe(x: Int, y: Int, nx: Int, ny: Int) = {
  val _$started = System.nanoTime;
  val _$result = try {
    def verified = y.$less(fixed()(x).size).$amp$amp(ny.$less(fixed()(nx).size));
    if (verified)
      {
        val pa = future()(x)(y);
        val pb = future()(nx)(ny);
        import Animator._;
        import Interpolation._;
        var pTask: Task = null;
        val task = {
  <synthetic> val x$17 = {
  <synthetic> val x$7 = scala.Tuple2(pa.x, nx);
  {
  <synthetic> val x$6 = scala.Tuple2(pa.y, ny);
  {
  <synthetic> val x$5 = scala.Tuple2(pb.x, x);
  {
  <synthetic> val x$4 = scala.Tuple2(pb.y, y);
  Nil.$colon$colon(x$4)
}.$colon$colon(x$5)
}.$colon$colon(x$6)
}.$colon$colon(x$7)
}.map(<empty> match {
  case scala.Tuple2((v @ _), (tgt @ _)) => interpolate(v).to(tgt).in(0.3).using(exp10Out)
}).$bar$greater(((x$8) => WaitAll((x$8: _*))));
  {
  <synthetic> val x$16 = Do({
    swiping().$plus$plus$eq({
      <synthetic> val x$14 = pa.$minus$greater(swiping().get(pa).map(((x$9) => x$9.filterNot(((x$10) => x$10.$eq$eq(pTask))))).$bar(Nil));
      {
  <synthetic> val x$13 = pb.$minus$greater(swiping().get(pb).map(((x$11) => x$11.filterNot(((x$12) => x$12.$eq$eq(pTask))))).$bar(Nil));
  Nil.$colon$colon(x$13)
}.$colon$colon(x$14)
    });
    swiping.update(swiping().filterNot(((x$15) => x$15._2.isEmpty)));
    if (verified)
      {
        fixed.update(fixed().swap(x, y, nx, ny));
        scanRemoveFill()
      }
    else
      ()
  });
  Nil.$colon$colon(x$16)
}.$colon$colon(x$17)
}.$bar$greater(((x$18) => Sequence((x$18: _*))));
        pTask = task;
        swiping().$plus$plus$eq({
          <synthetic> val x$20 = pa.$minus$greater(swiping().get(pa).$bar(Nil).$colon$plus(task));
          {
  <synthetic> val x$19 = pb.$minus$greater(swiping().get(pb).$bar(Nil).$colon$plus(task));
  Nil.$colon$colon(x$19)
}.$colon$colon(x$20)
        });
        future.update(future().swap(x, y, nx, ny));
        processor.add(task)
      }
    else
      ()
  } catch {
    case (e @ (_: Exception)) => e.printStackTrace()
  };
  val _$finished = System.nanoTime;
  scala.Predef.println("(ActionPuzzle3,swipe)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def fill(): scala.Unit = {
  val filling = future().createFillingPuzzle(seed, COLUMN);
  if (filling.exists(((x$21) => x$21.isEmpty.unary_$bang)))
    {
      falling.update(falling().append(filling));
      future.update(fixed().append(falling()));
      val fillingMap = filling.toIndexMap;
      val indexed = filling.flatten.map(((p) => {
        <synthetic> private[this] val x$22 = fillingMap(p): @scala.unchecked match {
          case scala.Tuple2((x @ _), (y @ _)) => scala.Tuple2(x, y)
        };
        val x = x$22._1;
        val y = x$22._2;
        scala.Tuple3(p, x, y)
      }));
      val futureMap = futureIndices();
      val futureIndexed = filling.flatten.map(((p) => {
        <synthetic> private[this] val x$23 = futureMap(p): @scala.unchecked match {
          case scala.Tuple2((x @ _), (y @ _)) => scala.Tuple2(x, y)
        };
        val x = x$23._1;
        val y = x$23._2;
        scala.Tuple3(p, x, y)
      }));
      indexed.withFilter(((check$ifrefutable$1) => check$ifrefutable$1: @scala.unchecked match {
  case scala.Tuple3((p @ _), (x @ _), (y @ _)) => true
  case _ => false
})).foreach(((x$24) => x$24: @scala.unchecked match {
        case scala.Tuple3((p @ _), (x @ _), (y @ _)) => {
          p.x.update(x);
          p.y.update(COLUMN.$plus(y))
        }
      }));
      futureIndexed.$bar$greater(panelAdd)
    }
  else
    ();
  updateTargetPosition()
}
after
def fill(): scala.Unit = {
  val _$started = System.nanoTime;
  val _$result: scala.Unit = {
    val filling = future().createFillingPuzzle(seed, COLUMN);
    if (filling.exists(((x$21) => x$21.isEmpty.unary_$bang)))
      {
        falling.update(falling().append(filling));
        future.update(fixed().append(falling()));
        val fillingMap = filling.toIndexMap;
        val indexed = filling.flatten.map(((p) => {
          <synthetic> private[this] val x$22 = fillingMap(p): @scala.unchecked match {
            case scala.Tuple2((x @ _), (y @ _)) => scala.Tuple2(x, y)
          };
          val x = x$22._1;
          val y = x$22._2;
          scala.Tuple3(p, x, y)
        }));
        val futureMap = futureIndices();
        val futureIndexed = filling.flatten.map(((p) => {
          <synthetic> private[this] val x$23 = futureMap(p): @scala.unchecked match {
            case scala.Tuple2((x @ _), (y @ _)) => scala.Tuple2(x, y)
          };
          val x = x$23._1;
          val y = x$23._2;
          scala.Tuple3(p, x, y)
        }));
        indexed.withFilter(((check$ifrefutable$1) => check$ifrefutable$1: @scala.unchecked match {
  case scala.Tuple3((p @ _), (x @ _), (y @ _)) => true
  case _ => false
})).foreach(((x$24) => x$24: @scala.unchecked match {
          case scala.Tuple3((p @ _), (x @ _), (y @ _)) => {
            p.x.update(x);
            p.y.update(COLUMN.$plus(y))
          }
        }));
        futureIndexed.$bar$greater(panelAdd)
      }
    else
      ();
    updateTargetPosition()
  };
  val _$finished = System.nanoTime;
  scala.Predef.println("(ActionPuzzle3,fill)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def cancelSwipingAnimation(panel: AP): scala.Unit = swiping().get(panel).foreach(((tasks) => tasks.foreach(((task) => {
  log("canceled!".$plus(panel));
  swiping().$plus$eq(panel.$minus$greater(swiping().get(panel).map(((x$25) => x$25.filterNot(((x$26) => x$26.$eq$eq(task))))).$bar(Nil)))
}))))
after
def cancelSwipingAnimation(panel: AP): scala.Unit = {
  val _$started = System.nanoTime;
  val _$result: scala.Unit = swiping().get(panel).foreach(((tasks) => tasks.foreach(((task) => {
    log("canceled!".$plus(panel));
    swiping().$plus$eq(panel.$minus$greater(swiping().get(panel).map(((x$25) => x$25.filterNot(((x$26) => x$26.$eq$eq(task))))).$bar(Nil)))
  }))));
  val _$finished = System.nanoTime;
  scala.Predef.println("(ActionPuzzle3,cancelSwipingAnimation)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def remove(panels: Seq[AP]): scala.Unit = {
  if (panels.isEmpty.unary_$bang)
    {
      <synthetic> private[this] val x$27 = fixedFuture.remove(panels): @scala.unchecked match {
        case scala.Tuple2((left @ _), (fallen @ _)) => scala.Tuple2(left, fallen)
      };
      val left = x$27._1;
      val fallen = x$27._2;
      fallen.foreach(((x$28) => x$28.foreach(cancelSwipingAnimation)));
      panelRemove(panels);
      fixed.update(left);
      falling.update(fallen.append(falling()));
      future.update(fixed().append(falling()))
    }
  else
    ();
  updateTargetPosition()
}
after
def remove(panels: Seq[AP]): scala.Unit = {
  val _$started = System.nanoTime;
  val _$result: scala.Unit = {
    if (panels.isEmpty.unary_$bang)
      {
        <synthetic> private[this] val x$27 = fixedFuture.remove(panels): @scala.unchecked match {
          case scala.Tuple2((left @ _), (fallen @ _)) => scala.Tuple2(left, fallen)
        };
        val left = x$27._1;
        val fallen = x$27._2;
        fallen.foreach(((x$28) => x$28.foreach(cancelSwipingAnimation)));
        panelRemove(panels);
        fixed.update(left);
        falling.update(fallen.append(falling()));
        future.update(fixed().append(falling()))
      }
    else
      ();
    updateTargetPosition()
  };
  val _$finished = System.nanoTime;
  scala.Predef.println("(ActionPuzzle3,remove)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def updateTargetPosition(): scala.Unit = {
  val indices = futureIndices();
  falling().foreach(((row) => row.foreach(((p) => {
    <synthetic> private[this] val x$29 = indices(p): @scala.unchecked match {
      case scala.Tuple2((tx @ _), (ty @ _)) => scala.Tuple2(tx, ty)
    };
    val tx = x$29._1;
    val ty = x$29._2;
    p.tx.update(tx);
    p.ty.update(ty)
  }))))
}
after
def updateTargetPosition(): scala.Unit = {
  val _$started = System.nanoTime;
  val _$result: scala.Unit = {
    val indices = futureIndices();
    falling().foreach(((row) => row.foreach(((p) => {
      <synthetic> private[this] val x$29 = indices(p): @scala.unchecked match {
        case scala.Tuple2((tx @ _), (ty @ _)) => scala.Tuple2(tx, ty)
      };
      val tx = x$29._1;
      val ty = x$29._2;
      p.tx.update(tx);
      p.ty.update(ty)
    }))))
  };
  val _$finished = System.nanoTime;
  scala.Predef.println("(ActionPuzzle3,updateTargetPosition)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def initialize(): scala.Unit = fill()
after
def initialize(): scala.Unit = {
  val _$started = System.nanoTime;
  val _$result: scala.Unit = fill();
  val _$finished = System.nanoTime;
  scala.Predef.println("(ActionPuzzle3,initialize)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def update(delta: Float): scala.Unit = {
  updateFalling(delta);
  processor.update(delta)
}
after
def update(delta: Float): scala.Unit = {
  val _$started = System.nanoTime;
  val _$result: scala.Unit = {
    updateFalling(delta);
    processor.update(delta)
  };
  val _$finished = System.nanoTime;
  scala.Predef.println("(ActionPuzzle3,update)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def newPuzzleBuffer: ArrayBuffer[ArrayBuffer[AP]] = ArrayBuffer((0.until(ROW).map(((x$30) => ArrayBuffer.empty[AP])): _*))
after
def newPuzzleBuffer: ArrayBuffer[ArrayBuffer[AP]] = {
  val _$started = System.nanoTime;
  val _$result: ArrayBuffer[ArrayBuffer[AP]] = ArrayBuffer((0.until(ROW).map(((x$30) => ArrayBuffer.empty[AP])): _*));
  val _$finished = System.nanoTime;
  scala.Predef.println("(ActionPuzzle3,newPuzzleBuffer)".$plus(_$finished.$minus(_$started)));
  _$result
}
before
def updateFalling(delta: Float): scala.Unit = {
  {
    val fallingCpy = falling();
    val width = fallingCpy.size;
    var x = 0;
    while$2(){
      if (x.$less(width))
        {
          {
            val applied = fallingCpy(x);
            val height = applied.size;
            var y = 0;
            while$1(){
              if (y.$less(height))
                {
                  {
                    val p = applied(y);
                    p.vy().$plus$eq(gravity.$times(delta));
                    if (p.update(delta))
                      finishedBuf.$plus$eq(p)
                    else
                      continuedBuf(x).$plus$eq(p);
                    y.$plus$eq(1)
                  };
                  while$1()
                }
              else
                ()
            };
            x.$plus$eq(1)
          };
          while$2()
        }
      else
        ()
    }
  };
  if (finishedBuf.isEmpty.unary_$bang)
    {
      {
        var x = 0;
        while$4(){
          if (x.$less(ROW))
            {
              {
                val row = fallingBuffer(x);
                row.clear();
                var y = 0;
                val conRow = continuedBuf(x);
                val height = conRow.size;
                while$3(){
                  if (y.$less(height))
                    {
                      {
                        row.$plus$eq(conRow(y));
                        y.$plus$eq(1)
                      };
                      while$3()
                    }
                  else
                    ()
                };
                x.$plus$eq(1)
              };
              while$4()
            }
          else
            ()
        };
        falling.update(fallingBuffer)
      };
      {
        var x = 0;
        while$7(){
          if (x.$less(ROW))
            {
              {
                val row = fixed()(x);
                val length = row.size;
                val buf = fixedBuf(x);
                fixedTemp.clear();
                var y = 0;
                while$5(){
                  if (y.$less(length))
                    {
                      {
                        fixedTemp.push(row(y));
                        y.$plus$eq(1)
                      };
                      while$5()
                    }
                  else
                    ()
                };
                buf.clear();
                while$6(){
                  if (fixedTemp.isEmpty.unary_$bang)
                    {
                      buf.$plus$eq(fixedTemp.pop());
                      while$6()
                    }
                  else
                    ()
                };
                x.$plus$eq(1)
              };
              while$7()
            }
          else
            ()
        }
      };
      finishedBuf.foreach(((p) => fixedBuf(p.tx()).$plus$eq(p)));
      fixed.update(fixedBuf);
      scanRemoveFill()
    }
  else
    ();
  var i = 0;
  while$8(){
    if (i.$less(ROW))
      {
        {
          continuedBuf(i).clear();
          i.$plus$eq(1)
        };
        while$8()
      }
    else
      ()
  };
  finishedBuf.clear()
}
after
def updateFalling(delta: Float): scala.Unit = {
  val _$started = System.nanoTime;
  val _$result: scala.Unit = {
    {
      val fallingCpy = falling();
      val width = fallingCpy.size;
      var x = 0;
      while$2(){
        if (x.$less(width))
          {
            {
              val applied = fallingCpy(x);
              val height = applied.size;
              var y = 0;
              while$1(){
                if (y.$less(height))
                  {
                    {
                      val p = applied(y);
                      p.vy().$plus$eq(gravity.$times(delta));
                      if (p.update(delta))
                        finishedBuf.$plus$eq(p)
                      else
                        continuedBuf(x).$plus$eq(p);
                      y.$plus$eq(1)
                    };
                    while$1()
                  }
                else
                  ()
              };
              x.$plus$eq(1)
            };
            while$2()
          }
        else
          ()
      }
    };
    if (finishedBuf.isEmpty.unary_$bang)
      {
        {
          var x = 0;
          while$4(){
            if (x.$less(ROW))
              {
                {
                  val row = fallingBuffer(x);
                  row.clear();
                  var y = 0;
                  val conRow = continuedBuf(x);
                  val height = conRow.size;
                  while$3(){
                    if (y.$less(height))
                      {
                        {
                          row.$plus$eq(conRow(y));
                          y.$plus$eq(1)
                        };
                        while$3()
                      }
                    else
                      ()
                  };
                  x.$plus$eq(1)
                };
                while$4()
              }
            else
              ()
          };
          falling.update(fallingBuffer)
        };
        {
          var x = 0;
          while$7(){
            if (x.$less(ROW))
              {
                {
                  val row = fixed()(x);
                  val length = row.size;
                  val buf = fixedBuf(x);
                  fixedTemp.clear();
                  var y = 0;
                  while$5(){
                    if (y.$less(length))
                      {
                        {
                          fixedTemp.push(row(y));
                          y.$plus$eq(1)
                        };
                        while$5()
                      }
                    else
                      ()
                  };
                  buf.clear();
                  while$6(){
                    if (fixedTemp.isEmpty.unary_$bang)
                      {
                        buf.$plus$eq(fixedTemp.pop());
                        while$6()
                      }
                    else
                      ()
                  };
                  x.$plus$eq(1)
                };
                while$7()
              }
            else
              ()
          }
        };
        finishedBuf.foreach(((p) => fixedBuf(p.tx()).$plus$eq(p)));
        fixed.update(fixedBuf);
        scanRemoveFill()
      }
    else
      ();
    var i = 0;
    while$8(){
      if (i.$less(ROW))
        {
          {
            continuedBuf(i).clear();
            i.$plus$eq(1)
          };
          while$8()
        }
      else
        ()
    };
    finishedBuf.clear()
  };
  val _$finished = System.nanoTime;
  scala.Predef.println("(ActionPuzzle3,updateFalling)".$plus(_$finished.$minus(_$started)));
  _$result
}
result:
class ActionPuzzle3 extends Reactor with Logging {
  def <init>() = {
    super.<init>();
    ()
  };
  import GMatch3._;
  val ROW = 8;
  val COLUMN = 8;
  val gravity = -10.0;
  val processor = {
    final class $anon extends ParallelProcessor {
      def <init>() = {
        super.<init>();
        ()
      }
    };
    new $anon()
  };
  def initializer: Var[Puzzle[AP]] = {
    val _$started = System.nanoTime;
    val _$result: Var[Puzzle[AP]] = Var(GMatch3.initialize(COLUMN)({
      final class $anon extends IndexedSeqGen {
        def <init>() = {
          super.<init>();
          ()
        };
        def convert[T >: _root_.scala.Nothing <: _root_.scala.Any](seq: Seq[T]): IndexedSeq[T] = ArrayBuffer.apply((seq: _*))
      };
      new $anon()
    }));
    val _$finished = System.nanoTime;
    scala.Predef.println("(ActionPuzzle3,initializer)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def seed: _root_.scala.Function0[AP] = {
    val _$started = System.nanoTime;
    val _$result: _root_.scala.Function0[AP] = (() => MathUtils.random(0, 3).$bar$greater(((x$1) => new AP(x$1))));
    val _$finished = System.nanoTime;
    scala.Predef.println("(ActionPuzzle3,seed)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  val fixed = initializer;
  val falling = initializer;
  val swiping: Var[Map[AP, Seq[Task]]] = Var(Map.empty.withDefaultValue(Nil));
  val future = initializer;
  val futureIndices = future.map(GMatch3.toIndexMap);
  var panelAdd = ((panels: Seq[scala.Tuple3[AP, Int, Int]]) => ());
  var panelRemove = ((panels: Seq[AP]) => ());
  def scanAll = {
    val _$started = System.nanoTime;
    val _$result = scanAllWithException(fixedFuture)(3)(((p) => {
      val opt = swiping().get(p);
      if (opt.isDefined)
        opt.get.isEmpty.unary_$bang
      else
        false
    }));
    val _$finished = System.nanoTime;
    scala.Predef.println("(ActionPuzzle3,scanAll)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def scanAllDistinct = {
    val _$started = System.nanoTime;
    val _$result = scanAll.flatten.map(((x$2) => x$2._1)).distinct;
    val _$finished = System.nanoTime;
    scala.Predef.println("(ActionPuzzle3,scanAllDistinct)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def scanAllDistinct2 = {
    val _$started = System.nanoTime;
    val _$result = GMatch3.scanAll(fixedFuture)(ROW)(COLUMN)(((a, b) => {
  val map = swiping();
  if (a.$bang$eq(null).$amp$amp(b.$bang$eq(null)).$amp$amp(map(a).isEmpty).$amp$amp(map(b).isEmpty))
    a.n.$eq$eq(b.n)
  else
    false
})).filter(((x$3) => x$3.size.$greater(2))).flatten.distinct;
    val _$finished = System.nanoTime;
    scala.Predef.println("(ActionPuzzle3,scanAllDistinct2)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def fixedFuture = {
    val _$started = System.nanoTime;
    val _$result = fixed().zipWithIndex.map(<empty> match {
      case scala.Tuple2((row @ _), (x @ _)) => row.zipWithIndex.map(<empty> match {
        case scala.Tuple2((p @ _), (y @ _)) => future()(x)(y)
      })
    });
    val _$finished = System.nanoTime;
    scala.Predef.println("(ActionPuzzle3,fixedFuture)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def scanRemoveFill(): scala.Unit = {
    val _$started = System.nanoTime;
    val _$result: scala.Unit = {
      remove(scanAllDistinct2);
      fill()
    };
    val _$finished = System.nanoTime;
    scala.Predef.println("(ActionPuzzle3,scanRemoveFill)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def swipe(x: Int, y: Int, nx: Int, ny: Int) = {
    val _$started = System.nanoTime;
    val _$result = try {
      def verified = y.$less(fixed()(x).size).$amp$amp(ny.$less(fixed()(nx).size));
      if (verified)
        {
          val pa = future()(x)(y);
          val pb = future()(nx)(ny);
          import Animator._;
          import Interpolation._;
          var pTask: Task = null;
          val task = {
  <synthetic> val x$17 = {
  <synthetic> val x$7 = scala.Tuple2(pa.x, nx);
  {
  <synthetic> val x$6 = scala.Tuple2(pa.y, ny);
  {
  <synthetic> val x$5 = scala.Tuple2(pb.x, x);
  {
  <synthetic> val x$4 = scala.Tuple2(pb.y, y);
  Nil.$colon$colon(x$4)
}.$colon$colon(x$5)
}.$colon$colon(x$6)
}.$colon$colon(x$7)
}.map(<empty> match {
  case scala.Tuple2((v @ _), (tgt @ _)) => interpolate(v).to(tgt).in(0.3).using(exp10Out)
}).$bar$greater(((x$8) => WaitAll((x$8: _*))));
  {
  <synthetic> val x$16 = Do({
    swiping().$plus$plus$eq({
      <synthetic> val x$14 = pa.$minus$greater(swiping().get(pa).map(((x$9) => x$9.filterNot(((x$10) => x$10.$eq$eq(pTask))))).$bar(Nil));
      {
  <synthetic> val x$13 = pb.$minus$greater(swiping().get(pb).map(((x$11) => x$11.filterNot(((x$12) => x$12.$eq$eq(pTask))))).$bar(Nil));
  Nil.$colon$colon(x$13)
}.$colon$colon(x$14)
    });
    swiping.update(swiping().filterNot(((x$15) => x$15._2.isEmpty)));
    if (verified)
      {
        fixed.update(fixed().swap(x, y, nx, ny));
        scanRemoveFill()
      }
    else
      ()
  });
  Nil.$colon$colon(x$16)
}.$colon$colon(x$17)
}.$bar$greater(((x$18) => Sequence((x$18: _*))));
          pTask = task;
          swiping().$plus$plus$eq({
            <synthetic> val x$20 = pa.$minus$greater(swiping().get(pa).$bar(Nil).$colon$plus(task));
            {
  <synthetic> val x$19 = pb.$minus$greater(swiping().get(pb).$bar(Nil).$colon$plus(task));
  Nil.$colon$colon(x$19)
}.$colon$colon(x$20)
          });
          future.update(future().swap(x, y, nx, ny));
          processor.add(task)
        }
      else
        ()
    } catch {
      case (e @ (_: Exception)) => e.printStackTrace()
    };
    val _$finished = System.nanoTime;
    scala.Predef.println("(ActionPuzzle3,swipe)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def fill(): scala.Unit = {
    val _$started = System.nanoTime;
    val _$result: scala.Unit = {
      val filling = future().createFillingPuzzle(seed, COLUMN);
      if (filling.exists(((x$21) => x$21.isEmpty.unary_$bang)))
        {
          falling.update(falling().append(filling));
          future.update(fixed().append(falling()));
          val fillingMap = filling.toIndexMap;
          val indexed = filling.flatten.map(((p) => {
            <synthetic> private[this] val x$22 = fillingMap(p): @scala.unchecked match {
              case scala.Tuple2((x @ _), (y @ _)) => scala.Tuple2(x, y)
            };
            val x = x$22._1;
            val y = x$22._2;
            scala.Tuple3(p, x, y)
          }));
          val futureMap = futureIndices();
          val futureIndexed = filling.flatten.map(((p) => {
            <synthetic> private[this] val x$23 = futureMap(p): @scala.unchecked match {
              case scala.Tuple2((x @ _), (y @ _)) => scala.Tuple2(x, y)
            };
            val x = x$23._1;
            val y = x$23._2;
            scala.Tuple3(p, x, y)
          }));
          indexed.withFilter(((check$ifrefutable$1) => check$ifrefutable$1: @scala.unchecked match {
  case scala.Tuple3((p @ _), (x @ _), (y @ _)) => true
  case _ => false
})).foreach(((x$24) => x$24: @scala.unchecked match {
            case scala.Tuple3((p @ _), (x @ _), (y @ _)) => {
              p.x.update(x);
              p.y.update(COLUMN.$plus(y))
            }
          }));
          futureIndexed.$bar$greater(panelAdd)
        }
      else
        ();
      updateTargetPosition()
    };
    val _$finished = System.nanoTime;
    scala.Predef.println("(ActionPuzzle3,fill)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def cancelSwipingAnimation(panel: AP): scala.Unit = {
    val _$started = System.nanoTime;
    val _$result: scala.Unit = swiping().get(panel).foreach(((tasks) => tasks.foreach(((task) => {
      log("canceled!".$plus(panel));
      swiping().$plus$eq(panel.$minus$greater(swiping().get(panel).map(((x$25) => x$25.filterNot(((x$26) => x$26.$eq$eq(task))))).$bar(Nil)))
    }))));
    val _$finished = System.nanoTime;
    scala.Predef.println("(ActionPuzzle3,cancelSwipingAnimation)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def remove(panels: Seq[AP]): scala.Unit = {
    val _$started = System.nanoTime;
    val _$result: scala.Unit = {
      if (panels.isEmpty.unary_$bang)
        {
          <synthetic> private[this] val x$27 = fixedFuture.remove(panels): @scala.unchecked match {
            case scala.Tuple2((left @ _), (fallen @ _)) => scala.Tuple2(left, fallen)
          };
          val left = x$27._1;
          val fallen = x$27._2;
          fallen.foreach(((x$28) => x$28.foreach(cancelSwipingAnimation)));
          panelRemove(panels);
          fixed.update(left);
          falling.update(fallen.append(falling()));
          future.update(fixed().append(falling()))
        }
      else
        ();
      updateTargetPosition()
    };
    val _$finished = System.nanoTime;
    scala.Predef.println("(ActionPuzzle3,remove)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def updateTargetPosition(): scala.Unit = {
    val _$started = System.nanoTime;
    val _$result: scala.Unit = {
      val indices = futureIndices();
      falling().foreach(((row) => row.foreach(((p) => {
        <synthetic> private[this] val x$29 = indices(p): @scala.unchecked match {
          case scala.Tuple2((tx @ _), (ty @ _)) => scala.Tuple2(tx, ty)
        };
        val tx = x$29._1;
        val ty = x$29._2;
        p.tx.update(tx);
        p.ty.update(ty)
      }))))
    };
    val _$finished = System.nanoTime;
    scala.Predef.println("(ActionPuzzle3,updateTargetPosition)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def initialize(): scala.Unit = {
    val _$started = System.nanoTime;
    val _$result: scala.Unit = fill();
    val _$finished = System.nanoTime;
    scala.Predef.println("(ActionPuzzle3,initialize)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def update(delta: Float): scala.Unit = {
    val _$started = System.nanoTime;
    val _$result: scala.Unit = {
      updateFalling(delta);
      processor.update(delta)
    };
    val _$finished = System.nanoTime;
    scala.Predef.println("(ActionPuzzle3,update)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  def newPuzzleBuffer: ArrayBuffer[ArrayBuffer[AP]] = {
    val _$started = System.nanoTime;
    val _$result: ArrayBuffer[ArrayBuffer[AP]] = ArrayBuffer((0.until(ROW).map(((x$30) => ArrayBuffer.empty[AP])): _*));
    val _$finished = System.nanoTime;
    scala.Predef.println("(ActionPuzzle3,newPuzzleBuffer)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  val finishedBuf = ListBuffer.empty[AP];
  val continuedBuf = newPuzzleBuffer;
  val fallingBuffer = ArrayBuffer((0.until(ROW).map(((x$31) => ArrayBuffer.empty[AP])): _*));
  val fixedBuf = newPuzzleBuffer;
  val fixedTemp = mutable.Stack.empty[AP];
  def updateFalling(delta: Float): scala.Unit = {
    val _$started = System.nanoTime;
    val _$result: scala.Unit = {
      {
        val fallingCpy = falling();
        val width = fallingCpy.size;
        var x = 0;
        while$2(){
          if (x.$less(width))
            {
              {
                val applied = fallingCpy(x);
                val height = applied.size;
                var y = 0;
                while$1(){
                  if (y.$less(height))
                    {
                      {
                        val p = applied(y);
                        p.vy().$plus$eq(gravity.$times(delta));
                        if (p.update(delta))
                          finishedBuf.$plus$eq(p)
                        else
                          continuedBuf(x).$plus$eq(p);
                        y.$plus$eq(1)
                      };
                      while$1()
                    }
                  else
                    ()
                };
                x.$plus$eq(1)
              };
              while$2()
            }
          else
            ()
        }
      };
      if (finishedBuf.isEmpty.unary_$bang)
        {
          {
            var x = 0;
            while$4(){
              if (x.$less(ROW))
                {
                  {
                    val row = fallingBuffer(x);
                    row.clear();
                    var y = 0;
                    val conRow = continuedBuf(x);
                    val height = conRow.size;
                    while$3(){
                      if (y.$less(height))
                        {
                          {
                            row.$plus$eq(conRow(y));
                            y.$plus$eq(1)
                          };
                          while$3()
                        }
                      else
                        ()
                    };
                    x.$plus$eq(1)
                  };
                  while$4()
                }
              else
                ()
            };
            falling.update(fallingBuffer)
          };
          {
            var x = 0;
            while$7(){
              if (x.$less(ROW))
                {
                  {
                    val row = fixed()(x);
                    val length = row.size;
                    val buf = fixedBuf(x);
                    fixedTemp.clear();
                    var y = 0;
                    while$5(){
                      if (y.$less(length))
                        {
                          {
                            fixedTemp.push(row(y));
                            y.$plus$eq(1)
                          };
                          while$5()
                        }
                      else
                        ()
                    };
                    buf.clear();
                    while$6(){
                      if (fixedTemp.isEmpty.unary_$bang)
                        {
                          buf.$plus$eq(fixedTemp.pop());
                          while$6()
                        }
                      else
                        ()
                    };
                    x.$plus$eq(1)
                  };
                  while$7()
                }
              else
                ()
            }
          };
          finishedBuf.foreach(((p) => fixedBuf(p.tx()).$plus$eq(p)));
          fixed.update(fixedBuf);
          scanRemoveFill()
        }
      else
        ();
      var i = 0;
      while$8(){
        if (i.$less(ROW))
          {
            {
              continuedBuf(i).clear();
              i.$plus$eq(1)
            };
            while$8()
          }
        else
          ()
      };
      finishedBuf.clear()
    };
    val _$finished = System.nanoTime;
    scala.Predef.println("(ActionPuzzle3,updateFalling)".$plus(_$finished.$minus(_$started)));
    _$result
  };
  class AP extends GMatch3.Panel with Reactor {
    <paramaccessor> val n: Int = _;
    def <init>(n: Int) = {
      super.<init>();
      ()
    };
    val x = Var(0.0);
    val y = Var(0.0);
    val vx = Var(0.0);
    val vy = Var(0.0);
    val tx = Var(0);
    val ty = Var(0);
    lazy val isSwiping = swiping.map(((x$32) => x$32.get(AP.this).map(((x$33) => x$33.isEmpty.unary_$bang)).$bar(false)));
    lazy val isFalling = falling.map(((x$34) => x$34.exists(((x$35) => x$35.contains(AP.this)))));
    def matchTo(panel: Panel): Boolean = panel match {
      case (p @ (_: AP)) => n.$eq$eq(p.n)
      case _ => false
    };
    def update(delta: Float): Boolean = {
      val nx = x().$plus(vx().$times(delta));
      var ny = y().$plus(vy().$times(delta));
      val next = PartialFunction.condOpt(ty().$minus(1))(future()(tx()));
      val finished = next match {
        case Some((p @ _)) if fixed().exists(((x$36) => x$36.contains(p))) => ny.$minus(ty()).$less(0.0)
        case Some((p @ _)) if ny.$minus(p.y()).$less(1.0) => {
          ny = p.y().$plus(1);
          vy.update(p.vy());
          false
        }
        case _ => ny.$minus(ty()).$less(0.0)
      };
      if (finished)
        {
          ny = ty();
          clear()
        }
      else
        ();
      x.update(nx);
      y.update(ny);
      finished
    };
    def clear(): scala.Unit = {
      vx.update(0);
      vy.update(0)
    };
    override def toString: String = n.$plus("")
  }
}
[0m[[33mwarn[0m] [0mthere were 2 feature warning(s); re-run with -feature for details[0m
[0m[[33mwarn[0m] [0mtwo warnings found[0m
[0m[[0minfo[0m] [0mRunning com.glyph.Main [0m
[0m[[0minfo[0m] [0m{"screenClass":{"class":"com.glyph.scala.game.action_puzzle.screen.ActionScreen"},"assets":[{"_1":{"class":"com.badlogic.gdx.graphics.Texture"},"_2":["data/dummy.png","data/particle.png","data/sword.png"]},{"_1":{"class":"com.badlogic.gdx.scenes.scene2d.ui.Skin"},"_2":["skin/default.json"]}]}[0m
[0m[[0minfo[0m] [0mspecified resource directory:../common/src/main/resources=>/Users/glyph/Documents/sbt/scalagamerepo/desktop/../common/src/main/resources[0m
[0m[[0minfo[0m] [0mstart Memory Analyzer[0m
[0m[[0minfo[0m] [0mGdxFilePath:/Users/glyph/Documents/sbt/scalagamerepo/desktop/../common/src/main/resources/json/gameConfig.json[0m
[0m[[0minfo[0m] [0mload RFile:[0m
[0m[[0minfo[0m] [0mgameConfig.json[0m
[0m[[0minfo[0m] [0mGdxFilePath:/Users/glyph/Documents/sbt/scalagamerepo/desktop/../common/src/main/resources/constants/string.js[0m
[0m[[0minfo[0m] [0mload RFile:[0m
[0m[[0minfo[0m] [0mstring.js[0m
[0m[[0minfo[0m] [0mCreated LoadingScreen[0m
[0m[[0minfo[0m] [0msetScreen:com.glyph.scala.lib.libgdx.screen.LoadingScreen@74ca2c12[0m
[0m[[0minfo[0m] [0mshow StagedScreen[0m
[0m[[0minfo[0m] [0mpause![0m
[0m[[0minfo[0m] [0mloading...[0m
[0m[[0minfo[0m] [0mloading...[0m
[0m[[0minfo[0m] [0mloading...[0m
[0m[[0minfo[0m] [0mloading...[0m
[0m[[0minfo[0m] [0mloading...[0m
[0m[[0minfo[0m] [0mloading...[0m
[0m[[0minfo[0m] [0mloading...[0m
[0m[[0minfo[0m] [0mloading...[0m
[0m[[0minfo[0m] [0mloading...[0m
[0m[[0minfo[0m] [0mloading...[0m
[0m[[0minfo[0m] [0mloading...[0m
[0m[[0minfo[0m] [0mloading...[0m
[0m[[0minfo[0m] [0mloading...[0m
[0m[[0minfo[0m] [0mloading...[0m
[0m[[0minfo[0m] [0mloading...[0m
[0m[[0minfo[0m] [0mloading...[0m
[0m[[0minfo[0m] [0mloading...[0m
[0m[[0minfo[0m] [0mloading...[0m
[0m[[0minfo[0m] [0mloading...[0m
[0m[[0minfo[0m] [0mloading...[0m
[0m[[0minfo[0m] [0mloading...[0m
[0m[[0minfo[0m] [0mloading...[0m
[0m[[0minfo[0m] [0mloading...[0m
[0m[[0minfo[0m] [0mloading...[0m
[0m[[0minfo[0m] [0mloading...[0m
[0m[[0minfo[0m] [0mloading...[0m
[0m[[0minfo[0m] [0mloading...[0m
[0m[[0minfo[0m] [0mloading...[0m
[0m[[0minfo[0m] [0mGdxFilePath:/Users/glyph/Documents/sbt/scalagamerepo/desktop/../common/src/main/resources/json/gameConfig.json[0m
[0m[[0minfo[0m] [0mload RFile:[0m
[0m[[0minfo[0m] [0mgameConfig.json[0m
[0m[[0minfo[0m] [0mGdxFilePath:/Users/glyph/Documents/sbt/scalagamerepo/desktop/../common/src/main/resources/constants/string.js[0m
[0m[[0minfo[0m] [0mload RFile:[0m
[0m[[0minfo[0m] [0mstring.js[0m
[0m[[0minfo[0m] [0mGdxFilePath:/Users/glyph/Documents/sbt/scalagamerepo/desktop/../common/src/main/resources/constants/colors.js[0m
[0m[[0minfo[0m] [0mload RFile:[0m
[0m[[0minfo[0m] [0mcolors.js[0m
[0m[[0minfo[0m] [0m(GMatch3,initialize)6800000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,initializer)22358000[0m
[0m[[0minfo[0m] [0m(GMatch3,initialize)394000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,initializer)606000[0m
[0m[[0minfo[0m] [0m(GMatch3,initialize)339000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,initializer)554000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)3229000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,newPuzzleBuffer)1306000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,newPuzzleBuffer)176000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)1086000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)1257000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)19339000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)1798000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)398000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)4357000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)2989000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,toIndexMap)3079000[0m
[0m[[0minfo[0m] [0mGdxFilePath:/Users/glyph/Documents/sbt/scalagamerepo/desktop/../common/src/main/resources/constants/colors.js[0m
[0m[[0minfo[0m] [0mload RFile:[0m
[0m[[0minfo[0m] [0mcolors.js[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)6406000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)153588000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,initialize)153663000[0m
[0m[[0minfo[0m] [0msetScreen:com.glyph.scala.game.action_puzzle.screen.ActionScreen@298aa724[0m
[0m[[0minfo[0m] [0mshow StagedScreen[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)12256000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)15594000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)9620000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)9758000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)9458000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)9592000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10947000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)11097000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10074000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)10212000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)9369000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)9511000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)8669000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)8802000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)8646000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)8798000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)8441000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)8569000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)8337000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)8538000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)8517000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)8648000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)8326000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)8484000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)8153000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)8284000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)8368000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)8512000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11454000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)11691000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)9739000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)9910000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)7731000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)7867000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)7508000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)7652000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)7427000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)7562000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)20038000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)20189000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)6668000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)6814000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)16726000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)16875000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)24419000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)24559000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)5243000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)5374000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)5695000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)5829000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)5201000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)5322000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)5325000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)5459000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)6252000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)6523000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)5542000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)5694000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)6131000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)6277000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4741000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)4878000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)5079000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)5210000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4637000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)4774000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4854000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)5007000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)5541000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)5679000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)5882000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)6807000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4142000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)4375000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4135000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)4274000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4009000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)4143000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4068000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)4206000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4034000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)4205000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)3955000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)4094000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)53361000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)53518000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)2845000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)2981000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)2884000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)3018000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)2523000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)2658000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)2740000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)82000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)11000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)11000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)10000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)9693000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)144000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)27000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)27000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)40000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)27000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)133000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)37000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)27000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)32000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)18310000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)25222000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)1853000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)1964000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)200000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)1968000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)2531000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)29988000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)43915000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)43998000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)345000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)5151000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)36000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)27000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)30000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)30000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)29000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)64000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)59000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)34000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)35000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)128000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)34000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)34000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)35000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)35000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)35000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)7547000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)8918000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)462000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,remove)4443000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)266000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)282000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)2187000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)42539000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)72680000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)704000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)358000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)291000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)2743000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)578000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,toIndexMap)653000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)597000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)30359000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)112158000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)129139000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)129219000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)355000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)1099000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)33000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)29000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)29000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)29000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)29000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)48000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)42000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)58000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)39000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)65000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)39000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)40000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)29000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)29000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)37000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)3250000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)4218000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)359000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,remove)437000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)276000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)289000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)1882000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)555000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)32794000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)661000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)340000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)251000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)1904000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)773000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,toIndexMap)848000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)569000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)10628000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)47823000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)54775000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)54850000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)369000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)2060000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)36000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)30000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)29000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)29000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)44000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)82000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)39000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)54000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)30000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)43000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)42000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)43000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)29000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)30000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)31000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)42000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)4002000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)4864000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)545000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)605000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)192000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)561000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)1045000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)6710000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)15819000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)15892000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)377000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)955000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)31000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)105000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)39000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)39000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)39000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)53000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)30000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)46000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)47000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)47000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)30000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)30000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)30000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)45000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)2936000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)3805000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)7805000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)7917000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)195000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)578000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)1066000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)12961000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)19997000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)20072000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)407000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)16000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)3140000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)35000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)41000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)43000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)39000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)39000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)40000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)54000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)30000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)50000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)50000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)55000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)29000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)27000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)46000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)9809000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)10690000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)452000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)511000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)198000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)449000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)1076000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)12447000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)19977000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)20052000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)1355000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)12000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)19000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)5703000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)39000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)44000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)39000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)38000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)39000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)38000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)40000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)53000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)29000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)53000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)53000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)113000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)30000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)30000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)31000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)53000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)8303000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)10165000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)419000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)538000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)197000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)389000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)876000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)11755000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)17829000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)17908000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)474000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)10000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)10000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)10000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)10000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)1025000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)58000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)41000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)42000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)42000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)37000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)3221000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)40000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)54000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)31000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)57000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)57000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)57000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)31000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)30000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)30000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)57000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)8919000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)9896000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)376000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)437000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)198000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)389000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)880000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)11387000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)19472000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)19547000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1052000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1179000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1179000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1308000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1043000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1170000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1008000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1140000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1113000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1233000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1025000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1146000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1148000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1275000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)987000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1106000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)437000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)1000000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)48000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)40000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)39000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)38000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)37000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)38000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)53000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)53000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)30000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)56000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)56000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)58000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)34000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)34000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)35000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)56000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)2836000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)3815000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)316000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)374000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)178000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)304000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)2614000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)6977000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11840000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)11911000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)506000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)98000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)10000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)1437000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)49000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)39000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)39000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)39000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)48000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)58000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)339000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)54000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)30000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)57000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)57000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)57000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)38000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)39000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)38000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)59000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)3668000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)4653000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)296000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)356000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)203000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)288000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)3249000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)8433000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)14561000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)14636000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)490000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)996000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)47000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)38000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)39000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)40000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)53000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)53000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)54000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)53000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)30000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)56000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)57000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)56000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)98000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)41000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)68000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)53000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)2972000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)3896000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)252000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)313000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)194000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)239000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)767000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)5146000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10192000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)10266000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)498000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)10000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)1029000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)47000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)37000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)37000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)52000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)53000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)53000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)53000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)52000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)30000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)56000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)66000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)55000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)46000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)44000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)46000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)124000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)2991000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)3958000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)225000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)283000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)271000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)207000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)766000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)5184000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10411000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)10483000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)509000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)16000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)5284000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)53000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)36000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)50000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)51000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1706000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)51000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)56000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)51000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)29000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)58000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)55000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)53000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)69000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)46000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)46000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)58000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)10597000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)11647000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)5861000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,remove)1277000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)2845000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)5000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)270000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)265000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)1832000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)204000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)18459000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)2695000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)352000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)249000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)1953000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)534000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,toIndexMap)592000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)216000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)12060000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)42345000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)46886000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)46959000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)474000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)10000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)998000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)43000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)38000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)39000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)53000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)52000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)52000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)53000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)52000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)30000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)55000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)56000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)46000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)45000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)46000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)54000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)56000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)2943000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)3864000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)245000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)305000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)193000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)253000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)735000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)5096000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)9449000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)9518000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)526000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)1047000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)48000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)39000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)39000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)50000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)50000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)52000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)52000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)52000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)30000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)57000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)56000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)45000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)45000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)45000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)86000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)59000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)5878000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)6870000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)234000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)292000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)196000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)206000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)685000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)8015000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)24523000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)24597000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)707000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)827000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)563000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)664000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)800000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)932000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)575000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)696000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)594000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)712000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)582000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)704000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)595000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)718000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)605000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)722000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)634000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)757000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)580000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)701000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)577000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)745000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)575000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)695000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)596000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)715000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)577000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)701000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)602000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)719000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)611000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)733000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)599000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)763000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)576000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)699000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)576000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)700000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)584000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)869000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)609000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)912000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)41000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)32000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)32000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)45000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)45000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)45000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)45000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)9708000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)27000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)50000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1419000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)633000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)40000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)43000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)49000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)48000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)14938000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)16959000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)213000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)269000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)194000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)194000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)2214000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)19635000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)42920000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)43113000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)530000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)903000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)40000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)10486000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)56000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)45000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)46000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)55000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)55000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)49000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)50000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1314000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)41000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)41000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)48000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)47000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)48000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)16726000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)17733000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)517000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,remove)961000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)236000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)282000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)1910000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)152000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)10003000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)1141000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)1043000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)274000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)1998000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)584000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,toIndexMap)646000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)188000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)9626000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)37526000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)41363000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)41435000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)526000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)1028000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)44000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)35000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)33000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)48000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)49000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)52000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)81000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)52000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)34000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)53000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)52000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)41000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)38000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)37000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)130000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)330000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)3274000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)4254000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)292000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)355000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)196000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)217000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)9838000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)14638000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)18382000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)18455000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)1281000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)10000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)2958000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)44000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)33000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)36000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)46000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)51000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)50000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)51000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)52000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)44000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)66000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)52000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)42000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)42000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)41000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)52000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)51000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)4998000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)6756000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)178000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)235000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)332000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)7478000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)23557000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)30716000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)37112000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)37181000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)505000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)972000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)40000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)32000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)31000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)47000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)47000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)47000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)47000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)47000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)38000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)47000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)47000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)38000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)38000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)38000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)103000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)47000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)2758000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)17615000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)226000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)289000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)822000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)145000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)1284000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)19416000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)22475000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)22548000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)525000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)14000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)944000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)41000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)32000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)35000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)49000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)48000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)48000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)48000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)48000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)42000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)49000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)50000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)42000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)41000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)41000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)48000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)48000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)2694000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)3732000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)136000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)193000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)192000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)119000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)593000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)4688000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)7638000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)7710000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)510000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)931000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)41000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)35000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)35000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)47000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)667000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)134000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)147000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)52000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)46000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)49000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)48000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)38000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)38000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)38000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)48000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)48000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)4162000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)5122000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)117000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)173000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)373000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)108000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)768000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)6230000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)9496000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)9575000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)503000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)919000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)44000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)35000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)35000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)49000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)47000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)48000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)48000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)48000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)51000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)48000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)49000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)38000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)39000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)39000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)48000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)47000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)2745000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)3685000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)172000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)232000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)177000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)90000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)532000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)4610000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)7667000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)7734000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)352000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)471000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)339000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)465000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)317000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)410000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)516000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)636000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)339000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)509000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)342000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)462000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)552000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)678000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)337000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)458000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)341000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1769000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)344000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)467000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)345000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)468000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)341000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)465000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)347000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)476000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)348000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)504000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)457000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)581000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)492000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)924000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)46000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)36000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)50000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)49000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)49000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)47000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)49000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)49000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)47000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)50000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)50000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)41000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)42000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)43000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)49000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)49000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)2706000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)3585000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)89000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)144000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)185000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)70000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)528000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)4420000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)7416000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)7491000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)495000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)993000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)46000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)49000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)49000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)47000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)49000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)97000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)50000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)50000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)48000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)48000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)48000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)47000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)45000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)62000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)49000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)56000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)2866000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)3792000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)67000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)122000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)184000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)46000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)502000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)4581000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)7800000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)7870000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)501000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)1007000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)72000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)49000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)48000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)49000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)49000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)58000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)48000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)48000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)49000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)49000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)48000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)48000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)100000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)49000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)49000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)50000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)2921000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)3887000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)492000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,remove)593000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)230000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)314000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)3169000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)57000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)8528000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)642000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)528000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)268000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)2848000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)491000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,toIndexMap)546000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)92000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)10495000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)23090000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)25742000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)25995000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)168000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)293000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)153000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)259000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)189000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)314000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)181000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)318000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)190000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)448000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)171000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)295000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)167000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)350000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)166000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)291000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)166000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)291000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)165000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)288000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)163000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)285000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)163000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)287000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)164000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)287000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)166000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)288000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)159000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)275000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)486000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)792000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)167000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)287000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)169000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)296000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)176000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)321000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)170000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)312000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)170000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)298000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)168000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)295000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)329000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)455000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)153000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)263000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)162000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)283000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)168000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)294000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)161000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)284000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)168000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)297000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)157000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)275000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)168000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)307000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)155000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)275000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)156000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)358000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)181000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)584000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)155000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)276000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)172000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)308000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)155000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)277000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)162000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)305000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)164000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)297000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)160000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)280000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)163000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)280000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)162000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)281000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)161000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)302000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)163000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)294000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)170000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)295000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)163000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)292000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)484000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)12000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)9098000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)63000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)47000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)54000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)53000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)54000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)53000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)53000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)54000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)50000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)49000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)49000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)50000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)43000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)50000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)50000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)50000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)10971000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)11806000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)54000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)109000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)179000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)33000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)479000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)12604000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)14872000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)14941000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)488000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)982000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)58000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)54000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)54000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)53000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)54000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)54000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)53000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)54000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)53000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)54000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)51000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)53000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)51000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)54000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)53000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)53000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)3132000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)3956000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)42000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)97000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)188000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)29000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)532000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)4749000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)7733000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)7802000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)882000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)1421000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)64000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)54000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)53000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)53000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)53000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)80000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)62000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)50000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)51000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)51000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)51000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)55000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)47000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)45000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)46000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)46000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)3359000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)4582000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)19000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)76000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)193000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)13000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)485000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)5321000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)9334000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)9403000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)27000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)141000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)158000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)292000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)28000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)157000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)28000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)157000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)28000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)160000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)29000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)160000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)27000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)152000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)28000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)162000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)55000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)266000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)115000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)13000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)155000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)112000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)115000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)117000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)116000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)113000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)279000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)116000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)115000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)115000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)120000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)186000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)124000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)137000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)124000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)117000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)115000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)113000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)115000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)12000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)117000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)12000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)130000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)116000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)116000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)125000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)116000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)114000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)114000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)115000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)115000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)12000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)123000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)113000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)116000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)116000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)116000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)114000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)119000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)115000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)124000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)125000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)113000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)113000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)12000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)126000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)116000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)114000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)115000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)114000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)114000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)114000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)114000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)117000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)112000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)115000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)12000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)118000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)115000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)117000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)112000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)115000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)115000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)112000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)114000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)9000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)113000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)117000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)114000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)113000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)114000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)113000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)117000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)115000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)117000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)32000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)193000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)113000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)120000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)9000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)114000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)18000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)200000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)122000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)115000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)531000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)114000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)117000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)117000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)129000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)9000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)172000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)113000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)114000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)113000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)117000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)16000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)120000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)12000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)124000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)12000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)126000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)13000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)129000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)117000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)115000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)112000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)15000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)147000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)125000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)113000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)113000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)120000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)113000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)114000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)112000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)114000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)113000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)116000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)115000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)115000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)16000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)176000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)114000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)116000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)114000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)114000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)112000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)116000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)113000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)146000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)115000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)115000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)110000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)116000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)115000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)115000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)115000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)115000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)115000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)115000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)118000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)116000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)12000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)125000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)115000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)112000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)113000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)113000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)116000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)20000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)202000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)13000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)145000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)115000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)115000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)112000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)113000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)12000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)116000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)114000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)114000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)117000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)16000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)133000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)113000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)114000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)115000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)116000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)114000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)115000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)115000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)116000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)113000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)114000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)114000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)115000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)113000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)113000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)116000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)114000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)122000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)114000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)114000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)114000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)113000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)114000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)113000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)115000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)12000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)117000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)116000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)116000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)12000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)119000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)12000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)119000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)113000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)114000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)115000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)113000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)112000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)115000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)114000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)12000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)119000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)34000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)136000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)113000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)114000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)112000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)12000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)118000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)114000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)115000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)113000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)112000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)113000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)112000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)114000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)113000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)116000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)112000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)114000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)18000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)172000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)13000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)133000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)115000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)111000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)112000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)112000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)113000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)114000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)114000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)12000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)122000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)115000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)125000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)111000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)113000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)110000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)113000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)112000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)112000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)12000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)116000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)115000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)114000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)124000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)113000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)113000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)114000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)114000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)113000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)112000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)113000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)123000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)113000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)110000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)115000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)113000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)126000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)114000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)113000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)127000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)114000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)114000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)113000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)111000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)160000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)113000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)113000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)113000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)112000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)107000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)106000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)9000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)106000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)111000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)112000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)113000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)113000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)113000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)113000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)115000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)113000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)114000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)112000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)114000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)112000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)135000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)116000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)116000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)114000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)114000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)118000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)112000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)114000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)113000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)112000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)112000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)113000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)112000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)117000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)118000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)115000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)112000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)112000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)114000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)130000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)130000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)111000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)58000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)161000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)113000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)113000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)110000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)113000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)111000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)114000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)115000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)112000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)113000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)114000[0m
[0m[[0minfo[0m] [0mtotal heap: 3714kb[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)12000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)123000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)8000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)89000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)115000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)119000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)112000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)113000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)111000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)115000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)111000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)114000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)115000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)115000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)118000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)115000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)114000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)115000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)113000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)113000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)113000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)113000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)112000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)114000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)113000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)113000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)112000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)112000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)12000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)120000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)114000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)114000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)114000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)12000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)115000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)112000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)12000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)126000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)113000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)115000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)114000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)123000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)121000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)112000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)112000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)112000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)114000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)112000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)115000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)12000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)122000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)117000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)115000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)114000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)111000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)113000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)118000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)111000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)126000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)112000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)119000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)129000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)110000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)117000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)110000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)22000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)129000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)112000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)112000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)112000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)115000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)114000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)113000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)114000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)112000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)111000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)112000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)115000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)111000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)112000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)113000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)113000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)112000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)114000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)113000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)111000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)114000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)115000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)115000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)114000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)12000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)116000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)112000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)114000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)163000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)109000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)109000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)109000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)110000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)110000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)108000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)108000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)110000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)110000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)111000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)111000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)141000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)108000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)9000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)87000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)110000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)13000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)217000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)12000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)116000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)12000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)136000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)715000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)829000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)20000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)128000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)6000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)108000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)5000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)277000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)377000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)109000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)5000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)106000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)6000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)142000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)5000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)205000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)5000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)106000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)5000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)149000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)5000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)113000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)103000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)103000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)81000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)82000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)153000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)105000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)5000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)103000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)82000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)101000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)103000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)5000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)781000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)97000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)81000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)102000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)104000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)103000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)103000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)104000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)108000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)101000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)101000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)5000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)114000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)5000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)121000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)5000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)137000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)5000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)114000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)102000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)103000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)105000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)99000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)7000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)119000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)101000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)100000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)100000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)8000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)192000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)5000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)104000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)102000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)100000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)103000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)153000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)103000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)5000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)103000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)103000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)101000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)100000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)100000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)104000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)102000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)103000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)113000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)101000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)101000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)112000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)100000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)5000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)109000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)102000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)104000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)5000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)110000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)7000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)145000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)101000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)102000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)5000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)113000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)5000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)113000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)101000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)136000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)140000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)102000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)99000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)5000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)108000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)5000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)301000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)100000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)105000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)102000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)189000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)6000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)114000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)105000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)5000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)107000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)5000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)109000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)617000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)5000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)108000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)137000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)107000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)104000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)102000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)109000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)106000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)5000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)106000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)5000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)108000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)6000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)115000[0m
[0m[[0minfo[0m] [0mresume![0m
[0m[[0minfo[0m] [0msetScreen:com.glyph.scala.lib.libgdx.screen.LoadingScreen@74ca2c12[0m
[0m[[0minfo[0m] [0mshow StagedScreen[0m
[0m[[0minfo[0m] [0mloading...[0m
[0m[[0minfo[0m] [0mGdxFilePath:/Users/glyph/Documents/sbt/scalagamerepo/desktop/../common/src/main/resources/json/gameConfig.json[0m
[0m[[0minfo[0m] [0mload RFile:[0m
[0m[[0minfo[0m] [0mgameConfig.json[0m
[0m[[0minfo[0m] [0mGdxFilePath:/Users/glyph/Documents/sbt/scalagamerepo/desktop/../common/src/main/resources/constants/string.js[0m
[0m[[0minfo[0m] [0mload RFile:[0m
[0m[[0minfo[0m] [0mstring.js[0m
[0m[[0minfo[0m] [0mGdxFilePath:/Users/glyph/Documents/sbt/scalagamerepo/desktop/../common/src/main/resources/constants/colors.js[0m
[0m[[0minfo[0m] [0mload RFile:[0m
[0m[[0minfo[0m] [0mcolors.js[0m
[0m[[0minfo[0m] [0m(GMatch3,initialize)135000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,initializer)440000[0m
[0m[[0minfo[0m] [0m(GMatch3,initialize)129000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,initializer)265000[0m
[0m[[0minfo[0m] [0m(GMatch3,initialize)94000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,initializer)194000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)240000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,newPuzzleBuffer)155000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,newPuzzleBuffer)107000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)9967000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)466000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)226000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)1805000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)2821000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,toIndexMap)2903000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)545000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)38295000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,initialize)38344000[0m
[0m[[0minfo[0m] [0msetScreen:com.glyph.scala.game.action_puzzle.screen.ActionScreen@522103fb[0m
[0m[[0minfo[0m] [0mshow StagedScreen[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1658000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1766000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1544000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1638000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1663000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1779000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1595000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1694000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1632000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1744000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)3913000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)4075000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1371000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1469000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1299000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1413000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)2741000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)2848000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1743000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1856000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1484000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1631000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1566000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1674000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1295000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1399000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1286000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1387000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1301000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1390000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1290000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1394000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1934000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)2045000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1243000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1331000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1224000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1310000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1283000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1385000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1427000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1529000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1395000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1492000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1252000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1385000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1687000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1788000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1380000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1460000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)13969000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)14077000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1368000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1463000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1260000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1356000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1270000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1365000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1253000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1380000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1245000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1347000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1444000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1542000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1244000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1344000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1287000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1391000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1270000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1369000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1270000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1370000[0m
[0m[[0minfo[0m] [0mpause![0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1638000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1738000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1258000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1350000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1215000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1295000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1313000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1410000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1326000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1424000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)3231000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)3346000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1350000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1450000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1835000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1936000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1228000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1328000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1286000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1390000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1377000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1476000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1624000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1731000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1263000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1364000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1224000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1321000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1228000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1326000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1493000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1593000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1212000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1314000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1216000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1332000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)2536000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)2646000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1370000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1478000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1244000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1341000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1222000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1330000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1260000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1357000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1374000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1477000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)287000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)754000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)31000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)19000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)21000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)20000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)19000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)19000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)19000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)51000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)20000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)20000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)20000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)20000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)19000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)19000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)19000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2105000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)4564000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)5219000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)531000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)695000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)192000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)487000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)933000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)6991000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)9950000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)10007000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)324000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)859000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)24000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)19000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)19000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)19000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)19000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)20000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)51000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)45000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)24000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)24000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)24000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)24000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)24000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)24000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)24000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)24000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)2200000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)3008000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)291000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,remove)357000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)235000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)235000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)1798000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)406000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)5959000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)926000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)312000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)244000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)1946000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)548000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,toIndexMap)605000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)453000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)9395000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)18503000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)21441000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)21495000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)294000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)1769000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)26000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)19000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)20000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)19000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)19000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)42000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1662000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)368000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)26000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)26000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)26000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)26000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)27000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)18000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)18000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)18000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)5102000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)5780000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)1950000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,remove)353000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)394000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)897000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)2384000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)1135000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)10048000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)1491000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)301000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)3219000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)2185000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)483000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,toIndexMap)533000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)489000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)18663000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)34635000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)37434000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)37488000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)296000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)2284000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)26000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)18000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)18000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)19000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)33000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)26000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)27000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)37000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)29000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)30000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)38000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)20000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)33000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)19000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)19000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)20000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)6243000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)8071000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)402000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)450000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)178000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)1432000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)1863000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)10547000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)13647000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)13702000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)322000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)820000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)25000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)19000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)20000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)33000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)29000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)29000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)41000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)47000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)36000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)37000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)36000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)20000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)36000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)19000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)19000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)20000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)10263000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)11258000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)382000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)497000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)181000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)353000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)1531000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)13436000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)16717000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)16771000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)349000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)3513000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)25000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)18000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)33000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)27000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)26000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)26000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)26000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)36000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)36000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)37000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)36000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)19000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)36000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)18000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2872000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)20000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)7833000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)8519000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)346000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)393000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)176000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)1178000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)1616000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)10656000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)17885000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)17942000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)351000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)1780000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)26000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)35000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)27000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)39000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)43000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)43000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)43000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)19000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)43000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)19000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)19000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)218000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)3400000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)4101000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)1033000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)1103000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)194000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)960000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)1404000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)6742000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)9332000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)9383000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)378000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)749000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)39000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)27000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)27000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)27000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)27000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)38000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)44000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)45000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)44000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)19000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)34916000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)19000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)19000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)18000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)37116000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)37873000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)1270000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,remove)642000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)240000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)237000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)1829000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)241000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)28898000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)633000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)314000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)236000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)2067000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)1048000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,toIndexMap)1121000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)284000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)10419000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)77325000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)79671000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)79726000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)939000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1041000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)704000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)811000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)723000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1175000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1293000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1397000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)784000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)935000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)864000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)992000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)680000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)765000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)792000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)895000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)689000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)789000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)682000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)775000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)684000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)777000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)686000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)783000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)684000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)784000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)741000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)837000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)390000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)748000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)24000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)31000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)27000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)27000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)26000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)27000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)47000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)37000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)41000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)40000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)41000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)21000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)46000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)24000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)24000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)24000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)5290000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)6515000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)262000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)307000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)183000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)231000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)641000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)7605000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)9951000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)10015000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)348000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)765000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)25000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)33000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)29000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)27000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)39000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)38000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)39000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)42000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)51000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)40000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)19000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)43000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)27000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)27000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)38000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)2249000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)2896000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)338000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,remove)488000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)219000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)216000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)1603000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)224000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)9001000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)584000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)289000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)229000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)1990000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)6800000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,toIndexMap)6912000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)256000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)14701000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)27793000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)30141000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)30493000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)631000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)730000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)2750000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)2868000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)5835000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)5944000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1884000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)2035000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)632000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)723000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)687000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)778000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)648000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)749000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)306000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)702000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)33000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)25000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)24000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)24000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)24000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)24000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)35000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)34000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)41000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)42000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)42000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)16000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)42000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)20000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)20000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)20000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)2023000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)2594000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)246000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)292000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)184000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)217000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)628000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)3640000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)5992000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)6042000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)555000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)646000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)555000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)648000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)556000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)649000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)587000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)682000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)687000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)835000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4100000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)4201000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)818000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)920000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)540000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)637000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)526000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)623000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)540000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)630000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)597000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)689000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)529000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)619000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)319000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)710000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)33000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)24000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)23000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)23000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)24000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)24000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)35000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)41000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)41000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)43000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)41000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)16000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)41000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)20000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)20000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)19000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)2061000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)2644000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)232000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)276000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)182000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)211000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)621000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)3666000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)5903000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)5955000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)317000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)694000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)34000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)25000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)25000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)24000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)24000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)24000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)42000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)41000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)43000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)42000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)42000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)21000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)42000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)21000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)21000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)20000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)2043000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)2631000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)225000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)270000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)180000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)207000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)613000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)3702000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)5893000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)5945000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)323000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)716000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)35000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)25000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)24000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)32000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)25000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)32000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)41000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)69000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)42000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)43000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)41000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)24000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)42000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)20000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)20000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)20000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)2180000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)2776000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)218000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)262000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)185000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)222000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)634000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)3797000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)5951000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)6003000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)325000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)734000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)33000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)26000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)25000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)24000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)32000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)31000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)41000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)41000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)40000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)186000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)42000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)41000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)20000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)20000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)20000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)2517000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)3117000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)215000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)258000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)186000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)189000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)604000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)4107000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)6174000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)6265000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)317000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)715000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)34000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)25000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)24000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)31000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)31000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)31000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)42000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)42000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)41000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)42000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)42000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)32000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)42000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)20000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)21000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)20000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)2117000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)2756000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)361000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,remove)534000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)5000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)2000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)208000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)367000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)1926000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)231000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)6046000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)675000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)279000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)193000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)1498000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)498000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,toIndexMap)542000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)244000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)7163000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)16117000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)18365000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)18419000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)305000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)27000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)40000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)736000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)20000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)20000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)19000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)29000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)102000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)41000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)41000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)41000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)40000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)27000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)26000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)27000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)23000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)24000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)23000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)6558000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)7157000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)470000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)518000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)194000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)213000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)634000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)8433000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)50260000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)50313000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)323000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)13000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)721000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)20000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)20000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)19000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)39000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)40000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)39000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1146000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)43000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)41000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)27000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)29000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)29000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)3239000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)3897000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)927000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,remove)411000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)211000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)219000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)5736000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)211000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)11790000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)567000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)5641000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)215000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)1769000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)518000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,toIndexMap)564000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)190000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)11745000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)27604000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)30642000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)30696000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)281000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)772000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)20000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)20000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)21000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)42000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)43000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)42000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)41000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)41000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)27000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)24000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)23000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)24000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)32000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)2098000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)2657000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)206000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)249000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)182000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)192000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)851000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)3880000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)5471000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)5522000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)1208000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)10000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)5210000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)35000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)20000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)20000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)21000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)27000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)41000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)42000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)41000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1343000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)40000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)27000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)26000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)23000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)23000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)23000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)39000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)12778000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)14762000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)206000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)250000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)178000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)173000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)570000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)15720000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)17340000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)17390000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)297000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)704000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)33000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)20000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)20000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)21000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)41000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)42000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)42000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)41000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)50000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)29000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)25000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)25000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)24000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)38000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)3129000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)3719000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)184000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)225000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)169000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)171000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)551000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)4614000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)6429000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)6981000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)307000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)693000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)30000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)20000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)19000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)19000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)27000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)39000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)39000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)39000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)39000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)40000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)27000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)27000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)23000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)23000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)24000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)40000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)1999000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)2616000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)192000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)234000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)178000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)161000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)557000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)3531000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)5244000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)5293000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)2697000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)2806000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)277000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)374000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)305000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)403000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)239000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)358000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)326000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)676000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)29000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)20000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)19000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)26000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)26000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)39000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)40000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)39000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)40000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)39000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)30000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)30000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)39000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)23000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)23000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)41000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)1995000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)2622000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)176000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)220000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)183000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)150000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)558000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)3524000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)26931000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)26984000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)301000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)699000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)20000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)35000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)42000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)40000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)42000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)41000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)42000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)35000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)34000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)24000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)27000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)42000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)2164000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)2765000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)146000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)190000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)183000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)126000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)533000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)3612000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)5029000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)5080000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)334000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)1063000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)31000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)27000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)27000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)34000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)40000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)40000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)41000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)40000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)41000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)41000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)38000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)37000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)30000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)30000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)41000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)2505000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)3130000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)477000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)535000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)177000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)94000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)492000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)4279000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)5751000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)5804000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)335000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)108000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)1012000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)37000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)27000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)52000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)41000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)40000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)40000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)40000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)41000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)44000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)40000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)103000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)41000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)31000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)34000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)34000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)41000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)2666000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)3289000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)78000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)119000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)178000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)58000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)450000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)3978000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)5436000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)5491000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)677000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)716000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)41000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)35000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)440000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2692000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)671000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)31000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)30000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)58000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)27000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)37000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)25000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)26000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)26000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)6343000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)7312000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)114000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)160000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)185000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)41000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)449000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)8045000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)9490000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)9542000[0m
[0m[[0minfo[0m] [0mresume![0m
[0m[[0minfo[0m] [0msetScreen:com.glyph.scala.game.action_puzzle.screen.ActionScreen@522103fb[0m
[0m[[0minfo[0m] [0mshow StagedScreen[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)365000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)688000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)34000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)39000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)27000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)29000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)27000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)29000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)30000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)27000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)29000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)1971000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)2658000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)364000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,remove)489000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)5000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)2000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)187000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)213000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)1410000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)42000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)4792000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)605000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)285000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)222000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)2022000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)639000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,toIndexMap)689000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)61000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)8190000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)16094000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)21080000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)21135000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)81000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)177000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)87000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)186000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)101000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)216000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)84000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)182000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)83000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)181000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)84000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)176000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)87000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)187000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)81000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)175000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)80000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)175000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)80000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)172000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)81000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)703000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)81000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)174000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)88000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)186000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)85000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)180000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)85000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)184000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)85000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)179000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)87000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)183000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)83000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)174000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)80000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)173000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)87000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)185000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)82000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)175000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)82000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)200000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)100000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)215000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)88000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)200000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)330000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)798000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)29000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)29000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)29000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)29000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)29000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)29000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)29000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)27000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)27000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)27000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)2054000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)3442000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)46000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)88000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)172000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)28000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)411000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)4069000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)5356000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)5406000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)401000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)673000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)37000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)29000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)29000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)29000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)29000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)29000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)1927000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)2697000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)325000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,remove)510000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)2645000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)198000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)1379000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)12000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)7188000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)575000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)272000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)209000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)1453000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)485000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,toIndexMap)527000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)34000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)5712000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)15715000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)16949000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)17000000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)56000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)155000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)58000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)148000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)54000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)148000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)58000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)158000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)73000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)168000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)55000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)144000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)54000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)144000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)57000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)156000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)53000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)146000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)53000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)145000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)54000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)149000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)54000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)145000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)55000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)151000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)55000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)153000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)53000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)144000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)53000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)144000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)53000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)144000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)53000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)143000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)53000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)143000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4742000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)4897000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)55000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)150000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)50000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)152000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)51000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)142000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)53000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)173000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)51000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)138000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)377000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)625000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)38000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)29000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)29000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)29000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)29000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)29000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)30000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)29000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)29000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)29000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)29000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)29000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)29000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)30000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)29000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)1868000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)2510000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)13000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)49000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)235000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)9000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)480000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)3146000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)5692000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)5740000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)93000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)94000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)88000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)91000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)91000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)92000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)91000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)98000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)90000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)89000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)88000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)89000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)90000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)90000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)91000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)90000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)90000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)5000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)96000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)89000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)89000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)94000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)89000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)151000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)90000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)90000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)92000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)90000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)91000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)90000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)92000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)91000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)95000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)89000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)89000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)91000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)90000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)89000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)88000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)89000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)90000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)89000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)91000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)6000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)108000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,swap)81357000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)1471000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,swipe)126651000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)3641000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)152000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)156000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)156000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)154000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)406000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)189000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)191000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)170000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)156000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)201000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)3000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,swap)298000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)305000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)607000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)37000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)31000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)30000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)30000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)31000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)31000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)30000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)31000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)31000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)29000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)31000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)30000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)30000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)30000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)30000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)30000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)1848000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)2367000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)12000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)47000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)181000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)9000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)388000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)2907000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)16033000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)198000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)92000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)91000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)89000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)91000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)90000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)88000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)89000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)88000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)89000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)90000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)91000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)93000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)5000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)100000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)91000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)90000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)89000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)90000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)87000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)87000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)5000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)88000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)108000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)5000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)116000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)133000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)92000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)90000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)91000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)90000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,swap)299000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)1394000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,swipe)4094000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)160000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)157000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)5000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)188000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)163000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)155000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)157000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)158000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)157000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)158000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)155000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)155000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)158000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)158000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)155000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)156000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)158000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)157000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)162000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)162000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)3000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,swap)289000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)311000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)627000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)35000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)31000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)31000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)31000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)45000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)29000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)30000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)30000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)31000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)31000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)30000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)30000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)30000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)30000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)30000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)30000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)1870000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)2473000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)314000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,remove)507000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)3000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)186000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)191000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)1321000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)36000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)5027000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)854000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)268000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)186000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)1393000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)640000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,toIndexMap)680000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)67000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)6914000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)14522000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)19031000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)130000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)231000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)114000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)199000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)111000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)200000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)110000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)196000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)112000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)199000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)114000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)202000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)109000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)196000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)108000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)194000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)107000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)193000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)107000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)193000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)107000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)193000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)108000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)194000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)113000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)208000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)121000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)206000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)108000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)194000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)109000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)279000[0m
[0m[[0minfo[0m] [0mtotal heap: 2950kb[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)150000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)337000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)100000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)185000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)109000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)198000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)101000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)189000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)104000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)186000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)101000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)186000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)103000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)188000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)102000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)185000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)102000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)186000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)101000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)186000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)102000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)188000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)102000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)188000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)102000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)187000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)101000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)187000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)147000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)247000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)129000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)234000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)113000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)205000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)102000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)186000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)102000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)186000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)105000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)192000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)103000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)190000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)103000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)188000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)105000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)188000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)102000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)186000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)296000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)12000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)745000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)32000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)25000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)24000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)26000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)29000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)29000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)44000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)29000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)27000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)21000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)23000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)27000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)30118000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)30742000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)1082000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,remove)1331000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)8000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)2000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)202000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)198000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)10355000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)96000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)16150000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)736000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)807000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)196000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)1474000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)748000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,toIndexMap)791000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)118000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)7452000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)54426000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)56129000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)56162000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,swap)335000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)1834000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,swipe)5113000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)221000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)335000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)180000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)296000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)168000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)290000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)193000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)312000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)168000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)291000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)175000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)300000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)177000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)304000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,swap)390000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)1664000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,swipe)4604000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)163000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)316000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)169000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)328000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)167000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)321000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)172000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)330000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)166000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)325000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)183000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)403000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)168000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)327000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,swap)365000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)1773000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,swipe)4448000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)166000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)370000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)166000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,swap)327000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)292000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)711000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)144000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)26000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)26000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)25000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)25000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)32000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)32000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)36000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)37000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)66000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)38000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)15000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)23000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)22000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)36000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)32000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)1930000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)2461000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)280000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,remove)367000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)5000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)4000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)199000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)282000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)1531000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)143000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)4819000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)531000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)269000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)188000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)1428000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)474000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,toIndexMap)499000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)250000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)5818000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)13166000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)17882000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)285000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)475000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)204000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)365000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)588000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)749000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)201000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)357000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,swap)563000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)1402000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,swipe)4263000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)197000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)386000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)205000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)398000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)274000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)389000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)33000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)23000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)23000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)23000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)27000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)33000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)30000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)39000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)38000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)39000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)41000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)17000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)25000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)25000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)19000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)34000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)1367000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1885000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)154000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)178000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)179000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)129000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)447000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)2575000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4335000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)4572000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)278000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)388000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)99000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)443000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)24000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)26000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)25000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)33000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)29000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)39000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)73000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)35000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)35000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)15000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)27000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)19000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)31000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)1906000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)2429000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)175000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)208000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)184000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)123000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)450000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)3153000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4961000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)5132000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)283000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)412000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)43000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)22000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)25000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)25000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)25000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)31000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)27000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)35000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)35000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)35000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)35000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)15000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)30000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)29000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)19000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)31000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)1384000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1960000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)130000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)153000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)184000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)110000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)438000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)2618000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4216000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,swap)571000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)327000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)405000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)29000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)22000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)25000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)25000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)25000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)31000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)29000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)36000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)35000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)36000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)35000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)17000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)30000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)31000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)20000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)34000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)1477000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1997000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)130000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)154000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)547000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)119000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)818000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)3035000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)12059000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)697000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)390000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)32000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)24000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)24000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)24000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)24000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)30000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)34000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)34000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)35000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)34000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)15000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)66000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)32000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)19000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)33000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)1397000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)2330000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)118000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)142000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)181000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)99000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)438000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)2975000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4560000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)4696000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)292000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)856000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)35000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)24000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)25000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)24000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)24000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)123000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)34000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)35000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)34000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)34000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)15000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)34000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)34000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)19000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)31000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)1960000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)2486000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)106000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)130000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)199000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)86000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)430000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)3151000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4761000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)4890000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)130000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)288000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,swap)326000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)1660000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,swipe)4291000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)121000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)314000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)130000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)321000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,swap)310000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)1411000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,swipe)4298000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)128000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)360000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)129000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,swap)331000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)404000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)167000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)571000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)44000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)37000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)34000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)33000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)34000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)46000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)44000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)52000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)55000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)56000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)56000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)15000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)58000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)53000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)55000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)1792000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)2394000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)117000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)142000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)181000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)86000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)409000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)3011000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)8487000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)143000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)345000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)130000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)321000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)132000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)345000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)130000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)343000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)130000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)321000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)130000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)322000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)130000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)326000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)130000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,swap)319000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)323000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)401000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)41000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)36000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)34000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)33000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)34000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)44000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)43000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)52000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)54000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)55000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)55000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)15000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)55000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)54000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)54000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)1607000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)2122000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)97000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)120000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)180000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)86000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)407000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)2713000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)7577000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)138000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)309000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)292000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)409000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)48000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)36000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)34000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)33000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)34000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)44000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)53000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)51000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)54000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)54000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)53000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)22000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)53000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)52000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)52000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)1629000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)2287000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)91000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)115000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)180000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)81000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)401000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)2873000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4401000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)4601000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)306000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)399000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)46000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)34000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)32000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)31000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)32000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)52000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)50000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)48000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)51000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)51000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)52000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)25000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)51000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)49000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)50000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)1584000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)2115000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)82000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)104000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)169000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)97000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)4049000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)6332000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)7893000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)8023000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)297000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)388000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)48000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)36000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)33000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)32000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)44000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)54000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)53000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)51000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)53000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)55000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)55000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)32000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)55000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)52000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)53000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)1647000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)2174000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)80000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)106000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)183000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)68000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)395000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)2807000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4407000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)4533000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)297000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)391000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)47000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)36000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)33000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)42000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)44000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)52000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)51000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)50000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)53000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)53000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)54000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)37000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)55000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)53000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)29000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)53000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)1642000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)2180000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)73000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)96000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)208000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)61000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)412000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)2753000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)3909000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)4034000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)435000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)391000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)50000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)36000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)43000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)43000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)44000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)54000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)329000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)55000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)53000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)54000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)53000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)41000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)54000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)51000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)27000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)52000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)1956000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)2630000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)66000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)90000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)182000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)57000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)380000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)3185000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4349000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)4497000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)327000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)633000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)48000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)47000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)44000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)43000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)44000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)55000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)53000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)52000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)64000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)54000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)53000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)46000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)55000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)51000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)28000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)52000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)1946000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)2507000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)58000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)83000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)184000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)50000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)375000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)3031000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4137000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,swap)306000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)296000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)414000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)39000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)48000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1090000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)42000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)49000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)170000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)52000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)50000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)53000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)54000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)54000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)783000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)55000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)53000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)27000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)52000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)4072000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)4552000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)61000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)84000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)201000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)65000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)3070000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)7772000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)15992000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)3322000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)39000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)417000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)57000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)44000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)41000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)40000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)43000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)52000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)50000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)48000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)52000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)52000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)50000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)48000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)51000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)50000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)26000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)49000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)1656000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)5232000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)51000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)73000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)189000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)40000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)363000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)5732000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)6856000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)6958000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)73000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,swap)328000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)292000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)399000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)99000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)16000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)15000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)15000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)15000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)20000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)21000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)20000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)21000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)20000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)19000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)19000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)20000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)19000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)19000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)1299000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1855000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)293000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,remove)481000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)8000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)4000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)208000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)212000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)1466000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)95000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)12197000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)1042000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)268000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)276000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)1374000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)683000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,toIndexMap)710000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)159000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)20441000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)34563000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)49131000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)179000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)259000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)181000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)248000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)194000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)261000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)185000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)251000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)180000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)248000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)183000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)248000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)178000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)319000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)179000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)246000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)179000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)245000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)179000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)247000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)192000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)258000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)187000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)567000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)177000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)246000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)180000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)248000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)178000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)392000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)16000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)11000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)10000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)10000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)10000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)12000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)21000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)21000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)21000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)21000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)20000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)20000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)20000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)1100000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1555000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)131000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)156000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)178000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)116000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)438000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)2217000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)3084000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)3117000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)180000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)392000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)18000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)10000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)12000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)12000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)20000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)20000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)20000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)20000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)20000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)20000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)20000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)1193000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1605000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)1369000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)1412000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)173000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)104000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)415000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)3497000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4344000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)4377000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)179000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)384000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)15000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)11000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)11000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)12000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)11000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)20000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)20000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)21000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)20000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)21000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)20000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)13000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)21000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)1080000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1578000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)115000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)137000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)180000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)97000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)414000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)2194000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)3039000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)3070000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)194000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)383000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)16000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)14000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)24000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)12000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)12000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)20000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)21000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)20000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)21000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)22000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)21000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)15000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)21000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)1106000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1557000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)107000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)129000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)174000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)90000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)400000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)2149000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)2965000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)2996000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)210000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)446000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)15000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)12000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)12000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)12000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)12000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)12000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)19000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)20000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)19000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)20000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)19000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)20000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)16000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)118000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)1243000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1689000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)107000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)131000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)182000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)88000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)409000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)2295000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4006000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)4039000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)184000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)384000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)18000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)13000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)13000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)12000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)13000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)12000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)20000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)20000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)20000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)21000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)19000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)19000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)20000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)21000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)1099000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1508000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)96000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)119000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)175000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)79000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)390000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)2079000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)2867000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)2898000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)124000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)229000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)123000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)190000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)123000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)189000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)194000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)393000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)20000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)12000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)13000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)12000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)12000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)14000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)20000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)19000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)19000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)19000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)19000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)19000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)19000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)19000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)1095000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1666000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)377000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)435000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)224000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)86000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)450000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)2620000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)3489000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)3525000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)203000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)372000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)18000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)13000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)13000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)12000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)15000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)16000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)21000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)21000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)21000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)20000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)20000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)21000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)10000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)55000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)19000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)1126000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1511000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)82000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)104000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)170000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)68000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)374000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)2048000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)6166000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)6197000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)250000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)370000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)17000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)922000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1471000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)187000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,remove)470000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)6000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)2000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)258000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)190000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)1231000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)87000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)3999000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)538000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)250000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)183000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)1765000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)570000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,toIndexMap)596000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)100000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)5341000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)10872000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11585000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)11624000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)174000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)236000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,swipe)6000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)170000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)224000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)165000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)230000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)166000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)229000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)167000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)234000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)181000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)244000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)170000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)233000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)167000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)231000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,swap)324000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)1217000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,swipe)3059000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)468000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)603000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)163000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)284000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,swap)312000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)1317000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,swipe)3151000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)166000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)326000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)178000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)330000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)167000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)324000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)170000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)325000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)165000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)321000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)233000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)439000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,swap)356000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)1461000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,swipe)3374000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)259000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)351000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)100000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)934000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1379000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)77000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)320000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)188000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)51000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)376000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)2138000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)3009000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)3181000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,swap)318000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)1551000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,swipe)3393000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)195000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)360000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)868000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1242000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)62000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)83000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)172000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)50000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)355000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)1738000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)2647000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)2850000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)202000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)701000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)10000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)1208000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1600000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)57000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)78000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)656000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)52000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)854000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)2591000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)3622000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)3811000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)212000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)353000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)1092000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1489000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)57000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)78000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)172000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)46000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)349000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)1973000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)2863000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)3619000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)194000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)351000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)845000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1225000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)52000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)72000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)179000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)41000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)350000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)1704000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)3248000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)3438000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)215000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)544000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)1065000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1669000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)54000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)76000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)179000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)42000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)357000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)2163000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)2749000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)3023000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)61000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)470000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)61000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)283000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)190000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)13000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)374000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)1190000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1616000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)188000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,remove)409000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)222000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)201000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)1293000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)42000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)3251000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)516000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)247000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)198000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)1049000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)472000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,toIndexMap)495000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)47000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)4795000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)9738000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)10253000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)10461000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)190000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)364000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)887000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1310000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)46000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)68000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)184000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)37000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)354000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)1793000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)2363000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,swap)353000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)184000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)365000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)874000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1185000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)42000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)63000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)167000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)36000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)354000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)1671000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)6314000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)202000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)360000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)892000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1226000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)41000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)62000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)171000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)32000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)334000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)1679000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)2234000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)2403000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)194000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)394000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)1102000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1432000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)36000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)56000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)180000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)26000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)340000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)1889000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)2305000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,swap)793000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)181000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)351000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)27000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)824000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1092000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)35000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)58000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)1000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)174000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)25000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)333000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)1542000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)6686000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)40000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)219000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)51000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)204000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)110000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)266000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)74000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)226000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)40000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)200000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)40000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,swap)295000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)190000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)387000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)811000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1137000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)285000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,remove)419000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)5000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)3000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)185000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)183000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)1056000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)84000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)3499000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)553000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)264000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)182000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)906000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)568000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,toIndexMap)597000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)86000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)4172000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)8883000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)11626000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)184000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,swap)634000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)154000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)377000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)886000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1130000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)99000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)121000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)213000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)82000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)446000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)1757000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)4733000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)107000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)183000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)106000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)171000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)106000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)172000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)108000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)176000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)119000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)183000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)106000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)169000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)109000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)171000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)105000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)169000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)125000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)190000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)106000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)173000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)105000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)172000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)105000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)213000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)106000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)170000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)107000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)174000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)107000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)170000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)124000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)205000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)106000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)171000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)107000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)168000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,swipe)7000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)106000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)152000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)126000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)199000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,swipe)7000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)118000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)164000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)107000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)171000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)107000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)172000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,swap)305000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)948000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,swipe)2421000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)100000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)222000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)108000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)230000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)233000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)356000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)0[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)779000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1146000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)89000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)110000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)170000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)272000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)579000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)1893000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)2447000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)2540000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)181000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)354000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)773000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1138000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)143000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,remove)352000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)6000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)2000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)177000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)170000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)899000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)98000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)2758000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)685000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)270000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)342000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)962000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)513000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,toIndexMap)536000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)96000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)4493000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)8449000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)8989000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)9080000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)169000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)364000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)0[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)784000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1092000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)101000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)123000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)180000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)85000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)401000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)1676000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)2248000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)2335000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)161000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)648000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)7000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)0[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)1089000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1383000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)99000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)120000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)178000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)82000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)397000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)1959000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)2502000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)2590000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)163000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)364000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)0[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)789000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1083000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)94000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)116000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)177000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)80000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)392000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)1652000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)2176000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)2261000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)161000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)381000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)0[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)1070000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1364000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)90000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)112000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)177000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)85000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)397000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)1933000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)2454000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)2541000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,swap)331000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)941000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,swipe)2547000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)155000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)360000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)0[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)887000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1161000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)88000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)109000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)176000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)75000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)385000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)1714000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)2315000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)2460000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)171000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)361000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)0[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)0[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)0[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)793000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1093000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)81000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)103000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)256000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)122000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)575000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)1830000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4924000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)5045000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)108000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1018000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)106000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)267000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)175000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)382000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)1015000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1381000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)158000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,remove)361000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)5000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)1000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)2000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)185000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)182000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)925000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)164000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)3133000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)538000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)252000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)177000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)929000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)475000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,toIndexMap)498000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)134000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)4130000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)8708000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)9484000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)9631000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)443000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)689000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)169000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)329000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)168000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)329000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,swap)320000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)1967000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,swipe)3756000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)506000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)713000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)174000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)381000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)183000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,swap)271000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)144000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)364000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)793000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1024000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)122000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)144000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)177000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)108000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)421000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)1650000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)4712000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)205000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)375000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)171000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)331000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)170000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)332000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)232000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)432000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)220000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)420000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)195000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)374000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)169000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)330000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)213000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)547000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)176000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,swap)274000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)144000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)461000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)894000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1322000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)228000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)256000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)228000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)106000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)477000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)2156000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)4661000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)176000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)310000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)171000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)296000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)156000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)360000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)790000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1085000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)110000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)131000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)178000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)96000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)409000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)1686000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)2345000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)2444000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)162000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)357000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)785000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1079000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)102000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)124000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)178000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)88000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)400000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)1663000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)2375000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)2586000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)159000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)379000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)1359000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1656000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)98000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)119000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)193000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)85000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)410000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)2242000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)2834000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)2923000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)167000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)370000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)806000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1105000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)91000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)112000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)176000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)76000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)387000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)1663000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)2233000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)2327000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)168000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)358000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)788000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1090000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)81000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)102000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)176000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)68000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)379000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)1628000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)2184000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,swap)309000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)162000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)359000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)1824000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)2107000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)136000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)162000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)4000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)184000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)72000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)473000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)2828000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)7304000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)179000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)361000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)14000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)965000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1291000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)73000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)95000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)176000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)61000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)371000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)1815000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)2375000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)2420000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)174000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)361000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)788000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1097000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)65000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)86000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)177000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)54000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)364000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)1607000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)2117000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)2146000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)114000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)179000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)103000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)167000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)184000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)355000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)762000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1075000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)57000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)77000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)208000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)47000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)384000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)1594000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)2495000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)2525000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)182000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)360000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)789000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1098000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)53000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)75000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)177000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)384000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)705000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)1937000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)2435000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)2467000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)184000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)53000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)437000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)940000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1458000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)174000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,remove)412000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)6000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)2000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)176000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)190000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)907000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)54000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)2807000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)572000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)257000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)179000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)904000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)486000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,toIndexMap)509000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)61000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)3981000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)8312000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)8769000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)8802000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)179000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)358000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)17000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)798000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1112000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)63000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)84000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)179000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)50000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)362000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)1618000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)2114000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)2144000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)178000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)431000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)865000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1176000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)58000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)80000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)176000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)45000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)355000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)1670000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)2162000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)2193000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)178000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)13000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)368000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)1064000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1379000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)55000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)76000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)192000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)41000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)368000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)1880000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)2357000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)2388000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)85000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)153000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)79000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)146000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)79000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)158000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)79000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)142000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,swap)323000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)889000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,swipe)2569000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)80000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)197000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)79000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)201000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)79000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)200000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,swap)380000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)982000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,swipe)2594000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)80000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)252000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)79000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)235000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)80000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)236000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)80000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)300000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)81000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)240000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,swap)305000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)691000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,swipe)2212000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)68000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)257000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)80000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)272000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)79000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)273000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)79000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)288000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)79000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)273000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)92000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)281000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,swap)297000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)1105000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,swipe)2610000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)72000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)309000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)79000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)309000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)79000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)329000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)84000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)341000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)80000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,swap)324000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)173000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)367000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)805000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1067000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)47000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)69000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)176000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)36000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)344000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)1537000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)4584000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)196000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)503000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)942000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1271000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)41000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)63000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)182000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)31000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)349000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)1741000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)2218000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)2394000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,swap)291000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)1055000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,swipe)2642000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)237000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)354000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)785000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1133000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)32000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)53000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)175000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)25000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)333000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)1577000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)2009000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)2232000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)189000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)382000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)1192000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1561000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)32000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)53000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)185000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)18000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)338000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)2015000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)2442000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,swap)337000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)182000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)9000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)376000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)981000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1250000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)25000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)45000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)174000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)19000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)322000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)1674000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)6618000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,swap)286000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)695000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,swipe)2172000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)188000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)360000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)816000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1167000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)175000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,remove)424000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)159000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)174000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)672000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)13000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)6010000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)560000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)225000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)139000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)656000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)464000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,toIndexMap)486000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)22000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)3742000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)11024000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)11447000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)11889000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)35000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)281000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)38000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)273000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,swap)279000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)691000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,swipe)2214000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)32000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,swap)316000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)181000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)11000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)377000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)811000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1095000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)25000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)46000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)178000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)18000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)327000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)1528000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)4351000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)36000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)280000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,swap)282000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)832000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,swipe)2355000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)31000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)296000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)38000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)395000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)35000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)302000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,swap)272000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)911000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,swipe)2412000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)28000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)325000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)36000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,swap)312000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)183000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)368000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)800000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1072000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)26000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)46000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)177000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)24000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)334000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)1511000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)4131000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,swap)272000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)762000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,swipe)2270000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)31000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)362000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)48000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)352000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)36000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)351000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)36000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)343000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)35000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)342000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,swap)276000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)657000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,swipe)2254000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)30000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)364000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)36000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,swap)345000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)181000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)363000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)48000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)60000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)945000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1220000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)28000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)49000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)177000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)18000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)329000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)1658000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)4258000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)36000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,swap)316000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)196000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)361000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)816000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1102000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)29000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)49000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)94000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)181000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)20000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)437000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)1646000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)4269000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)37000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)333000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)36000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)304000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,swap)281000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)653000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,swipe)2135000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)32000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)350000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)38000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,swap)387000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)184000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)385000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)884000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1161000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)27000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)50000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)179000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)20000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)336000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)1607000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)4446000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,swap)355000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)645000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,swipe)2365000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)31000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)343000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)36000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,swap)306000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)183000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)364000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)810000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1126000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)174000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,remove)436000[0m
[0m[[0minfo[0m] [0mActionPuzzle3: canceled!1[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)24126000[0m
[0m[[0minfo[0m] [0mActionPuzzle3: canceled!3[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)922000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)2000[0m
[0m[[0minfo[0m] [0mActionPuzzle3: canceled!2[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)830000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)2000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)173000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)151000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)609000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)55000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)28754000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)518000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)229000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)188000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)634000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)484000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,toIndexMap)507000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)59000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)3597000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)33538000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)36406000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)118000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)404000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)136000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)3062000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)137000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)2520000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)140000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)346000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,swap)307000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)651000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,swipe)2204000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)118000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)350000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,swap)318000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)690000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,swipe)2242000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)114000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)419000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)131000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)394000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)119000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)2275000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)135000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)375000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,swap)317000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)929000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,swipe)2487000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)109000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)388000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)120000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)386000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)122000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)394000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)118000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)389000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)118000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,swap)306000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)156000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)346000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)763000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1010000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)68000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)90000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)626000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)59000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)830000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)1988000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)5033000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)118000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,swap)300000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)205000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)748000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)1184000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1486000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)70000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)91000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)179000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)53000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)367000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)2004000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)4524000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)119000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)325000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,swap)293000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)803000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,swipe)2404000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)115000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)347000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)194000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)493000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)118000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)352000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)119000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)349000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)124000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)361000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)117000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)354000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)122000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,swap)304000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)160000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)364000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)0[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)793000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1041000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)66000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)87000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)177000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)53000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)365000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)1550000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)4046000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)176000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)358000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)1080000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1391000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)60000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)82000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)181000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)53000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)370000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)1902000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)2578000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,swap)609000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)162000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)362000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)790000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1034000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)55000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)77000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)167000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)49000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)349000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)1518000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)6516000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)176000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)428000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)851000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1157000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)53000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)74000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)172000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)40000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)344000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)1633000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)2181000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)2314000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,swap)300000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)638000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,swipe)2090000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)190000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)404000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)813000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1134000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)80000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)102000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)166000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)34000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)328000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)1619000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)2173000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)2354000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)200000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)349000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)791000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1128000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)40000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)62000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)312000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)32000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)482000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)1732000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)5864000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,swap)329000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)174000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)487000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)912000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1177000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)43000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)64000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)205000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)30000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)372000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)1670000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)9999000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,swap)317000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)862000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,swipe)2501000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)183000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)248000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)668000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)960000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)27000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)48000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)189000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)22000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)402000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)1469000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1928000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)2119000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)190000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)144000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)524000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)876000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)160000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,remove)405000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)144000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)151000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)628000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)21000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)2375000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)460000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)230000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)153000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)626000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)488000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,toIndexMap)508000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)23000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)3534000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)6839000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)7273000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)7428000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)184000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)11000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)180000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)623000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)930000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)25000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)44000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)177000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)17000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)318000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)1343000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1757000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1922000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,swap)324000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)625000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,swipe)2228000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)35000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,swap)296000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)186000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)162000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)549000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)818000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)27000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)46000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)179000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)17000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)316000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)1232000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)3308000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)40000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)251000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)39000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)223000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,swap)338000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)642000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,swipe)2635000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)34000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)259000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)49000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)300000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)37000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)264000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)37000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)265000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,swap)389000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)748000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,swipe)1938000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)30000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)321000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)38000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)285000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)37000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)311000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,swap)307000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)637000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,swipe)1611000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)29000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,swap)286000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)178000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)196000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)588000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)849000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)27000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)46000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)178000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)17000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)315000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)1260000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)3651000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)38000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1011000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,swap)397000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)631000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,swipe)1772000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)32000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)587000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)38000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)318000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)36000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)385000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)38000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)301000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)36000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,swap)387000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)176000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)144000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)806000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1065000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)26000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)44000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)171000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)17000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)306000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)1465000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)2948000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)40000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)377000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)37000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,swap)386000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)170000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)143000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)533000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)780000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)32000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)51000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)173000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)17000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)305000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)1184000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)2588000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)39000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)302000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)40000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)258000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)40000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,swap)328000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)185000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)145000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)520000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)792000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)25000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)43000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)278000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)20000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)520000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)1406000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)2751000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)45000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)235000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)39000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)215000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)42000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)234000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)38000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,swap)487000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)179000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)153000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)3000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)539000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)804000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)26000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)44000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)193000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)24000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)338000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)1235000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)2722000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)39000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)202000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)40000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)204000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)39000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,swap)367000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)177000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)150000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)573000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)876000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)167000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,remove)480000[0m
[0m[[0minfo[0m] [0mActionPuzzle3: canceled!1[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)408000[0m
[0m[[0minfo[0m] [0mActionPuzzle3: canceled!3[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)275000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)1000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)1000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)1000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)1000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)153000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)147000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)656000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)54000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)3435000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)630000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)242000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)140000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)992000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)520000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,toIndexMap)540000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)60000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)5008000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)9386000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)10709000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)114000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)240000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)117000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)244000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)119000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1075000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)118000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)199000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)114000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)178000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)114000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)180000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)115000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)180000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)126000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)744000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)115000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)179000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)116000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)180000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)122000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)187000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)113000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)177000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)116000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)177000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)126000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)187000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)114000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)180000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)166000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)171000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)550000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)838000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)60000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)79000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)175000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)47000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)344000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)1311000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1896000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1927000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)166000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)170000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)0[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)551000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)841000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)57000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)76000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)177000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)46000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)516000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)1484000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)2038000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)2071000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)170000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)180000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)4000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)8000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)0[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)566000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)854000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)59000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)85000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)176000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)43000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)342000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)1351000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)2128000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)2208000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)260000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)145000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)0[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)518000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)906000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)59000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)78000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)178000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)47000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)592000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)1626000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)2296000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)2327000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)100000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)163000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)106000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)172000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)154000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)221000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)127000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)200000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)99000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)164000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)98000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)162000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)99000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)163000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)172000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)150000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)952000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1258000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)56000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)75000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)181000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)38000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)345000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)1728000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)2257000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)2289000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)174000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)180000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)562000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)858000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)48000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)66000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)177000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)34000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)332000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)1305000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1817000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1848000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)180000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)187000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)570000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)914000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)160000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,remove)1164000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)7000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,cancelSwipingAnimation)15000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)206000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)152000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)614000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)43000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)3536000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)466000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)236000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)138000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)568000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)488000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,toIndexMap)509000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)41000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)3387000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)7888000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)8372000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)8407000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)171000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)149000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)527000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)825000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)54000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)73000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)180000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)39000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)344000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)1293000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1824000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1855000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)174000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)279000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)669000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)970000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)54000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)73000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)179000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)37000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)340000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)1637000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)2167000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)2200000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)187000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)3264000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)3663000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)3990000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)52000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)70000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)180000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)36000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)341000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)4451000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)4983000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)5017000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)196000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)153000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)538000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)860000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)46000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)65000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)176000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)34000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)331000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)1322000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1813000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1844000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)78000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)145000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)78000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)144000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)78000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)141000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)128000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)194000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)90000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)151000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)78000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)142000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)78000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)143000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)79000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)143000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)78000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)146000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)77000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)141000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)78000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)142000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)79000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)144000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)76000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)140000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)84000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)218000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)92000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)155000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)78000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)144000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)78000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)145000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)77000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)144000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)79000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)143000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)79000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)144000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)78000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)142000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)78000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)142000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)177000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)180000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)564000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)864000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)40000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)59000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)174000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)30000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)326000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)1299000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1784000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1815000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)182000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)166000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)558000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)860000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)35000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)53000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)175000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)26000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)322000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)1287000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1758000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1789000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)196000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)172000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)555000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)875000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)30000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)49000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)3000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)176000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)21000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)318000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)1291000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1725000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1755000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)186000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)183000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)661000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)1016000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)173000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,remove)422000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)154000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)143000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)609000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)21000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)2360000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)441000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)237000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)146000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)610000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)485000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,toIndexMap)508000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)25000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)3328000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)6756000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)7180000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)7213000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)185000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)183000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)6000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)663000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)972000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)28000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)47000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)176000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)17000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)315000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)1385000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1829000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1861000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)37000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)104000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)37000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)104000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)49000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)110000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)36000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)100000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)36000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)100000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)36000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)102000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)41000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)107000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)37000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)101000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)36000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)100000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)36000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)99000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)36000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)99000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)37000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)101000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)37000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)100000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)36000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)99000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)36000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)99000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)36000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)100000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)42000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)121000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)36000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)100000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)36000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)100000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)36000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)100000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)35000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)100000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)36000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)101000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)37000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)104000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)35000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)101000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)36000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)102000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)36000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)101000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)47000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)124000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)39000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)109000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)39000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)109000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)36000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)98000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)37000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)99000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)78000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)145000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)39000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)234000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)53000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)116000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)36000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)101000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)36000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)100000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)36000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)99000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)37000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)99000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)36000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)101000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)39000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)103000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)37000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)102000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)36000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)100000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)35000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)101000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)37000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)107000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)208000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)151000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)536000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)863000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)25000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)43000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)1000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)174000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)17000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)376000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)1332000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)1757000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)1788000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)189000[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,verticalLine)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,horizontalLine)0[0m
[0m[[0minfo[0m] [0m(GMatch3,allLine)170000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)5000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)1000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,segment2)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,scanAll)555000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanAllDistinct2)909000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fixedFuture)170000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,remove)437000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)146000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)145000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)669000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)20000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,remove)2460000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,createFillingPuzzle)2000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,seed)2000[0m
[0m[[0minfo[0m] [0m(GMatch3,createFillingPuzzle)449000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)223000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,append)179000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)580000[0m
[0m[[0minfo[0m] [0m(GMatch3,toIndexMap)464000[0m
[0m[[0minfo[0m] [0m(PuzzleImpl,toIndexMap)484000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateTargetPosition)20000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,fill)3317000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,scanRemoveFill)6737000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)7183000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)7233000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)40000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)101000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)42000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)105000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)54000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)116000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)41000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)110000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)40000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)104000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)41000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)107000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)51000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)128000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)51000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)132000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)74000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)156000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)240000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)373000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)50000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)132000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)50000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)130000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)48000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)129000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)42000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)108000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)41000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)105000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)41000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)107000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)42000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)106000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)45000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)113000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)40000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)103000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)41000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)106000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,updateFalling)45000[0m
[0m[[0minfo[0m] [0m(ActionPuzzle3,update)112000[0m
[0m[[0minfo[0m] [0mpause![0m
java.lang.RuntimeException: Nonzero exit code returned from runner: 255
	at scala.sys.package$.error(package.scala:27)
[0m[[31mtrace[0m] [0mStack trace suppressed: run [34mlast desktop/compile:run[0m for the full output.[0m
[0m[[31merror[0m] [0m(desktop/compile:[31mrun[0m) Nonzero exit code returned from runner: 255[0m
[0m[[31merror[0m] [0mTotal time: 153 s, completed 2013/11/15 23:00:44[0m
